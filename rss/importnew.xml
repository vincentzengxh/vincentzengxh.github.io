<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>ImportNew - chuansong.me</title><link>http://chuansong.me/account/importnew?start=60</link><description>专注 Java 和 Android 技术分享。ImportNew 由两个 Java 关键字 import 和 new 组成。意指：Java</description><lastBuildDate>Thu, 29 Dec 2016 16:06:02 -0000</lastBuildDate><ttl>10</ttl><item><title>如何防止单例模式被JAVA反射攻击</title><link>http://chuansong.me/n/1252052325043</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：朱小厮&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：blog.csdn.net/u013256816/article/details/50525335&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;单例模式相信大家都知道，用过的人不在少数。之前写过一篇博文《singleton模式四种线程安全的实现》（参见：http://blog.csdn.NET/u013256816/article/details/50427061），讲诉了单例模式的四种写法，并指出占位符模式的写法比较ok，详见如下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.effective.singleton;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class Elvis  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private static boolean flag = false;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private Elvis(){  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private  static class SingletonHolder{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        private static final Elvis INSTANCE = new Elvis();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static Elvis getInstance()  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return SingletonHolder.INSTANCE;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void doSomethingElse()  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但这都是基于一个条件：确保不会通过反射机制调用私有的构造器。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里举个例子，通过JAVA的反射机制来“攻击”单例模式：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.effective.singleton;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Constructor;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.InvocationTargetException;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class ElvisReflectAttack  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args) throws InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Class&lt;? ?&gt; classType = Elvis.class;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Constructor&lt;? ?&gt; c = classType.getDeclaredConstructor(null);  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        c.setAccessible(true);  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Elvis e1 = (Elvis)c.newInstance();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Elvis e2 = Elvis.getInstance();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println(e1==e2);  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;运行结果：false&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以看到，通过反射获取构造函数，然后调用setAccessible(true)就可以调用私有的构造函数，所有e1和e2是两个不同的对象。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果要抵御这种攻击，可以修改构造器，让它在被要求创建第二个实例的时候抛出异常。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;经修改后：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.effective.singleton;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class ElvisModified  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private static boolean flag = false;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private ElvisModified(){  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        synchronized(ElvisModified.class)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            if(flag == false)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                flag = !flag;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            else &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                throw new RuntimeException("单例模式被侵犯！");  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private  static class SingletonHolder{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        private static final ElvisModified INSTANCE = new ElvisModified();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static ElvisModified getInstance()  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return SingletonHolder.INSTANCE;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void doSomethingElse()  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;测试代码：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.effective.singleton;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Constructor;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class ElvisModifiedReflectAttack  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        try &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            Class&lt;elvismodified&gt; classType = ElvisModified.class;  &lt;/elvismodified&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            Constructor&lt;elvismodified&gt; c = classType.getDeclaredConstructor(null);  &lt;/elvismodified&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            c.setAccessible(true);  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            ElvisModified e1 = (ElvisModified)c.newInstance();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            ElvisModified e2 = ElvisModified.getInstance();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            System.out.println(e1==e2);  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        catch (Exception e)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            e.printStackTrace();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;运行结果：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Exception in thread "main" java.lang.ExceptionInInitializerError  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at com.effective.singleton.ElvisModified.getInstance(ElvisModified.java:27)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at com.effective.singleton.ElvisModifiedReflectAttack.main(ElvisModifiedReflectAttack.java:17)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Caused by: java.lang.RuntimeException: 单例模式被侵犯！  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at com.effective.singleton.ElvisModified.&lt;init&gt;(ElvisModified.java:16)  &lt;/init&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at com.effective.singleton.ElvisModified.&lt;init&gt;(ElvisModified.java:7)  &lt;/init&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at com.effective.singleton.ElvisModified$SingletonHolder.&lt;clinit&gt;(ElvisModified.java:22)  &lt;/clinit&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    ... 2 more&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以看到，成功的阻止了单例模式被破坏。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;从JDK1.5开始，实现Singleton还有新的写法，只需编写一个包含单个元素的枚举类型。推荐写法：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.effective.singleton;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public enum SingletonClass  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    INSTANCE;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void test()  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("The Test!");  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;测试代码：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.effective;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Constructor;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.InvocationTargetException;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import com.effective.singleton.SingletonClass;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class TestMain  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args) throws NoSuchMethodException, SecurityException, InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Class&lt;singletonclass&gt; classType = SingletonClass.class;  &lt;/singletonclass&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Constructor&lt;singletonclass&gt; c = (Constructor&lt;singletonclass&gt;) classType.getDeclaredConstructor();  &lt;/singletonclass&gt;&lt;/singletonclass&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        c.setAccessible(true);  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        c.newInstance();  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;运行结果：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Exception in thread "main" java.lang.NoSuchMethodException: com.effective.singleton.SingletonClass.&lt;init&gt;()  &lt;/init&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at java.lang.Class.getConstructor0(Unknown Source)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at java.lang.Class.getDeclaredConstructor(Unknown Source)  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    at com.effective.TestMain.main(TestMain.java:22)&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由此可见这种写法也可以防止单例模式被“攻击”。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;而且这种写法也可以防止序列化破坏单例模式，具体不在举例了，有关序列化以及单例模式被序列化破坏可以参考博文《JAVA序列化》（链接：http://blog.csdn.net/u013256816/article/details/50474678）。&lt;/p&gt;&lt;p&gt;单元素的枚举类型已经成为实现Singleton模式的最佳方法。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1252052325043</guid></item><item><title>一次皆大欢喜的程序员跳槽加薪</title><link>http://chuansong.me/n/1245393325942</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;伯乐在线专栏作者- GG2014&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(62, 62, 62); font-size: 14px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"&gt;链接：http://blog.jobbole.com/93576/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 82, 255); text-decoration: underline; line-height: 1.6; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;a csmlink="MncTJc" href="http://chuansong.me/n/351521825448" style="color: rgb(0, 82, 255); max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;" target="_blank"&gt;点击 → 了解如何加入专栏作者&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我的朋友 A 君是个典型的 .NET 开发人员，技术不错，人品也不错，在一家小公司（姑且称为甲公司）做项目开发，是技术骨干。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3 个月前，他找到我说想跳槽，让我帮忙介绍工作。我说为什么想跳了？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;1. 为什么想离职？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;他简单说了一下他在甲公司当时的状况：A君在甲公司做了两年多，这两年多完成了一个大项目，作为开发的核心主力，开发压力很大，特别是项目上线前的几个月是非常辛苦，几乎每晚都要加班到12点以后，周末最多只有一天休息。在最困难的时候，老板给大家大气，“大家再坚持坚持，项目上线赚钱了，就给大家涨工资，公司是绝对不会亏待大家的”，在老板豪情壮语的加薪鼓励下，大家要紧牙关拼上了。终于，半年前，项目上线了，运行也慢慢稳定了，公司赚钱也多了起来。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;是的，公司赚钱了，利润很可观，这是大家都知道的事情。但是，一两个月过去了，加薪的事情完全没影，老板就像从来没提过一样。于是，A君向人事经理说出了希望加薪的请求，最后，得到的回复（在小公司，这当然是老板的意思）：（1）A君目前的工资与外面相比，基本是持平的。（2）A君目前的工作很悠闲，工作量不饱和。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;关于（1）实际上是个难题，两个人的工资要怎么比较，几乎都是老板一个非常主观的想法。而关于（2），却是事实：由于新的项目还在调研中，所以，A君的工作暂时就轻松了不少，主要就是维护线上的系统，加加小功能，修修小bug，比较清闲。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;2. 老板很有骨气&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;A君听到回复后，很是生气，在和同事们一起吃饭时，就忍不住埋怨起公司来，后来，这话传到了老板的耳朵里，老板很有骨气：越是抱怨，越不给你涨工资，看你怎么样。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;终于，A决定离职，老板一如既往的有骨气：离职就离职，离开你公司就得关门了？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所以，就回到了开头的一幕，3个月前，A要我帮忙介绍工作。我刚好想到之前另外一个乙公司的技术经理联系我说，他下面有个B君想离职，希望我推荐个人，事成之后有推荐费拿的。理所当然的，我把A推荐了到了乙公司，A接手了B君的工作（在接手的过程中，A和B还成为了好朋友），乙公司对A的表现非常满意，最后，A的工资相比在甲公司涨幅达到50%。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;3. 对调一下吧&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;事情还没完，A君从甲公司离职后，甲公司的线上系统的维护就成为一个大问题了，老板命令人事经理赶快找人来顶上，苦逼的人事经理在QQ里群发了招聘的信息，这个信息也发给了A君，于是，A君把正在找工作的B君推荐过去了。B君在甲公司工作一个月后就转正，老板也很满意，相比之前在乙公司工资上涨了30%，和现在A的工资差不多。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;—— 后来，A告诉我，B之所以要离职，原因跟A是差不多的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;4. 皆大欢喜&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这真是一个皆大欢喜的局面！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style="list-style-type: decimal;"&gt;&lt;li&gt;&lt;p&gt;A到乙公司接手了原来B的工作，工资涨了50%。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;B到甲公司接手了原来A的工作，工资涨了30%。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;更重要的是，甲、乙公司的老板都爽了，对新进来的员工的表现都非常满意。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;而我，拿到了乙公司的推荐费。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A和B成为了好朋友，除了经常探讨技术外，还经常一起讨论这搞笑的离职加薪过程，交流心得。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;最后，我想说，这不是编的，这是一个真实的故事，而且以后还会发生……&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1245393325942</guid></item><item><title>爱学习的程序员都关注了这些</title><link>http://chuansong.me/n/1245393425939</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这篇文章推荐了包括技术、设计、极客和创业相关的热门公众号。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 24px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;创业类&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 24px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;创业新锋&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「创业新锋」聚焦IT/互联网/移动互联网 领域的创业相关的知识（含创业经历分享、业界动态、产品和投资等）。无论你是想从技术或设计岗位转向创业或者已经在创业过程中，创业新锋能为你带来启发与帮助。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：TMTStartup&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img class="" data-ratio="1.0067114093959733" data-type="jpeg" data-w="149" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/2A8tXicCG8ymTsedu0GHSSn60eXbs7Qulm3HIZ5icib1jEOrqYElrokmwicotbJyzI8s4poichxDUMOZ7txtxXdd39A/640?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both; box-sizing: border-box !important; word-wrap: break-word !important; width: auto !important; visibility: visible !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 24px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 24px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;技术类&lt;/span&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;程序员的那些事&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「程序员的那些事」是最受欢迎的程序员、IT 技术和 IT 行业相关的微信公众号之一，分享 IT 技术资讯、经典文章和书籍、热门课程、高薪职位、职场和趣文，传播极客精神，更有难得一见的 IT 相亲活动。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：iProgrammer&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJYKhGmCbQwJiaG2Opqc5AID4Zicd6DT4lO4xGe8Myib8jUK1b2KvwJVz4g/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;算法爱好者&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;算法是程序员的内功！「算法爱好者」专注分享算法相关文章、工具资源和算法题，帮程序员修炼内功。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：AlgorithmFans&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/2A8tXicCG8ylB4qOBicNwopK7cT7vYIbeDLWppGsKFbLF19mhFmKws8BH8Qxc0dKnBPuhpsJTRbuDgjvnRxVrx6A/0?" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;技术最前线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;技术最前线」专注分享 IT/互联网 领域最新技术和业界动态。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：TopITNews&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img class="" data-ratio="1" data-type="jpeg" data-w="150" height="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/2A8tXicCG8ymTsedu0GHSSn60eXbs7QulNicggLxewIlhe5TnatjX6ysdia8W0DIO6zgWbXHs0NIpeoicvFiaOydvEQ/0?" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both; height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(247, 150, 70); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;前端大全&lt;/strong&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「前端大全」专注分享 Web 前端相关的内容，包括 JavaScript、CSS 和 HTML5 相关资讯、工具资源、使用技巧、热门课程、高薪职位和经典书籍等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：FrontDev  &lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJosgia8Huf41iamcX3PGyRDzenibpErNnZHukgNoIYTibicRAxwtXr1AibUQg/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important; visibility: visible !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Python开发者&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;人生苦短，我用 Python。Python 越来越受广大程序员的喜爱。「Python开发者」是最受欢迎的、专注分享 Python 技术的微信公众号，主要分享 Python 、大数据、机器学习相关资讯、技术文章、工具资源、热门教程和高薪职位等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：PythonCoder&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJ4ibBXcZF2Q68XGPRRNRKc85icUSHUbhNKHNGdZgGY5eqxsArxWTw3I8A/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Linux爱好者&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「Linux爱好者」专注分享 Linux 开发和运维相关资讯、工具资源、使用技巧、热门课程、高薪职位和经典书籍等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：LinuxHub&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJ6lSnGBj20mB8bdK0BoSCV7Ysjia8F01m3pGJ2bGFN3R0aiaz9ZJFr3jg/640?" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: 150px !important;" width="auto"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;ImportNew&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「ImportNew」是最受欢迎的、专注 Java 技术分享的微信公众号。分享 Java 技术动态、基础技术、进阶技能、架构设计、经典书籍、热门课程和高薪职位等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：ImportNew  &lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJLib4NDjmCTCKmal2RjI3JCFH1WStzvPMkDR50CfAgXxz69ibdR23aKZA/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;数据库开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「数据库开发」专注分享数据库和运维相关行业动态、工具资源、经典文章、热门课程、高薪职位和经典书籍等。文章内容涉及各种主流 DB 的最佳实践、数据库基础知识、性能优化、数据安全等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：DBDevs&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJI0wiczGzKwib47dnsMBoefqPFjugy9dm8WA8gVoBdlRhteiaV20EspOUw/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;伯乐在线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「伯乐在线」分享来伯乐在线博客的热门和经典文章，精华中的精华，常看伯乐在线博客的读者不能错过哦~&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：jobbole&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJs3la5T67WqxicBymeicH9mStDRicR0rxtbORmzR8vFybQBSFmKSUjibiacg/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;安卓开发精选&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「安卓开发精选」专注分享安卓开发相关资讯、经典技术文章、App 设计与推广、热门课程、高薪职位和经典书籍等&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：AndroidPD  &lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJOkL2UjhUceLiblOXl4Oia3WHLHffGAtG6g5nXKLMPuxGwaB7icv41AVtw/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;iOS大全&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「iOS大全」专注分享 iOS 应用开发相关行业动态、技术文章、工具资源、App 设计与推广、热门课程、高薪职位和经典书籍等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：iOShub&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJlsWfQJOSiafGbSxWTco4XY86DEVvYgn3UtJrWmID6xE7PCNvR8eXb3A/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important; visibility: visible !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;CPP开发者&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「CPP开发者」专注分享 C/C++ 开发相关动态、经典技术文章、工具资源、热门课程、高薪职位和经典书籍等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：cppFans  &lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJLmwYptIT347OJkKiaMFFzm4zmh8lORetjHxjGnKFicJMMxicIfxia3ia36A/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important; visibility: visible !important;" width="150px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;PHP开发者&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「PHP开发者」专注分享 PHP 开发相关动态、经典技术文章、工具资源、热门课程、高薪职位和经典书籍等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：PHPDevs&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJYw7JswzznTib8WAg6hWGAMXvdrQYRwbYDicIvUuicLrpDwoCm2DYISozg/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DotNet&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「DotNet」专注 .NET 相关内容，包括：.NET 和 C# 开发技术文章、工具资源、热门课程、高薪职位和经典书籍等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：iDotNet  &lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWybjrfwneTrTaxWVkBqEyzsJvtP95VIVibMA9mpjd6lYsgXiaFkPpzL0AC3Yg58sL8Imv3gcSXo3eDWA/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 24px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;极客类&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;极客范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「极客范」聚焦极客主题，传播极客精神，分享各种新、奇、酷的东西。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：iGeekFan&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9928571428571429" data-s="300,640" data-type="png" data-w="140" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/pldYwMfYJpia4rY9biavs9ND0PdCuvOZ5ypEoV6Daz6SJzT5oQfb82yiaicCrDsp5MrbOqQAyNkXRm1n0UWKoUA9iag/0" style="height: 139px !important; box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: 140px !important;" width="auto"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 24px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;设计类&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;设计的那些事&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;设计的那些事&lt;/strong&gt;&lt;/span&gt;」分享精选的设计相关文章、案例和行业动态。同时，也会不定期推荐设计教程、高薪职位和设计相关的优秀工具。&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：aboutDesigner&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWyYFlao6HcyE7jflpSuG9bCTnPTiaMOicaXmuV9FhSNy66UkMBeB7TsvZMrwKeibcQnYUzj4ekan2UlXQ/0" style="height: 150px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;网页设计精选&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;网页设计精选&lt;/strong&gt;&lt;/span&gt;」分享网页设计精选文章、案例、行业趋势、课程和书籍。&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：BestWebDesign&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWyYFlao6HcyE7jflpSuG9bCTMnIB3HH2kOoQfLcicZjjen8IlicfZ1LQErqkzd2yibWBXibJcZ6ibicKROVA/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important; visibility: visible !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UI设计达人&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UI设计达人&lt;/strong&gt;&lt;/span&gt;」分享 UI 设计精选文章、案例、行业趋势、课程和书籍。&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：BestUIDesign&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="png" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/KovAgJ2aWyYFlao6HcyE7jflpSuG9bCTbysv82lvhYWWjTR41hnkAnM8CicrCtLnTTrGfeMdsZO3pBlegmK0rKQ/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; width: 150px !important; visibility: visible !important;" width="150px"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;亮点总在最后&lt;/strong&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(192, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;面向对象&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;「&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;面向对象&lt;/strong&gt;」一个专门为IT单身男女服务的征婚传播平台。官方微信号：mxdx01 分享 IT领域相关的情感话题。同时，不定期推送参加面向对象相亲的女生信息。&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;微信号：mxdx01&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="150" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/pldYwMfYJpgADbENWU2ZLicsjRWV86cmp5wJU8f1E1LNm8cJNKNH1YwyKf5iciaAh65SrJCfEH74WJtH7d0WW7SCQ/640?" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.6px; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(247, 150, 70); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;长按上图，弹出“识别二维码”后关注&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1245393425939</guid></item><item><title>Java开发者需要了解的移动开发编程语言</title><link>http://chuansong.me/n/1245393525952</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 25.6px; font-size: 14px; color: rgb(255, 41, 65); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;(点击&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 25.6px; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 25.6px; font-size: 14px; color: rgb(255, 41, 65); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注)&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;英文：dzone&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;译文：Elyn&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：www.evget.com/article/2016/8/26/24774.html&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;移动应用开发行业在过去的五年里飞速地成倍增长，改变了全球企业功能。随着企业在最近一段时间调整移动应用到他们的生产力，以及他们跨平台移动设备的快速创新；它需要移动应用程序开发人员使用单一语言和许多的可重用代码为许多不同的平台编写应用程序的多个版本。你有兴趣吗？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一旦你打算实现你对移动应用的想法，就是时候去验证它，了解目标市场，并且专注在这个你想在上面建立你的移动应用程序的理想的平台上。一旦决定，就是时候选择一个编程语言，记住你的业务策略来创建本地、混合、跨平台的应用程序。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;选择合适的编程语言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;Java&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;&lt;img data-ratio="0.6689655172413793" data-s="300,640" data-type="jpeg" data-w="580" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQzJutVDG2kTUcHtRxuvOxfaDWgbTQHGOYyr6QbmcH0ThQVRYWJopkiamYjsROEX5svibtdmfDQicejHQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Java编程语言是在Android应用程序开发时最首选的语言之一。Sun Microsystems（现在属于甲骨文）开发的面向对象的编程语言，以两种不同的方法运行，可以在浏览器窗口或在不带浏览器的虚拟机。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这种灵活性在重用代码和更新软件时往往意义重大，尽管你正在考虑iOS开发时Java没有多大作用，但面对跨平台移动应用程序即跨平台app时它肯定在你的选择之列。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;HTML5&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.49375" data-s="300,640" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQzJutVDG2kTUcHtRxuvOxfa5xdYsVJPx1RxjPhRF2E4wuR3sBibiaFUwj6Nia6p3wxyuwbV2RicHFtRIg/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果你想为移动设备建立一个Web应用，HTML5就是理想的编程语言。尽管它使各种数据类型简单的插入，占不同的屏幕尺寸，合理化输入参数，甚至拉平浏览器竞争程度；HTML5的问题是，它仍然是一个建议的标准。目前由很多不同的浏览器以很多不同的方式在支持，从成本效益的角度出发的HTML5有着在当前版本HTML上建立的优势——使学习曲线比一个全新的语言更浅。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;Objective-C&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;iOS应用程序的主要编程语言Objective-C是由苹果亲选以构建健康和可伸缩的应用程序。作为C语言的超集，它有许多功能，精确处理图形、I / O和显示功能。此外，作为苹果开发框架的一部分，Objective-C是完全融入到所有的iOS和MacOS框架。然而，现在它正慢慢地被一个更强大的称为Swift的语言取代它在苹果生态系统中的地位。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;Swift&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Swift是进入苹果生态系统的最新的编程语言，主要考虑其为苹果最新的API、Cocoa和Cocoa Touch编写代码的流行程度。即使它是一个为结合Objective-C编写的语言，Cupertino公司明显用它让iOS开发者转向Swift完成编程。Objective-C旨在消除许多安全漏洞，移动应用开发者是时候转向Swift了，很多企业在开发先进的移动应用程序时想要雇佣Swift开发者。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;C++&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;为Android和Windows开发移动应用程序时，这是最合适和健康的编程语言，主要用于低级编程，它还是移动应用程序开发者的平台首选语言。作为一个强大的编程语言，C++允许移动应用在存在的每个平台上几乎是每个目的的开发。它可能不是超级时尚或流行，但它在甚至是智能手机革命前就一直占据着编程世界。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;C#&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;作为最令人垂涎的Windows Phone应用开发编程语言，C#对微软就像Objective-C对苹果。虽然Windows Phone平台不能成为移动应用开发行业的游戏规则，但对于忠实的微软用户来说，C#对于构建健康的Windows Phone应用来说是完美的编程语言。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1245393525952</guid></item><item><title>2016最流行的Java EE服务器</title><link>http://chuansong.me/n/1236616025832</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 25.6px; font-size: 14px; color: rgb(255, 41, 65); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;(点击&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 25.6px; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 25.6px; font-size: 14px; color: rgb(255, 41, 65); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注)&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;英文：plumbr.eu&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;译文：ImportNew - LW&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 76, 65); font-size: 14px; white-space: pre-wrap; background-color: rgb(255, 254, 213);"&gt;如需转载，发送「转载」二字查看说明&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如今是我们发布有关Java领域统计资料的第四个年头。每年春天，我们对从JVM 的Plumbr 代理监测器收集到的数据进行挖掘，发现了以下几点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;Java版本的使用情况（是Java6、7，还是8）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;虚拟机使用的哪一款（是Oracle Hotspot 、 OpenJDK 还是 Rest of the World）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;基础设施中最常用的是哪个应用服务器；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;这些现象随着时间推移是如何变化的。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上周我们对Java版本和供应商数据进行了披露。这周我们将会对应用服务市场的状态进行曝光。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以下结论是基于Plumbr对1240台JVM的性能在2016年的2月份到3月份进行检测得到的。这些数据的收集是过JVM 中的os.arch、os.version、 java.version等通过 System.getProperty() 进行调用得到的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;2015年使用最广泛的是哪一种Java应用服务器呢？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过从部署的1240个JVM中得到的数据，我们能够确定出现了862个容器供应商，或者说是占到了运行环境的70%左右。这些容器的供应商分布如下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.5537459283387622" data-s="300,640" data-type="png" data-w="614" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERI5Fpbo6967ib7HKia6kBecNbzCWtuUsB7bXfoZDsGRwiaHVZeG8MGmnkwQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Tomcat的安装基数已经连续两年超过排行榜的50%。占到总份额的58.22%无疑使其成为赢家。除了Tomcat，占据了大部分部署基数的有一下四个供应商：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;JBoss/WildFly安装，占到了市场份额的20.22%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Jetty，占据市场的10.67%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;GlassFish，占据市场的5.56%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Oracle WebLogic 的部署占据剩下的2.44%&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;剩下的其他供应商占据了不到2.5%的市场份额这其中包括Resin、Orion、OC4J, SAP NetWeaver 和IBM WebSphere。所有这些的部署小于5.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;剩下的JVM我们没有检测到数据。一个Java应用服务器大多数是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;使用Swing或AWT开发的桌面应用程序；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;动态语言运行时（比如Scala或者Groovy）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;无服务器软件（比如Elasticsearch、TIBCO等）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用Netty（比如play框架）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;或者隐藏在开发环境启动器之后（Maven、sbt、 IDEAM Eclipse等）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;2013-2016使用的Java应用服务器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2013到2016年期间，我们呈现并分析了相同的数据，得到了以下结果：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.5" data-s="300,640" data-type="png" data-w="1160" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIGoalO4kLXhSjylqibQAGF8AwWiaI6M8fU9CD6joiaQCUMTNFGxvkfIAZw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;应该有人对这种随时间推移的变化做出解释，这一点是毋庸置疑的。Jetty为什么从2015年的辉煌降到了如今仅仅第三名的位置，一个可能的原因就是Plunber从一个开发工具转变为了一个监控解决方案。Jetty不再是一个友好的开发工具，而是作为一个产品部署者它和其他的java应用服务器提供商分享了自己的部署。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2015年的一个有趣变化就是我们可以看到Oracle Weblogic出现的概率减少了三倍多。但是这种现象是作为一个从特定供应商迁移过来的公司的特例还是由于由于各行各业的公司开始使用Plunbr，原因尚不清楚。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有一点明确的是，在连续两年的排行中，Tomcat部署占据了JVM领域接近60%的份额。考虑到Tomcat一开始仅仅是作为一个参考实现设计，以及不同的提供商把大量的经历投入到提升他们的容器，这是一个惊人的结果。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果你觉得这些数据有趣，那么你有可能会对我们的Java和性能监测上的定期发布感兴趣。保持关注，推特或RSS feed进行订阅都可以。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1236616025832</guid></item><item><title>Java调优经验谈</title><link>http://chuansong.me/n/1236616125819</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：飒然Hang&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：www.rowkey.me/blog/2016/11/02/java-profile/&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对于调优这个事情来说，一般就是三个过程：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;性能监控：问题没有发生，你并不知道你需要调优什么？此时需要一些系统、应用的监控工具来发现问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;性能分析：问题已经发生，但是你并不知道问题到底出在哪里。此时就需要使用工具、经验对系统、应用进行瓶颈分析，以求定位到问题原因。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;性能调优：经过上一步的分析定位到了问题所在，需要对问题进行解决，使用代码、配置等手段进行优化。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Java调优也不外乎这三步。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，本文所讲的性能分析、调优等是抛开以下因素的：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;系统底层环境：硬件、操作系统等&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据结构和算法的使用&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;外部系统如数据库、缓存的使用&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;调优准备&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;调优是需要做好准备工作的，毕竟每一个应用的业务目标都不尽相同，性能瓶颈也不会总在同一个点上。在业务应用层面，我们需要：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;需要了解系统的总体架构，明确压力方向。比如系统的哪一个接口、模块是使用率最高的，面临高并发的挑战。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;需要构建测试环境来测试应用的性能，使用ab、loadrunner、jmeter都可以。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对关键业务数据量进行分析，这里主要指的是对一些数据的量化分析，如数据库一天的数据量有多少；缓存的数据量有多大等&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;了解系统的响应速度、吞吐量、TPS、QPS等指标需求，比如秒杀系统对响应速度和QPS的要求是非常高的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;了解系统相关软件的版本、模式和参数等，有时候限于应用依赖服务的版本、模式等，性能也会受到一定的影响。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，我们还需要了解Java相关的一些知识：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style="list-style-type: decimal;"&gt;&lt;li&gt;&lt;p&gt;Java内存相关：这一部分可以参见谈谈Java内存管理一文&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对Java代码进行基准性能测试：可以使用JMH来进行，[译]使用JMH进行微基准测试：不要猜，要测试！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;HotSpot VM相关知识：http://www.oracle.com/technetwork/cn/java/javase/tech/index-jsp-136373-zhs.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;jdk自带各种java工具：http://www.rowkey.me/blog/2016/11/03/jdk-tools/&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;性能分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在系统层面能够影响应用性能的一般包括三个因素：CPU、内存和IO，可以从这三方面进行程序的性能瓶颈分析。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;CPU分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当程序响应变慢的时候，首先使用top、vmstat、ps等命令查看系统的cpu使用率是否有异常，从而可以判断出是否是cpu繁忙造成的性能问题。其中，主要通过us（用户进程所占的%）这个数据来看异常的进程信息。当us接近100%甚至更高时，可以确定是cpu繁忙造成的响应缓慢。一般说来，cpu繁忙的原因有以下几个：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;线程中有无限空循环、无阻塞、正则匹配或者单纯的计算&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;发生了频繁的gc&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多线程的上下文切换&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;确定好cpu使用率最高的进程之后就可以使用jstack来打印出异常进程的堆栈信息：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;jstack [pid]&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.5414462081128748" data-s="300,640" data-type="png" data-w="567" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERILKBUYuJ6ntOqLia1zXyN2Xib06rJACH3ibDMEgdyLHGqVoia3ecJBxccAw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;接下来需要注意的一点是，Linux下所有线程最终还是以轻量级进程的形式存在系统中的，而使用jstack只能打印出进程的信息，这些信息里面包含了此进程下面所有线程(轻量级进程-LWP)的堆栈信息。因此，进一步的需要确定是哪一个线程耗费了大量cpu，此时可以使用top -p [processId]来查看，也可以直接通过ps -Le来显示所有进程,包括LWP的资源耗费信息。最后，通过在jstack的输出文件中查找对应的lwp的id即可以定位到相应的堆栈信息。其中需要注意的是线程的状态：RUNNABLE、WAITING等。对于Runnable的进程需要注意是否有耗费cpu的计算。对于Waiting的线程一般是锁的等待操作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;也可以使用jstat来查看对应进程的gc信息，以判断是否是gc造成了cpu繁忙。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;jstat -gcutil [pid]&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.05313092979127135" data-s="300,640" data-type="png" data-w="527" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIRsVLJDtOHkicTwK1Sqbdw7IicqOjxicwicfH1kHicbTSzqFUnu4IorFqobQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;还可以通过vmstat，通过观察内核状态的上下文切换(cs)次数，来判断是否是上下文切换造成的cpu繁忙。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;vmstat 1 5&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.15306122448979592" data-s="300,640" data-type="jpeg" data-w="588" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIV6cyD1q4Rfrnv2EicjQ0mgMoZKqVVNOut62jusO5Yd5eJMVaKsFxZiaw/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;此外，有时候可能会由jit引起一些cpu飚高的情形，如大量方法编译等。这里可以使用-XX:+PrintCompilation这个参数输出jit编译情况，以排查jit编译引起的cpu问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;内存分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对Java应用来说，内存主要是由堆外内存和堆内内存组成。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1. 堆外内存堆外内存主要是JNI、Deflater/Inflater、DirectByteBuffer（nio中会用到）使用的。对于这种堆外内存的分析，还是需要先通过vmstat、sar、top、pidstat等查看swap和物理内存的消耗状况再做判断的。此外，对于JNI、Deflater这种调用可以通过Google-preftools来追踪资源使用状况。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2. 堆内内存此部分内存为Java应用主要的内存区域。通常与这部分内存性能相关的有：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;创建的对象：这个是存储在堆中的，需要控制好对象的数量和大小，尤其是大的对象很容易进入老年代&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;全局集合：全局集合通常是生命周期比较长的，因此需要特别注意全局集合的使用&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缓存：缓存选用的数据结构不同，会很大程序影响内存的大小和gc&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ClassLoader：主要是动态加载类容易造成永久代内存不足&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多线程：线程分配会占用本地内存，过多的线程也会造成内存不足&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以上使用不当很容易造成：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;频繁GC -&amp;gt; Stop the world，使你的应用响应变慢&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;OOM，直接造成内存溢出错误使得程序退出。OOM又可以分为以下几种：&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;Heap space：堆内存不足&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;PermGen space：永久代内存不足&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Native thread：本地线程没有足够内存可分配&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;排查堆内存问题的常用工具是jmap，是jdk自带的。一些常用用法如下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;查看jvm内存使用状况：jmap -heap&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查看jvm内存存活的对象：jmap -histo:live&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;把heap里所有对象都dump下来，无论对象是死是活：jmap -dump:format=b,file=xxx.hprof&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;先做一次full GC，再dump，只包含仍然存活的对象信息：jmap -dump:format=b,live,file=xxx.hprof&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，不管是使用jmap还是在OOM时产生的dump文件，可以使用Eclipse的MAT(MEMORY ANALYZER TOOL)来分析，可以看到具体的堆栈和内存中对象的信息。当然jdk自带的jhat也能够查看dump文件，会启动web端口供开发者使用浏览器浏览堆内对象的信息。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;img data-ratio="0.6080550098231827" data-s="300,640" data-type="png" data-w="1018" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERI5sxEibEK5uBjfY8kND1vbQvtDrCPuwREqSL5Wq6lTViatHFDw4icGKCyQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;IO分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通常与应用性能相关的包括：文件IO和网络IO。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1. 文件IO可以使用系统工具pidstat、iostat、vmstat来查看io的状况。这里可以看一张使用vmstat的结果图。&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="1.0964912280701755" data-s="300,640" data-type="png" data-w="114" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIjcD5ySt9uibfmw3beor0sQ3PJQibndx2nEcPrBhYfYDoONOoDlj03WZg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里主要注意bi和bo这两个值，分别表示块设备每秒接收的块数量和块设备每秒发送的块数量，由此可以判定io繁忙状况。进一步的可以通过使用strace工具定位对文件io的系统调用。通常，造成文件io性能差的原因不外乎：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;大量的随机读写&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;设备慢&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文件太大&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1. 网络IO查看网络io状况，一般使用的是netstat工具。可以查看所有连接的状况、数目、端口信息等。例如：当time_wait或者close_wait连接过多时，会影响应用的相应速度。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;netstat -anp&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.34210526315789475" data-s="300,640" data-type="png" data-w="722" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIwvcqjZZVYjExT9icfxx4apmnA9tC89XfZf56E1E5Ja79cHDusCUL3jQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，还可以使用tcpdump来具体分析网络io的数据。当然，tcpdump出的文件直接打开是一堆二进制的数据，可以使用wireshark阅读具体的连接以及其中数据的内容。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;tcpdump -i eth0 -w tmp.cap -tnn dst port 8080 #监听8080端口的网络请求并打印日志到tmp.cap中&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;还可以通过查看/proc/interrupts来获取当前系统使用的中断的情况。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio="0.7799352750809061" data-s="300,640" data-type="png" data-w="618" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERITibibicuURjBkplJaic3oiagPW6DicfYiaVWJ4VSpAkb1w6lzqYgc2DPYicDvA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;各个列依次是：&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;irq的序号， 在各自cpu上发生中断的次数，可编程中断控制器，设备名称（request_irq的dev_name字段）&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过查看网卡设备的终端情况可以判断网络io的状况。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;其他分析工具&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面分别针对CPU、内存以及IO讲了一些系统/JDK自带的分析工具。除此之外，还有一些综合分析工具或者框架可以更加方便我们对Java应用性能的排查、分析、定位等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;VisualVM这个工具应该是Java开发者们非常熟悉的一款java应用监测工具，原理是通过jmx接口来连接jvm进程，从而能够看到jvm上的线程、内存、类等信息。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.7970588235294118" data-s="300,640" data-type="png" data-w="680" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERI55mef6ZhlXWjicrJ1bn90KsBicg7ibK8jR6xCusEsjR0QFqqCckGheF3g/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果想进一步查看gc情况，可以安装visual gc插件。此外，visualvm也有btrace的插件，可以可视化直观的编写btrace代码并查看输出日志。 与VisualVm类似的，jconsole也是通过jmx查看远程jvm信息的一款工具，更进一步的，通过它还可以显示具体的线程堆栈信息以及内存中各个年代的占用情况，也支持直接远程执行MBEAN。当然，visualvm通过安装jconsole插件也可以拥有这些功能。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.7676300578034682" data-s="300,640" data-type="png" data-w="865" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIjdycYeOrRIkHNsw0eCKxQhe8Vxp5faMMI5kNxtmJvNZrUCFeM2e9kw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但由于这俩工具都是需要ui界面的，因此一般都是通过本地远程连接服务器jvm进程。服务器环境下，一般并不用此种方式。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;Java Mission Control(jmc)此工具是jdk7 u40开始自带的，原来是JRockit上的工具，是一款采样型的集诊断、分析和监控与一体的非常强大的工具。https://docs.oracle.com/javacomponents/jmc-5-5/jmc-user-guide/toc.htm&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.7828863346104725" data-s="300,640" data-type="png" data-w="783" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERINpicyIkN57tqOBIsVt6icHfKOs5pIHEzUkfYjsOqAUCoKuSYm6b6chPQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;Btrace这里不得不提的是btrace这个神器，它使用java attach api+ java agent + instrument api能够实现jvm的动态追踪。在不重启应用的情况下可以加入拦截类的方法以打印日志等。具体的用法可以参考Btrace入门到熟练小工完全指南。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;JwebapJwebap是一款JavaEE性能检测框架，基于asm增强字节码实现。支持：http请求、jdbc连接、method的调用轨迹跟踪以及次数、耗时的统计。由此可以获取最耗时的请求、方法，并可以查看jdbc连接的次数、是否关闭等。但此项目是2006年的一个项目，已经将近10年没有更新。根据笔者使用，已经不支持jdk7编译的应用。如果要使用，建议基于原项目二次开发，同时也可以加入对redis连接的轨迹跟踪。当然，基于字节码增强的原理，也可以实现自己的JavaEE性能监测框架。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.30133333333333334" data-s="300,640" data-type="png" data-w="1125" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERI0BtWmXGdavqk0ibVNa1SrToR3GgO9jqeEgheSZ8WCHPjf98a4856OgA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上图来自笔者公司二次开发过的jwebap，已经支持jdk8和redis连接追踪。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;useful-scripts这里有一个本人参与的开源的项目：https://github.com/superhj1987/useful-scripts，封装了很多常用的性能分析命令，比如上文讲的打印繁忙java线程堆栈信息，只需要执行一个脚本即可。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;性能调优&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;与性能分析相对应，性能调优同样分为三部分。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;CPU调优&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;不要存在一直运行的线程(无限while循环)，可以使用sleep休眠一段时间。这种情况普遍存在于一些pull方式消费数据的场景下，当一次pull没有拿到数据的时候建议sleep一下，再做下一次pull。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;轮询的时候可以使用wait/notify机制&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;避免循环、正则表达式匹配、计算过多，包括使用String的format、split、replace方法(可以使用apache的commons-lang里的StringUtils对应的方法)，使用正则去判断邮箱格式(有时候会造成死循环)、序列/反序列化等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;结合jvm和代码，避免产生频繁的gc，尤其是full GC。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，使用多线程的时候，还需要注意以下几点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;使用线程池，减少线程数以及线程的切换&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多线程对于锁的竞争可以考虑减小锁的粒度(使用ReetrantLock)、拆分锁(类似ConcurrentHashMap分bucket上锁), 或者使用CAS、ThreadLocal、不可变对象等无锁技术。此外，多线程代码的编写最好使用jdk提供的并发包、Executors框架以及ForkJoin等，此外Discuptor和Actor在合适的场景也可以使用。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;内存调优&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;内存的调优主要就是对jvm的调优。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;合理设置各个代的大小。避免新生代设置过小(不够用，经常minor gc并进入老年代)以及过大(会产生碎片)，同样也要避免Survivor设置过大和过小。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;选择合适的GC策略。需要根据不同的场景选择合适的gc策略。这里需要说的是，cms并非全能的。除非特别需要再设置，毕竟cms的新生代回收策略parnew并非最快的，且cms会产生碎片。此外，G1直到jdk8的出现也并没有得到广泛应用，并不建议使用。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;jvm启动参数配置-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:[log_path]，以记录gc日志，便于排查问题。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;其中，对于第一点，具体的还有一点建议：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;年轻代大小选择：响应时间优先的应用，尽可能设大，直到接近系统的最低响应时间限制（根据实际情况选择）。在此种情况下，年轻代收集发生gc的频率是最小的。同时，也能够减少到达年老代的对象。吞吐量优先的应用，也尽可能的设置大，因为对响应时间没有要求，垃圾收集可以并行进行，建议适合8CPU以上的应用使用。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;年老代大小选择：响应时间优先的应用，年老代一般都是使用并发收集器，所以其大小需要小心设置，一般要考虑并发会话率和会话持续时间等一些参数。如果堆设置小了，会造成内存碎片、高回收频率以及应用暂停而使用传统的标记清除方式；如果堆大了，则需要较长的收集时间。最优化的方案，一般需要参考以下数据获得：&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;并发垃圾收集信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;持久代并发收集次数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;传统GC信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;花在年轻代和年老代回收上的时间比例&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一般吞吐量优先的应用都应该有一个很大的年轻代和一个较小的年老代。这样可以尽可能回收掉大部分短期对象，减少中期的对象，而年老代存放长期存活对象。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，较小堆引起的碎片问题：因为年老代的并发收集器使用标记、清除算法，所以不会对堆进行压缩。当收集器回收时，会把相邻的空间进行合并，这样可以分配给较大的对象。但是，当堆空间较小时，运行一段时间以后，就会出现“碎片”，如果并发收集器找不到足够的空间，那么并发收集器将会停止，然后使用传统的标记、清除方式进行回收。如果出现“碎片”，可能需要进行如下配置：-XX:+UseCMSCompactAtFullCollection，使用并发收集器时，开启对年老代的压缩。同时使用-XX:CMSFullGCsBeforeCompaction=xx设置多少次Full GC后，对年老代进行压缩。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;其余对于jvm的优化问题可见后面JVM参数进阶一节。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;代码上，也需要注意：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;避免保存重复的String对象，同时也需要小心String.subString()与String.intern()的使用&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量不要使用finalizer&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;释放不必要的引用：ThreadLocal使用完记得释放以防止内存泄漏，各种stream使用完也记得close。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用对象池避免无节制创建对象，造成频繁gc。但不要随便使用对象池，除非像连接池、线程池这种初始化/创建资源消耗较大的场景，&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缓存失效算法，可以考虑使用SoftReference、WeakReference保存缓存对象&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;谨慎热部署/加载的使用，尤其是动态加载类等&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;不要用Log4j输出文件名、行号，因为Log4j通过打印线程堆栈实现，生成大量String。此外，使用log4j时，建议此种经典用法，先判断对应级别的日志是否打开，再做操作，否则也会生成大量String。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;if (logger.isInfoEnabled()) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;      logger.info(msg);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;IO调优&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;文件IO上需要注意：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;考虑使用异步写入代替同步写入，可以借鉴redis的aof机制。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;利用缓存，减少随机读&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量批量写入，减少io次数和寻址&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用数据库代替文件存储&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;网络IO上需要注意：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;和文件IO类似，使用异步IO、多路复用IO/事件驱动IO代替同步阻塞IO&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;批量进行网络IO,减少IO次数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用缓存，减少对网络数据的读取&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用协程: Quasar&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;其他优化建议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;算法、逻辑上是程序性能的首要，遇到性能问题，应该首先优化程序的逻辑处理&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优先考虑使用返回值而不是异常表示错误&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查看自己的代码是否对内联是友好的: 你的Java代码对JIT编译友好么？&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，jdk7、8在jvm的性能上做了一些增强：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;通过-XX:+TieredCompilation开启JDK7的多层编译（tiered compilation）支持。多层编译结合了客户端C1编译器和服务端C2编译器的优点(客户端编译能够快速启动和及时优化，服务器端编译可以提供更多的高级优化)，是一个非常高效利用资源的切面方案。在开始时先进行低层次的编译，同时收集信息，在后期再进一步进行高层次的编译进行高级优化。需要注意的一点：这个参数会消耗比较多的内存资源，因为同一个方法被编译了多次，存在多份native内存拷贝，建议把code cache调大一点儿（-XX:+ReservedCodeCacheSize，InitialCodeCacheSize）。否则有可能由于code cache不足，jit编译的时候不停的尝试清理code cache，丢弃无用方法，消耗大量资源在jit线程上。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Compressed Oops：压缩指针在jdk7中的server模式下已经默认开启。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Zero-Based Compressed Ordinary Object Pointers：当使用了上述的压缩指针时，在64位jvm上，会要求操作系统保留从一个虚拟地址0开始的内存。如果操作系统支持这种请求，那么就开启了Zero-Based Compressed Oops。这样可以使得无须在java堆的基地址添加任何地址补充即可把一个32位对象的偏移解码成64位指针。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;逃逸分析(Escape Analysis): Server模式的编译器会根据代码的情况，来判断相关对象的逃逸类型，从而决定是否在堆中分配空间，是否进行标量替换(在栈上分配原子类型局部变量)。此外，也可以根据调用情况来决定是否自动消除同步控制，如StringBuffer。这个特性从Java SE 6u23开始就默认开启。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;NUMA Collector Enhancements：这个重要针对的是The Parallel Scavenger垃圾回收器。使其能够利用NUMA (Non Uniform Memory Access，即每一个处理器核心都有本地内存，能够低延迟、高带宽访问) 架构的机器的优势来更快的进行gc。可以通过-XX:+UseNUMA开启支持。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，网上还有很多过时的建议，不要再盲目跟随:&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;变量用完设置为null，加快内存回收，这种用法大部分情况下并没有意义。一种情况除外：如果有个Java方法没有被JIT编译但里面仍然有代码会执行比较长时间，那么在那段会执行长时间的代码前显式将不需要的引用类型局部变量置null是可取的。具体的可以见R大的解释：https://www.zhihu.com/question/48059457/answer/113538171&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;方法参数设置为final，这种用法也没有太大的意义，尤其在jdk8中引入了effective final，会自动识别final变量。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;JVM参数进阶&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;jvm的参数设置一直是比较理不清的地方，很多时候都搞不清都有哪些参数可以配置，参数是什么意思，为什么要这么配置等。这里主要针对这些做一些常识性的说明以及对一些容易让人进入陷阱的参数做一些解释。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以下所有都是针对Oracle/Sun JDK 6来讲&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1. 启动参数默认值Java有很多的启动参数，而且很多版本都并不一样。但是现在网上充斥着各种资料，如果不加辨别的全部使用，很多是没有效果或者本来就是默认值的。一般的，我们可以通过使用java -XX:+PrintFlagsInitial来查看所有可以设置的参数以及其默认值。也可以在程序启动的时候加入-XX:+PrintCommandLineFlags来查看与默认值不相同的启动参数。如果想查看所有启动参数(包括和默认值相同的)，可以使用-XX:+PrintFlagsFinal。输出里“=”表示使用的是初始默认值，而“:=”表示使用的不是初始默认值，可能是命令行传进来的参数、配置文件里的参数或者是ergonomics自动选择了别的值。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，还可以使用jinfo命令显示启动的参数。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;jinfo -flags [pid] #查看目前启动使用的有效参数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;jinfo -flag [flagName] [pid] #查看对应参数的值&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里需要指出的是，当你配置jvm参数时，最好是先通过以上命令查看对应参数的默认值再确定是否需要设置。也最好不要配置你搞不清用途的参数，毕竟默认值的设置是有它的合理之处的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img data-ratio="0.18661971830985916" data-s="300,640" data-type="png" data-w="568" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwRzXjUUFyqlfn4omx2UERIhmVRbpylv05kvNeiaoR7eVeFHVxZyTyB4TNbowPhhpL921YQa15R3Og/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;动态设置参数当Java应用启动后，定位到了是GC造成的性能问题，但是你启动的时候并没有加入打印gc的参数，很多时候的做法就是重新加参数然后重启应用。但这样会造成一定时间的服务不可用。最佳的做法是能够在不重启应用的情况下，动态设置参数。使用jinfo可以做到这一点(本质上还是基于jmx的)。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag [+/-][flagName] [pid] #启用/禁止某个参数 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag [flagName=value] [pid] #设置某个参数&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对于上述的gc的情况，就可以使用以下命令打开heap dump并设置dump路径。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag +HeapDumpBeforeFullGC [pid] &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag +HeapDumpAfterFullGC [pid] &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag HeapDumpPath=/home/dump/dir [pid]&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;同样的也可以动态关闭。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag -HeapDumpBeforeFullGC [pid]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;jinfo -flag -HeapDumpAfterFullGC [pid]&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;其他的参数设置类似。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2. -verbose:gc 与 -XX:+PrintGCDetails很多gc推荐设置都同时设置了这两个参数，其实，只要打开了-XX:+PrintGCDetails，前面的选项也会同时打开，无须重复设置。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3. -XX:+DisableExplicitGC这个参数的作用就是使得system.gc变为空调用，很多推荐设置里面都是建议开启的。但是，如果你用到了NIO或者其他使用到堆外内存的情况，使用此选项会造成oom。可以用XX:+ExplicitGCInvokesConcurrent或XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses(配合CMS使用，使得system.gc触发一次并发gc)代替。此外，还有一个比较有意思的地方。如果你不设置此选项的话，当你使用了RMI的时候，会周期性地来一次full gc。这个现象是由于分布式gc造成的，为RMI服务。具体的可见此链接内容中与dgc相关的：http://docs.oracle.com/javase/6/docs/technotes/guides/rmi/sunrmiproperties.html&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4. MaxDirectMemorySize此参数是设置的堆外内存的上限值。当不设置的时候为-1，此值为-Xmx减去一个survivor space的预留大小。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;5. 由于遗留原因，作用相同的参数&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;-Xss 与 -XX:ThreadStackSize&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-Xmn 与 -XX:NewSize，此外这里需要注意的是设置了-Xmn的话，NewRatio就没作用了。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;6. -XX:MaxTenuringThreshold使用工具查看此值默认值为15，但是选择了CMS的时候，此值会变成4。当此值设置为0时，所有eden里的活对象在经历第一次minor GC的时候就会直接晋升到old gen，survivor space直接就没用。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;7. -XX:HeapDumpPath使用此参数可以指定-XX:+HeapDumpBeforeFullGC、-XX:+HeapDumpAfterFullGC、-XX:+HeapDumpOnOutOfMemoryError触发heap dump文件的存储位置。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;参考资料&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;Java HotSpot™ Virtual Machine Performance Enhancements&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Java HotSpot Virtual Machine Garbage Collection Tuning Guide&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;[HotSpot VM] JVM调优的”标准参数”的各种陷阱&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1236616125819</guid></item><item><title>一个小栗子聊聊 JAVA 泛型基础</title><link>http://chuansong.me/n/1225491025539</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;伯乐在线专栏作者- Float_Lu&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：http://blog.jobbole.com/108217/&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 82, 255); text-decoration: underline; line-height: 1.6; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;a csmlink="8mnMJc" href="http://chuansong.me/n/351521825448" style="color: rgb(0, 82, 255); max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;" target="_blank"&gt;点击 → 了解如何加入专栏作者&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;周五本该是愉快的，可是花了一个早上查问题，为什么要花一个早上？我把原因总结为两点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;日志信息严重丢失，茫茫代码毫无头绪。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对泛型的认识不够，导致代码出现了BUG。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;第一个原因可以通过以后编码谨慎的打日志来解决，我们今天主要来一起回顾下 JAVA 泛型基础。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;一个小栗子&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;先看下面一个例子，test1实例化一个List容器的时候没有指定泛型参数，那么我们可以往这个容器里面放入任何类型的对象，这样是不是很爽？但是当我们从容器中取出容器中的对象的时候我们必须小心翼翼，因为容器中的对象具有运行时的类型信息，这意味着你不能够将一个带有运行时类型信息的对象赋值给另一个类型，否则ClassCastException。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;@&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Test&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-m" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(128, 0, 128) !important;"&gt;public&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;void&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;test1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;()&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;throws&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Exception&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;List &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-r" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;new&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;ArrayList&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;add&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-s" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(221, 17, 68) !important;"&gt;"float.lu"&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;add&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;String&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;name&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;String&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;get&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;0&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;int&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;num&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;Integer&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;get&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;System&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;out&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;println&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;String&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;format&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-s" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(221, 17, 68) !important;"&gt;"name[%s], num[%s]"&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;name&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;num&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;));&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面的代码没问题，可以很好地编译和运行通过，问题是我必须要事先很清楚地知道容器中的索引为0的对象是什么类型，索引为1的对象是什么类型，很显然，这在实际应用中是不切实际的，也是一种很不靠谱的做法，那么这个问题如何解决呢？泛型。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;引入泛型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为了解决这个问题，我们引入泛型，下面代码可以看出与上面不同的是我们在实例化容器的时候加了这个东西，这个东西的学名叫做泛型参数，就像普通方法带有参数一样，interface List中的E为形式参数、而String为实参。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;@&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Test&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-m" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(128, 0, 128) !important;"&gt;public&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;void&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;test2&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;()&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;throws&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Exception&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;List &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-r" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;new&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;ArrayList&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;add&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-s" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(221, 17, 68) !important;"&gt;"a"&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;add&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-c" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(153, 153, 153) !important; font-style: italic !important;"&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;引入泛型后，我们规定这个容器中只能存放类型为字符串类型的对象，好的，编译器可以识别泛型并帮我们检查编译错误，上面的代码中1处会出现编译错误。注意：泛型信息仅仅存在于编译期间，编译器可以通过泛型信息来对代码是否存在违规行为（编译错误）来进行检查，当编译器将代码编译为字节码之后，泛型信息将不复存在，然而对象的运行时信息仍然是有的，这就解释了为什么会出现ClassCastException。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;别高兴太早&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有了泛型我们可以让代码安全地通过编译，并且我们认为他是安全的了，嘿嘿，是否就真的安全了呢？是否就能和ClassCastException说拜拜了呢？答案是：NO。看看下面这段代码：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;@&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Test&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-m" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(128, 0, 128) !important;"&gt;public&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;void&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;test3&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;()&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;throws&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Exception&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;List &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-r" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;new&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;ArrayList&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;add&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-s" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(221, 17, 68) !important;"&gt;"a"&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;add&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-s" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(221, 17, 68) !important;"&gt;"b"&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;List &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;_list&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;List &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;integerList&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; = &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;_list&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;for&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;Integer&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;item&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; : &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;integerList&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;{&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;        &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;System&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;out&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;println&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;String&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;.&lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;format&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-s" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(221, 17, 68) !important;"&gt;"item[%s]"&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;item&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;));&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面这段代码编译没有问题，我们没有直接将泛型参数为String的容器赋值给泛型参数为Integer的容器，而是花了点点小心思，我们现将list赋值给_list，_list生命为可以存储任何类型，也就相当于无特定类型，而后我们又把_list赋值给integerList容器，integerList容器被声明为只能存储类型为Integer的对象。悲催的是这段代码在运行的时候报了ClassCastException，很明显，我们知道在迭代integerList容器中的对象的时候，这些对象是有运行时类型信息的，当带有String类型信息的对象赋值给Integer的时候显然就报错了。这一切看起来似乎没问题，符合逻辑，但是有一个问题我们还没有问：为什么会没有编译错误？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;泛型术语&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在学习数学的时候我们往往会对一个证明题进行论证，而论证之前我们手上往往会有一些不需要证明的已知定理，下面这些“定理”将被用来直接回答上一节中遗留的问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;List被称作泛型类型。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;List中的E被称为类型变量或类型参数。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;List被称为参数化类型。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;List中的String被称为实际类型参数。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;List中的年typeof。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;List被称为原始类型。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;参数化类型可以引用一个原始类型对象，编译报告警告。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;原始类型可以引用一个参数化类型对象，编译报告警告。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由上可知，List integerList = _list;可以通过编译。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;看清本质&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;经过上面的一些小波折，我们了解一些关于泛型的本质：泛型是给javac编译器使用的，javac是JAVA的编译器，而泛型可以让代码在编译期间确定类型安全，比如我们告诉编译器某个容器只能存储某种类型的对象，那么编译器会为我们好好地检查，确保类型安全，但是安全是相对的，只要我们逃过编译器，我们就有一百种方法让代码ClassCastException（比如反射）。同时编译之后参数化类型在运行时没有任何泛型信息，也就是为什么List.class和List.class是同一个东西。除了参数化类型之外，容器中的对象在运行的时候是有类型信息的，也就是为什么会ClassCastExcetion。关于泛型还有很多内容，这里不做多讲，文中有误也欢迎留言讨论。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为学日溢，为道日损，损之又损，以至于无为。无为而无不为，取天下常事以无事；及其有事，不足以取天下。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;专栏作者简介 &lt;/span&gt;&lt;/strong&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（ &lt;/span&gt;&lt;a csmlink="KmnMJc" href="http://chuansong.me/n/351521825448" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;" target="_blank"&gt;&lt;span style="max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;点击 → 加入专栏作者&lt;/span&gt;&lt;/a&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; ）&lt;/span&gt;&lt;/p&gt;&lt;hr style="font-size: 16px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Float_Lu：开源技术爱好者，专注JAVA技术、中间件技术研究与分享。&lt;/span&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img class="" data-ratio="1.26" data-type="png" data-w="250" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxaVsrZiaxBBGuUEibnyDicBkKiad8EwrXVpsVESMZYm8M8CBMrEanVnx6w0auaJtiatP1ibYLPCAN9FFMA/0?wx_fmt=png" style=" margin-bottom: 10px; height: 290px; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; width: 230px ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;打赏支持作者写出更多好文章，谢谢！&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1225491025539</guid></item><item><title>Java动态代理与CGLIB</title><link>http://chuansong.me/n/1225491125524</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：Hosee&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：my.oschina.net/hosee/blog/656945&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;1. 静态代理模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;因为需要对一些函数进行二次处理，或是某些函数不让外界知道时，可以使用代理模式，通过访问第三方，间接访问原函数的方式，达到以上目的，来看一下代理模式的类图：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="" data-ratio="0.41639871382636656" data-type="png" data-w="622" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxaVsrZiaxBBGuUEibnyDicBkKOMO2aSibcWtRMqqWO00UYQu2ytZg2MPTENRl5Lsib7Ttbr7MCH4r30HQ/0?wx_fmt=png" style=" border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;interface Hosee{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    String sayhi();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class Hoseeimpl implements Hosee{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    @Override&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public String sayhi()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return "Welcome oschina hosee's blog";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class HoseeProxy implements Hosee{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    Hosee h;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public HoseeProxy(Hosee h)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        this.h = h;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    @Override&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public String sayhi()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("I'm proxy!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return h.sayhi();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class StaticProxy&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Hoseeimpl h = new Hoseeimpl();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        HoseeProxy hp = new HoseeProxy(h);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println(hp.sayhi());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;1.1 静态代理的弊端&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果要想为多个类进行代理，则需要建立多个代理类，维护难度加大。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;仔细想想，为什么静态代理会有这些问题，是因为代理在编译期就已经决定，如果代理哪个发生在运行期，这些问题解决起来就比较简单，所以动态代理的存在就很有必要了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;2. 动态代理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.InvocationHandler;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Method;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Proxy;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;interface HoseeDynamic&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    String sayhi();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class HoseeDynamicimpl implements HoseeDynamic&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    @Override&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public String sayhi()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return "Welcome oschina hosee's blog";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class MyProxy implements InvocationHandler&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    Object obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public Object bind(Object obj)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        this.obj = obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                .getClass().getInterfaces(), this);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    @Override&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public Object invoke(Object proxy, Method method, Object[] args)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            throws Throwable&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("I'm proxy!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Object res = method.invoke(obj, args);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return res;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class DynamicProxy&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        MyProxy myproxy = new MyProxy();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        HoseeDynamicimpl dynamicimpl = new HoseeDynamicimpl();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        HoseeDynamic proxy = (HoseeDynamic)myproxy.bind(dynamicimpl);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println(proxy.sayhi());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;类比静态代理，可以发现，代理类不需要实现原接口了，而是实现InvocationHandler。通过&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                .getClass().getInterfaces(), this);&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;来动态生成一个代理类，该类的类加载器与被代理类相同，实现的接口与被代理类相同。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过上述方法生成的代理类相当于静态代理中的代理类。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这样就实现了在运行期才决定代理对象是怎么样的，解决了静态代理的弊端。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当动态生成的代理类调用方法时，会触发invoke方法，在invoke方法中可以对被代理类的方法进行增强。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过动态代理可以很明显的看到它的好处，在使用静态代理时，如果不同接口的某些类想使用代理模式来实现相同的功能，将要实现多个代理类，但在动态代理中，只需要一个代理类就好了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;除了省去了编写代理类的工作量，动态代理实现了可以在原始类和接口还未知的时候，就确定代理类的代理行为，当代理类与原始类脱离直接联系后，就可以很灵活地重用于不同的应用场景中。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;2.1 动态代理的弊端&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;代理类和委托类需要都实现同一个接口。也就是说只有实现了某个接口的类可以使用Java动态代理机制。但是，事实上使用中并不是遇到的所有类都会给你实现一个接口。因此，对于没有实现接口的类，就不能使用该机制。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;而CGLIB则可以实现对类的动态代理&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;2.2 回调函数原理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上文说了，当动态生成的代理类调用方法时，会触发invoke方法。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;很显然invoke方法并不是显示调用的，它是一个回调函数，那么回调函数是怎么被调用的呢？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上述动态代理的代码中，唯一不清晰的地方只有&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                .getClass().getInterfaces(), this);&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;跟踪这个方法的源码，可以看到程序进行了验证、优化、缓存、同步、生成字节码、显示类加载等操作，前面的步骤并不是我们关注的重点，而最后它调用了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;byte[] proxyClassFile = ProxyGenerator.generateProxyClass(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                proxyName, interfaces);&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该方法用来完成生成字节码的动作，这个方法可以在运行时产生一个描述代理类的字节码byte[]数组。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在main函数中加入&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;System.getProperties().put("sun.misc.ProxyGenerator.saveGeneratedFiles","true");&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;加入这句代码后再次运行程序，磁盘中将会产生一个名为”$Proxy().class”的代理类Class文件，反编译（反编译工具我使用的是 JD-GUI ）后可以看见如下代码：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.InvocationHandler;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Method;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Proxy;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.UndeclaredThrowableException;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public final class $Proxy0 extends Proxy&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  implements HoseeDynamic&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  private static Method m1;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  private static Method m3;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  private static Method m0;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  private static Method m2;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  public $Proxy0(InvocationHandler paramInvocationHandler)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    throws&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    super(paramInvocationHandler);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  public final boolean equals(Object paramObject)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    throws&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      return ((Boolean)this.h.invoke(this, m1, new Object[] { paramObject })).booleanValue();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Error|RuntimeException localError)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw localError;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Throwable localThrowable)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw new UndeclaredThrowableException(localThrowable);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  public final String sayhi()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    throws&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      return (String)this.h.invoke(this, m3, null);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Error|RuntimeException localError)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw localError;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Throwable localThrowable)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw new UndeclaredThrowableException(localThrowable);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  public final int hashCode()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    throws&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      return ((Integer)this.h.invoke(this, m0, null)).intValue();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Error|RuntimeException localError)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw localError;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Throwable localThrowable)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw new UndeclaredThrowableException(localThrowable);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  public final String toString()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    throws&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      return (String)this.h.invoke(this, m2, null);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Error|RuntimeException localError)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw localError;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (Throwable localThrowable)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw new UndeclaredThrowableException(localThrowable);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  static&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      m1 = Class.forName("java.lang.Object").getMethod("equals", new Class[] { Class.forName("java.lang.Object") });&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      m3 = Class.forName("HoseeDynamic").getMethod("sayhi", new Class[0]);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      m0 = Class.forName("java.lang.Object").getMethod("hashCode", new Class[0]);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      m2 = Class.forName("java.lang.Object").getMethod("toString", new Class[0]);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      return;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (NoSuchMethodException localNoSuchMethodException)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw new NoSuchMethodError(localNoSuchMethodException.getMessage());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    catch (ClassNotFoundException localClassNotFoundException)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;      throw new NoClassDefFoundError(localClassNotFoundException.getMessage());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;  }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;动态代理类不仅代理了显示定义的接口中的方法，而且还代理了java的根类Object中的继承而来的equals()、hashcode()、toString()这三个方法，并且仅此三个方法。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以在上述代码中看到，无论调用哪个方法，都会调用到InvocationHandler的invoke方法，只是参数不同。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;2.3 动态代理与静态代理的区别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style="list-style-type: decimal;"&gt;&lt;li&gt;&lt;p&gt;Proxy类的代码被固定下来，不会因为业务的逐渐庞大而庞大；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可以实现AOP编程，这是静态代理无法实现的；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;解耦，如果用在web业务下，可以实现数据层和业务层的分离；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;动态代理的优势就是实现无侵入式的代码扩展。 静态代理这个模式本身有个大问题，如果类方法数量越来越多的时候，代理类的代码量是十分庞大的。所以引入动态代理来解决此类问题。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;3. CGLIB&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;cglib是针对类来实现代理的，他的原理是对指定的目标类生成一个子类，并覆盖其中方法实现增强，但因为采用的是继承，所以不能对final修饰的类进行代理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import java.lang.reflect.Method;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import net.sf.cglib.proxy.Enhancer;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import net.sf.cglib.proxy.MethodInterceptor;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;import net.sf.cglib.proxy.MethodProxy;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class CGlibHosee&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public String sayhi()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return "Welcome oschina hosee's blog";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class CGlibHoseeProxy&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    Object obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public Object bind(final Object target)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        this.obj = target;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Enhancer enhancer = new Enhancer();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        enhancer.setSuperclass(obj.getClass());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        enhancer.setCallback(new MethodInterceptor()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            @Override&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            public Object intercept(Object obj, Method method, Object[] args,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                    MethodProxy proxy) throws Throwable&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                System.out.println("I'm proxy!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                Object res = method.invoke(target, args);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                return res;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        });&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return enhancer.create();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class CGlibProxy&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        CGlibHosee cGlibHosee = new CGlibHosee();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        CGlibHoseeProxy cGlibHoseeProxy = new CGlibHoseeProxy();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        CGlibHosee proxy = (CGlibHosee) cGlibHoseeProxy.bind(cGlibHosee);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println(proxy.sayhi());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;cglib需要指定父类和回调方法。当然cglib也可以与Java动态代理一样面向接口，因为本质是继承。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;Reference：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1. http://blog.csdn.net/lidatgb/article/details/8941711&lt;/p&gt;&lt;p&gt;2. http://shensy.iteye.com/blog/1698197&lt;/p&gt;&lt;p&gt;3. http://www.cnblogs.com/jqyp/archive/2010/08/20/1805041.html&lt;/p&gt;&lt;p&gt;4. http://www.shangxueba.com/jingyan/1853835.html&lt;/p&gt;&lt;p&gt;5. 《深入理解Java虚拟机》&lt;/p&gt;&lt;p&gt;6. http://paddy-w.iteye.com/blog/841798&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1225491125524</guid></item><item><title>13个不容错过的Java项目：10篇热文回顾</title><link>http://chuansong.me/n/1217782625850</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本文精选了 ImportNew 2016年11月份的10篇热门文章。其中有技术分享，经验资源和开发技巧。&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;注：以下文章，点击标题即可阅读&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="nYzsJc" href="http://chuansong.me/n/1150472325588" target="_blank"&gt;为什么1000 == 1000返回为False，而100 == 100会返回为True?&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们知道，如果两个引用指向同一个对象，那么==就成立；反之，如果两个引用指向的不是同一个对象，那么==就不成立，即便两个引用的内容是一样的。因此，结果就会出现false。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="rYzsJc" href="http://chuansong.me/n/1185467325730" target="_blank"&gt;13个不容错过的Java项目&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;GitHub可谓一座程序开发的大宝库，有些素材值得fork，有些则能帮助我们改进自有代码或者学习编程技能。无论如何，开发工作当中我们几乎不可能绕得开GitHub。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="6YzsJc" href="http://chuansong.me/n/1131134625243" target="_blank"&gt;MyBatis增强工具pndao-帮你自动写SQL&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;pndao是票牛技术团队在使用的MyBatis增强工具，它可以根据一些方法约定，自动生成SQL。它在实际生产中减少了80%以上的重复SQL编写工作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="UYzsJc" href="http://chuansong.me/n/1137208525946" target="_blank"&gt;高性能的关键：Spring MVC的异步模式&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;要知道什么是异步模式，就先要知道什么是同步模式，先看最典型的同步模式。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="VYzsJc" href="http://chuansong.me/n/1128540325442" target="_blank"&gt;11个最值得Java开发者收藏的网站&lt;/a&gt; 》&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本文列举了11个能够帮助Java开发者提升编程能力的网站。名单中的这些热门网站能够涵盖学习资源，Q&amp;amp;A;论坛，代码片段等丰富内容。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="aYzsJc" href="http://chuansong.me/n/1119027125542" target="_blank"&gt;数据库相关中间件全家桶（上）&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里主要介绍互联网行业内有关数据库的相关中间件。数据库相关平台主要解决以下三个方面的问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="oYzsJc" href="http://chuansong.me/n/1119027225542" target="_blank"&gt;数据库相关中间件全家桶（下）&lt;/a&gt;》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;基于数据库增量日志解析，提供增量数据订阅&amp;amp;消费，目前主要支持了mysql。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="0YzsJc" href="http://chuansong.me/n/1129967925125" target="_blank"&gt;Java性能优化全攻略&lt;/a&gt; 》&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Java应用程序在许多垂直领域（银行、电信、医疗保健等）中都有广泛使用。Refcard的目的是，帮助开发者通过专注于JVM内部，性能调整原则和最佳实践，来提升应用程序在商业环境中的性能。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="GYzsJc" href="http://chuansong.me/n/1159416725224" target="_blank"&gt;系统负载能力浅析&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通常的，对于一个系统，增加并发用户数量时每秒请求数量也会增加。然而，我们最终会达到这样一个点，此时并发用户数量开始“压倒”服务器。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="QYzsJc" href="http://chuansong.me/n/1175755225837" target="_blank"&gt;谈谈HashMap线程不安全的体现&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们都知道HashMap初始容量大小为16,一般来说，当有数据要插入时，都会检查容量有没有超过设定的thredhold，如果超过，需要增大Hash表的尺寸。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;《 &lt;a csmlink="1YzsJc" href="http://chuansong.me/n/1142520625036" target="_blank"&gt;Java 8开发的4大顶级技巧&lt;/a&gt; 》&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我使用Java 8编码已经有些年头，既用于新的应用程序，也用来迁移现有的应用，感觉是时候写一些我发现的非常有用的“最佳实践”了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;《 &lt;a csmlink="AYzsJc" href="http://chuansong.me/n/1200933425141" target="_blank"&gt;深入理解DIP、IoC、DI以及IoC容器&lt;/a&gt; 》&lt;/span&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DIP是软件设计的一种思想，IoC则是基于DIP衍生出的一种软件设计模式。DI是IoC的具体实现方式之一，使用最为广泛。IoC容器是DI构造函注入的框架，它管理着依赖项的生命周期以及映射关系。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1217782625850</guid></item><item><title>Java的常见误区与细节</title><link>http://chuansong.me/n/1217782725828</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：赖信涛&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：www.kawabangga.com/posts/568&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1   在Java中，没有goto语句。因为大量使用goto语句会降低程序的可读性和可维护性，所以Java语言取消了goto的使用。同时，为了避免程序员自行使用goto所带来的混乱，Java语言仍将goto定义为一个关键字，但是没有定义任何语法，故称为“保留字”。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2   true、false和null在IDE中虽然以不同的颜色显示，但是并不是关键字，而是“字面常量”，就和String类型的abc一样。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3   定义名称时尽量避免使用$，因为编译器在对.java文件进行编译的时候，会将”$”编译成顶层类型与底层类型的连接符。见下例：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;package com.laixintao.Test;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class Outer$Inner {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static void main(String[] args) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Outer o = new Outer();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Outer.Inner i = o.new Inner();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        i.innerPrint();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;class Outer {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    class Inner {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        void innerPrint() {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            System.out.println("Inner Print!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在编译(javac Test3.java)这段代码的时候，编译器会报以下错误：Test.java:12: 错误: 类重复: com.laixintao.Test.Outer.Inner class Inner{ ^&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4   Unicode转义字符处理的非常早，在解析程序之前。例如：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;// char c1 = 'u00a';&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;// char c2 = 'u00d';&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在程序中出现这两行代码编译报错。这两个Unicode码分别表示”换行”和”回车”，所以，在编译器编译的时候，代码是这样的：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;// char c1 = '&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;';&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;// char c2 = '&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;';&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;5   Unicode码使用16位字符编码，在Java中用char类型来表示。现在Unicode已经扩展到一百万个字符，超出16位限制的成为增补字符。所有增补字符都不能用字符常量来表示。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;6   当short，byte，char参加运算时，结果为int型，而非与较高的类型相同。如果变量是byte，short，byte类型，当对其赋予编译时期的常量，而该常量又没有超过变量的取值范围时，编译器就可以进行隐式的收缩转换。这种隐式的收缩转换是安全的，因为该收缩转换只适用于变量的赋值，而不适用于方法调用语句，即不适用于方法调用时的参数传递。（详见java中默认类型转换的小问题）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;7   注意char类型，这是一个无符号类型。因此，char与short或char与byte之间的转换必须显示地使用类型转换。 从byte到char的转换为扩展收缩转换，该转换比较特殊，即先将byte扩展转换到int，然后再收缩到char。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;8   在整型数据间的扩展转换中，如果操作数是char类型（无符号类型），则进行无符号扩展，扩展位为0.如果操作数是byte，short或int（有符号类型），则进行有符号扩展，扩展位为该变量的符号位。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;9   整型数据之间的收缩转换，仅仅是截断并丢弃高位，不做任何其他处理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;10   0.1+0.2不等于0.3.System.out.println((double)0.1+(double)0.2);这条语句的输出结果是0.30000000000000004。因为计算机使用二进制来存储数据，而很多小数都不能够准确地使用二进制来表示（事实上，大多数地小数都是近似的），就像使用十进制小数不能准确地表示1/3这样地分数一样。大多数地浮点型，在计算机中只是近似地存储其值，而不像整型那样准确地存储。又例，这是一个死循环：for(float f = 10.1f;f != 11;f+=0.1f){}&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;11 float类型可以保留7～8个有效数字，而double类型可以保留15～16个有效数字，因而当int类型或long类型数值多于double或float地有效数字时，该值的一些最低有效位就会丢失，从而造成精度丢失，这时，就会采用IEEE754最近舍入模式，提取与该整型值最接近的浮点值。尽管整型向浮点型的转换属于扩展转换，但当数值很大或很小（绝对值很大）时，就会产生一定的精度丢失。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;12  i+++j如何计算？（这个问题在C/C++）中讨论是没有多大意义的，因为C/C++依赖于实现的硬件结构，不同的环境结果也会不同。不过在Java中，这个结果是固定的，不受其运行的硬件环境与平台的影响） 答：根据贪心规则，前置＋＋优于后置＋＋，结果是（i++）＋j&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;13  i++和++i其实都是先＋1，再赋值。++i，没什么好说的；i++,以j=i++;为例在底层的实现是：temp = i;i = i + 1; j = temp; 所以，i=15;i=i++;这个表达式的结果是15.（因为加一之后又执行了一次赋值，从16变回15）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;14   +0与-0在浮点类型变量存储中，符号位是不同的。当-0和+0参与浮点类型的相关运算（例如相除与求余运算）时，可以产生不同的结果。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;15   浮点的相除与求余运算不同与整型的相除与求余运算，当除数为0时，浮点运算不会产生ArithmeticException异常。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;16   String类是非可变类，其对象一旦创建，就不可销毁。String类那些看似修改字符序列的方法实际上都是返回新创建的String对象，而不是修改自身对象。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;17   由于String对象是不可改变的，因此具有线程安全性，可以自由地实现共享。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;18   在String类内部，是使用一个字符数组（char[]）来维护字符序列的。String的最大长度也就是字符数组的最大长度，理论上最大长度为int类型的最大值，即2147483647.在实际中，一般可获取的最大值小于理论最大值。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;19  main()方法在表现行为上，与其他方法基本相同，可以重载，由其他方法调用，继承，隐藏，也可以抛出异常，带有类型参数。我们也可以在一个程序中通过反射来调用main方法（或其他方法）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;20 当两个或多个方法的名称相同，而参数列表不同时，这几个方法就构成了重载。重载方法可以根据参数列表对应的类型与参数的个数来区分，但是，参数的名称、方法的返回类型，方法的异常列表与类型参数不能作为区分重载方法的条件。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;21   究竟选择哪个方法调用，顺序是这样的：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;在第一阶段，自动装箱（拆箱）与可变参数不予考虑，搜索对应形参类型可以匹配实参类型并且形参个数与实参个数相同的方法；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果在步骤一不存在符合条件的方法，在第二阶段，自动装箱与拆箱将会执行。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果在步骤二中不存在符合条件的方法，在第三阶段，可变参数的方法将会考虑。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果3个阶段都没有搜索到符合条件的方法，将会产生编译错误。如果如何条件的方法多于一个，将会选择最明确的方法。最明确的方法定义为：如果A方法的形参列表类型对应的都可以赋值给B方法的形参列表类型，则A方法比B方法明确。如果无法选出最明确的方法，则会产生编译错误。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;22   重写和隐藏的本质区别是：重写是动态绑定的，根据运行时引用所指向对象的实际类型来决定调用相关类的成员。而隐藏是静态绑定的，根据编译时引用的静态类型来决定调用的相关成员。换句话说，如果子类重写了父类的方法，当父类的引用指向子类对象时，通过父类的引用调用的是子类方法。如果子类隐藏了父类的方法（成员变量），通过父类的引用调用的仍是父类的方法（成员变量）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;23   构造器是递归调用的，子类的构造器会调用父类的构造器，直到调用Object类的构造器为止。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;24   构造器没有创建对象，构造器是使用new创建对象时由系统调用的，用来初始化类的实例成员。从顺序上说，先是创建对象，然后再调用构造器的。（构造器并没有产生新的对象）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;25   默认的构造器不为空，该构造器会调用父类的无参构造器，并可能执行实例成员变量的初始化。所以，默认的构造器至少调用了父类的构造器，它做的工作还可能更多，包括实例变量声明初始化与实例初始化块，都是在构造器中执行的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;26   当==或!=运算符的两个操作数的类型一个是基本数据类型，另一个是包装类引用类型时，将引用类型拆箱转换为基本数据类型，然后比较两个基本数据类型的值是否相等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;27   在Java中，数组也是类，数组声明的引用变量指向数组类型的对象。所有的数组都继承Object类，并且实现了java.lang.Cloneable与java.io.Serializable接口。数组的成员包括变量length（隐式存在）与从Object类继承的成员。Cloneable与Serializable是两个标记的接口，这两个接口中没有显式声明任何成员。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;28   接口是完全抽象的设计，不能实例化。使A用new方式创建的借口类型，实际上是创建了一个匿名类，该匿名类实现了接口类型。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;29   如果两个接口声明了相同的变量x，则当某接口同时继承这两个接口，或者某类同时实现这两个接口时，通过简单名称访问会产生编译错误。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;30   如果两个接口中声明了相同名称的方法m，并且两个方法没有构成重载，则当某接口能够同时继承这两个接口，或者某类能够同时继承这两个接口时，必须存在一种方法签名，使得该签名同时为两个m方法签名的子签名，并且在方法的返回类型上，必须存在一种类型，使得该类型同时为两个m方法返回类型的可替换类型。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1217782725828</guid></item><item><title>自己写一个java.lang.reflect.Proxy代理的实现</title><link>http://chuansong.me/n/1217782825853</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：五月的仓颉&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：www.cnblogs.com/xrq730/p/4918762.html&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Java设计模式9：代理模式一文中，讲到了动态代理，动态代理里面用到了一个类就是java.lang.reflect.Proxy，这个类是根据代理内容为传入的接口生成代理用的。本文就自己写一个Proxy类出来，功能和java.lang.reflect.Proxy一样，传入接口、代理内容，生成代理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;抛砖引玉吧，个人觉得自己写一些JDK里面的那些类挺好的，写一遍和看一遍真的是两个不同的概念，写一遍既加深了对于这些类的理解、提升了自己的写代码水平，也可以在写完之后对比一下自己的实现有哪些写得不好、又有哪些没考虑到的地方，这样可以显著地提高自己，像我就自己写过JDK里面主要的集合类、工具类、String里面常用方法等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本文的代码基础来源于马士兵Proxy的视频（顺便说一句，个人觉得马士兵的视频讲得比较拖拉，但是关于一些原理性、偏底层的东西讲得还蛮好的），一共分三个版本。可能有人觉得，人家视频上的内容拿过来写个文章，有意思吗？真不是，我是这么认为的：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1、把别人的东西变成自己的东西是一个过程，尽管代码是基于马士兵Proxy的视频的，但是所有的代码都是在自己这里手打、运行通过并自己充分理解了的，把别人的东西不加思考地复制黏贴没有意义，但是把别人的知识变成自己的理解并分享我觉得是一件好事&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2、代码尽管基于马士兵Proxy的基础上，但在这个基础上也是做了自己的优化过的&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;动态代理的实现应用到的技术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1、动态编译技术，可以使用Java自带的JavaCompiler类，也可以使用CGLIB、ASM等字节码增强技术，Java的动态代理包括Spring的内部实现貌似用的都是这个&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2、反射，包括对于类.class和getClass()方法的理解，Method类、Constructor类的理解&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3、IO流，主要就是字符输出流FileWriter&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4、对于ClassLoader的理解&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;基础类&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;先把基础类定义在这儿，首先是一个HelloWorld接口：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public interface HelloWorld&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    void print();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;HelloWorld接口的实现类：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class HelloWorldImpl implements HelloWorld&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void print()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("Hello World");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为这个接口写一个简单的静态代理类：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class StaticProxy implements HelloWorld&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private HelloWorld helloWorld;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public StaticProxy(HelloWorld helloWorld)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        this.helloWorld = helloWorld;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void print()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("Before Hello World!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        helloWorld.print();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("After Hello World!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;&lt;strong&gt;版本1：为一个静态代理动态生成一个代理类&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们知道如果用静态代理的话，那么每个接口都要为之写一个.java的代理类，这样就可能造成代理类无限膨胀，如果可以让Java帮我们自动生成一个就好了，不过还真的可以，看下第一个版本的代码：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class ProxyVersion_0 implements Serializable&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private static final long serialVersionUID = 1L;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static Object newProxyInstance() throws Exception&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String src = "package com.xrq.proxy;\n\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "public class StaticProxy implements HelloWorld\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "{\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\tHelloWorld helloWorld;\n\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\tpublic StaticProxy(HelloWorld helloWorld)\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t{\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t\tthis.helloWorld = helloWorld;\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t}\n\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\tpublic void print()\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t{\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t\tSystem.out.println(\"Before Hello World!\");\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t\thelloWorld.print();\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t\tSystem.out.println(\"After Hello World!\");\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "\t}\n" + &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;                     "}";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 生成一段Java代码 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String fileDir = System.getProperty("user.dir");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String fileName = fileDir + "\\src\\com\\xrq\\proxy\\StaticProxy.java";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        File javaFile = new File(fileName);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Writer writer = new FileWriter(javaFile);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        writer.write(src);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        writer.close();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 动态编译这段Java代码,生成.class文件 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        StandardJavaFileManager sjfm = compiler.getStandardFileManager(null, null, null);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Iterable&lt;? extends JavaFileObject?&gt; iter = sjfm.getJavaFileObjects(fileName);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        CompilationTask ct = compiler.getTask(null, sjfm, null, null, null, iter);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        ct.call();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sjfm.close();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 将生成的.class文件载入内存，默认的ClassLoader只能载入CLASSPATH下的.class文件 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        URL[] urls = new URL[] {(new URL("file:\\" + System.getProperty("user.dir") + "\\src"))};&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        URLClassLoader ul = new URLClassLoader(urls);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Class&lt;? ?&gt; c = ul.loadClass("com.xrq.proxy.StaticProxy");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 利用反射将c实例化出来 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Constructor&lt;? ?&gt; constructor = c.getConstructor(HelloWorld.class);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        HelloWorld helloWorldImpl = new HelloWorldImpl();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        HelloWorld helloWorld = (HelloWorld)constructor.newInstance(helloWorldImpl);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 使用完毕删除生成的代理.java文件和.class文件，这样就看不到动态生成的内容了 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        File classFile = new File(fileDir + "\\src\\com\\xrq\\proxy\\StaticProxy.class");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        javaFile.delete();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        classFile.delete();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return helloWorld;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;每一步的注释都在上面了，解释一下大致思路：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1、我们在另外一个类里面自己拼一段静态代理的代码的字符串&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2、为这个字符串生成一个.java文件，并放在我们工程的某个目录下面，因为是.java文件，所以在src下&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3、利用JavaCompiler类动态编译这段.java代码使之被编译成一个.class文件，JavaCompiler不熟悉没关系，知道就好了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4、因为在src下生成编译之后的.java文件，而默认的ClassLoader只能加载CLASSPATH下的.class文件，所以用URLClassLoader&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;5、由于代理类只有一个带参数的构造方法，所以要用java.lang.reflect.Constructor&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;6、最后把生成的StaticProxy.class文件删除（最好生成的StaticProxy.java也删除，这里没删除，是因为StaticProxy是生成的一个重要的中间类，功能都在它这儿，所以不删，出了错都要靠看这个类来定位问题的），这样代理的中间内容都没了，把反射newInstance()出来的内容返回出去就大功告成了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以自己看一下生成的StaticProxy.java对不对，写一段代码测试一下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public static void main(String[] args) throws Exception&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    long start = System.currentTimeMillis();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    HelloWorld helloWorld = (HelloWorld)ProxyVersion_0.newProxyInstance();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    System.out.println("动态生成代理耗时：" + (System.currentTimeMillis() - start) + "ms");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    helloWorld.print();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    System.out.println();        &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;结果为：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;动态生成代理耗时：387ms&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Before Hello World!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Hello World&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;After Hello World!&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;没有问题。可能有些人运行会报错”Exception in thread “main” java.lang.ClassNotFoundException: com.xrq.proxy.StaticProxy”，没关系，那是因为虽然你的src目录下生成了StaticProxy.class，但没有出来，点击src文件夹，再按F5（或者右键，点击Refresh也行）刷新一下就可以了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;版本二：为指定接口生成代理类&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;版本一已经实现了动态生成一个代理的.class文件了，算是成功的第一步，接下来要做进一步的改进。版本一只可以为固定的一个接口生成代理，现在改进成，传入某个接口的java.lang.Class对象，可以为这个接口及里面的方法都生成代理内容，代码这么写：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class ProxyVersion_1 implements Serializable&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private static final long serialVersionUID = 1L;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static Object newProxyInstance(Class&lt;? ?&gt; interfaces) throws Exception&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Method[] methods = interfaces.getMethods();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        StringBuilder sb = new StringBuilder(700);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("package com.xrq.proxy;\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("public class StaticProxy implements " +  interfaces.getSimpleName() + "\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t" + interfaces.getSimpleName() + " interfaces;\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\tpublic StaticProxy(" + interfaces.getSimpleName() +  " interfaces)\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t\tthis.interfaces = interfaces;\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t}\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        for (Method m : methods)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\tpublic " + m.getReturnType() + " " + m.getName() + "()\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\tSystem.out.println(\"Before Hello World!\");\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\tinterfaces." + m.getName() + "();\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\tSystem.out.println(\"After Hello World!\");\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t}\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("}");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 生成一段Java代码 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String fileDir = System.getProperty("user.dir");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String fileName = fileDir + "\\src\\com\\xrq\\proxy\\StaticProxy.java";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        File javaFile = new File(fileName);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Writer writer = new FileWriter(javaFile);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        writer.write(sb.toString());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        writer.close();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 动态编译这段Java代码,生成.class文件 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        StandardJavaFileManager sjfm = compiler.getStandardFileManager(null, null, null);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Iterable&lt;? extends JavaFileObject?&gt; iter = sjfm.getJavaFileObjects(fileName);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        CompilationTask ct = compiler.getTask(null, sjfm, null, null, null, iter);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        ct.call();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sjfm.close();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 将生成的.class文件载入内存，默认的ClassLoader只能载入CLASSPATH下的.class文件 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        URL[] urls = new URL[] {(new URL("file:\\" + System.getProperty("user.dir") + "\\src"))};&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        URLClassLoader ul = new URLClassLoader(urls);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Class&lt;? ?&gt; c = ul.loadClass("com.xrq.proxy.StaticProxy");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 利用反射将c实例化出来 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Constructor&lt;? ?&gt; constructor = c.getConstructor(HelloWorld.class);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        HelloWorld helloWorldImpl = new HelloWorldImpl();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Object obj = constructor.newInstance(helloWorldImpl);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 使用完毕删除生成的代理.java文件和.class文件，这样就看不到动态生成的内容了 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /*File classFile = new File(fileDir + "\\src\\com\\xrq\\proxy\\StaticProxy.class");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        javaFile.delete();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        classFile.delete();*/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;看到下面都没有变化，变化的地方就是在生成StaticProxy.java的地方，通过反射获取接口及方法的信息，这个版本的改进应该很好理解，写一段代码测试一下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public static void main(String[] args) throws Exception&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    long start = System.currentTimeMillis();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    HelloWorld helloWorld = (HelloWorld)ProxyVersion_1.newProxyInstance(HelloWorld.class);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    System.out.println("动态生成代理耗时：" + (System.currentTimeMillis() - start) + "ms");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    helloWorld.print();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    System.out.println();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;运行结果为：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;动态生成代理耗时：389ms&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Before Hello World!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Hello World&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;After Hello World!&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;也没有问题&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;版本三：让代理内容可复用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;接下来要到最后一个版本了，版本二解决的问题是可以为任何接口生成代理，那最后一个版本要解决的问题自然是可以为任何接口生成任何代理的问题了，首先定义一个接口InvocationHandler，这么起名字是因为JDK提供的代理实例处理程序的接口也是InvocationHandler：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public interface InvocationHandler&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    void invoke(Object proxy, Method method) throws Exception;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所以我们的Proxy类也要修改了，改为：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class ProxyVersion_2 implements Serializable&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private static final long serialVersionUID = 1L;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public static Object newProxyInstance(Class&lt;? ?&gt; interfaces, InvocationHandler h) throws Exception&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Method[] methods = interfaces.getMethods();        &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        StringBuilder sb = new StringBuilder(1024);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("package com.xrq.proxy;\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("import java.lang.reflect.Method;\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("public class $Proxy1 implements " +  interfaces.getSimpleName() + "\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\tInvocationHandler h;\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\tpublic $Proxy1(InvocationHandler h)\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t\tthis.h = h;\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("\t}\n\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        for (Method m : methods)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\tpublic " + m.getReturnType() + " " + m.getName() + "()\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\ttry\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t\tMethod md = " + interfaces.getName() + ".class.getMethod(\"" + m.getName() + "\");\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t\th.invoke(this, md);\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t}\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\tcatch (Exception e)\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t{\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t\te.printStackTrace();\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t\t}\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            sb.append("\t}\n");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sb.append("}");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 生成一段Java代码 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String fileDir = System.getProperty("user.dir");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        String fileName = fileDir + "\\src\\com\\xrq\\proxy\\$Proxy1.java";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        File javaFile = new File(fileName);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Writer writer = new FileWriter(javaFile);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        writer.write(sb.toString());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        writer.close();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 动态编译这段Java代码,生成.class文件 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        StandardJavaFileManager sjfm = compiler.getStandardFileManager(null, null, null);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Iterable&lt;? extends JavaFileObject?&gt; iter = sjfm.getJavaFileObjects(fileName);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        CompilationTask ct = compiler.getTask(null, sjfm, null, null, null, iter);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        ct.call();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        sjfm.close();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 将生成的.class文件载入内存，默认的ClassLoader只能载入CLASSPATH下的.class文件 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        URL[] urls = new URL[] {(new URL("file:\\" + System.getProperty("user.dir") + "\\src"))};&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        URLClassLoader ul = new URLClassLoader(urls);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Class&lt;? ?&gt; c = Class.forName("com.xrq.proxy.$Proxy1", false, ul);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 利用反射将c实例化出来 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Constructor&lt;? ?&gt; constructor = c.getConstructor(InvocationHandler.class);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        Object obj = constructor.newInstance(h);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        /** 使用完毕删除生成的代理.java文件和.class文件，这样就看不到动态生成的内容了 */&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        File classFile = new File(fileDir + "\\src\\com\\xrq\\proxy\\$Proxy1.class");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        javaFile.delete();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        classFile.delete();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        return obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;最明显的变化，代理的名字变了，从StaticProxy变成了$Proxy1，因为JDK也是这么命名的，用过代理的应该有印象。这个改进中拼接$Proxy1的.java文件是一个难点，不过我觉得可以不用纠结在这里，关注重点，看一下生成的$Proxy1.java的内容是什么：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class $Proxy1 implements HelloWorld&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    InvocationHandler h;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public $Proxy1(InvocationHandler h)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        this.h = h;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void print()&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            Method md = com.xrq.proxy.HelloWorld.class.getMethod("print");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            h.invoke(this, md);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        catch (Exception e)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            e.printStackTrace();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;看到，我们把对于待生成代理的接口方法的调用，变成了对于InvocationHandler接口实现类的invoke方法的调用（这就是动态代理最关键的一点），并传入了待调用的接口方法，这样不就实现了我们的要求了吗？我们InvocationHandler接口的实现类写invoke方法的具体实现，传入的第二个参数md.invoke就是调用被代理对象的方法，在这个方法前后都是代理内容，想加什么加什么，不就实现了动态代理了？所以，我们看一个InvocationHandler实现类的写法：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public class HelloInvocationHandler implements InvocationHandler&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    private Object obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public HelloInvocationHandler(Object obj)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        this.obj = obj;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    public void invoke(Object proxy, Method method)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("Before Hello World!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        try&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            method.invoke(obj, new Object[]{});&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        } &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        catch (Exception e)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;            e.printStackTrace();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;        System.out.println("After Hello World!");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;写个main函数测试一下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;public static void main(String[] args) throws Exception&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;{    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    long start = System.currentTimeMillis();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    HelloWorld helloWorldImpl = new HelloWorldImpl();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    InvocationHandler ih = new HelloInvocationHandler(helloWorldImpl);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    HelloWorld helloWorld = (HelloWorld)ProxyVersion_2.newProxyInstance(HelloWorld.class, ih);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    System.out.println("动态生成代理耗时：" + (System.currentTimeMillis() - start) + "ms");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    helloWorld.print();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;    System.out.println();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;运行结果为：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;动态生成代理耗时：351ms&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Before Hello World!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;Hello World&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;After Hello World!&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;没有问题&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;后记&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;虽然我们自己写了Proxy，但是JDK绝对不会用这种方式实现，原因无他，就是太慢。看到三个版本的代码，运行时间都在300ms以上，效率如此低的实现，如何能给开发者使用？我拿JDK提供的Proxy和InvocationHandler自己写了一个简单的动态代理，耗时基本只在5ms左右。所以，文章的内容仅供学习、研究，知识点很多，如果能把这篇文章里面的东西都弄懂，对于个人水平、对于Java很多知识点的理解，绝对是一个非常大的提高。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1217782825853</guid></item><item><title>图解 HTTP 协议</title><link>http://chuansong.me/n/1212773925218</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; font-size: 14px; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="max-width: 100%; white-space: pre-wrap; color: rgb(255, 41, 65); font-size: 14px; line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; white-space: normal; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;来源：BYSocket&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;链接：www.bysocket.com/?p=282&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;一、技术基石及概述&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;问：什么是HTTP?&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;答：HTTP是一个客户端和服务器端请求和响应的标准TCP。其实建立在TCP之上的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当我们打开百度网页时，是这样的：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;https://www.baidu.com&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;多了个S，其实S表示TLS、SSL。在这里不做解释，因此HTTP的技术基石如图所示：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a style=" border-width: 0px; border-style: initial; border-color: initial; font-size: 15px; color: rgb(179, 0, 0) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img class="alignnone size-full wp-image-108301" data-ratio="1.1403940886699508" data-type="png" data-w="406" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvsJnbLgfZRAwYUKMWDG0Nds0RmrWXl9DaDGJSdxr50F7mMhPJbebj8Q/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;那HTTP协议呢？HTTP协议（HyperText Transfer Protocol）,即超文本传输协议是用于服务器传输到客户端浏览器的传输协议。Web上，服务器和客户端利用HTTP协议进行通信会话。有OOP思想的得出结论：其会话的结构是一个简单的请求/响应序列，即浏览器发出请求和服务器做出响应。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="alignnone size-full wp-image-108304" data-ratio="0.1627172195892575" data-type="png" data-w="633" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvBUjngKNGP0s7OLETy0t6SN3v7JZAzJULlgoOBIEUEmZib6Mib6nPtH8g/0?wx_fmt=png" style=" border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both ; ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;二、深入理解技术基石和工作流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;既然HTTP是基于传输层的TCP协议，而TCP协议是面向连接的端到端的协议。因此，使用HTTP协议传输前，首先建立TCP连接，就是因此在谈的TCP链接过程的“三次握手”。如图&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="alignnone size-full wp-image-108302" data-ratio="0.2" data-type="png" data-w="545" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvbvcv3XTiaXtu9J1EUIxJadhvXXxsp2q3NMSP2zPCwsibRN4l4NiaLibjbg/0?wx_fmt=png" style=" border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both ; ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在Web上，HTTP协议使用TCP协议而不是UDP协议的原因在于一个网页必须传送很多数据，而且保证其完整性。TCP协议提供传输控制，按顺序组织数据和错误纠正的一系列功能。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一次HTTP操作称为一个事务，其工作过程可分为四步：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;1、客户端与服务器需要建立连接。（比如某个超级链接，HTTP就开始了。）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;2、建立连接后，发送请求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;3、服务器接到请求后，响应其响应信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;4、客户端接收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器断开连接。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;建立连接，其实建立在TCP连接基础之上。图解核心工作过程（即省去连接过程）如下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a style=" border-width: 0px; border-style: initial; border-color: initial; font-size: 15px; color: rgb(0, 153, 204) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img class="alignnone size-full wp-image-108305" data-ratio="0.24155193992490614" data-type="png" data-w="799" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvbHicWOXPho7cDDLZyXicHyzvOicdjmBXDpK35iaUfjB5GosNcUB4aKyXqg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;三、详解工作过程的HTTP报文&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;HTTP报文由从客户机到服务器的请求和从服务器到客户机的响应构成。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;一、请求报文格式如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;请求行&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;通用信息头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;请求头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;实体头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;（空行）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 16px; color: rgb(136, 136, 136);"&gt;报文主体&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如图，请求我博客一篇文章时发送的报文内容：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="alignnone size-full wp-image-108306" data-ratio="0.6535044422507403" data-type="png" data-w="1013" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvC2BM0bNrw6Rh3FG5Hpu4TsmE5dFUMq1QccXQpLjE4p1Ovmo9ib8mpcg/0?wx_fmt=png" style=" border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both ; ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对于其中请求报文详解:&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;1、请求行&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;方法字段 + URL + Http协议版本&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;2、通用信息头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Cache-Control头域：指定请求和响应遵循的缓存机制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;keep-alive 是其连接持续有效【在下面百度的例子，会得到验证】&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;3、请求头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Host头域，脑补吧&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Referer头域：允许客户端指定请求URL的资源地址。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;User-Agent头域：请求用户信息。【可以看出一些客户端浏览器的内核信息】&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;4、报文主体&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;如图中的 “ p=278 ”一般来说，请求主体少不了请求参数。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;二、应答报文格式如下：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;状态行&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;通用信息头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;响应头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;实体头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;（空行）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;报文主体&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如图，就是这篇博客响应的内容:&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="alignnone size-full wp-image-108308" data-ratio="0.6331658291457286" data-type="png" data-w="796" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvhtxUmGVD0icz6asRvgtibmDYzc3gFgnPwGPXk1tTfojuamHWDVAl8wEA/0?wx_fmt=png" style=" border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both ; ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对其中响应报文详解：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;1、状态行&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;HTTP协议版本 + 状态码 + 状态代码的文本描述&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;【比如这里，200 代表请求成功】&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;2、通用信息头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;keep-alive 是其连接持续有效【在下面百度的例子，会得到验证】&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Date头域：时间描述&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;3、响应头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Server头：处理请求的原始服务器的软件信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;4、实体头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Content-Type头：便是接收方实体的介质类型。（这也表示了你的报文主体是什么。）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;（空行）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;5、报文主体&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;这里就是HTML响应页面了，在截图tab页中的response中可查看。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 0, 0);"&gt;一次简单的请求/响应就完成了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(123, 12, 0);"&gt;&lt;strong&gt;三、HTTP协议知识补充&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;请求报文相关：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;请求行-请求方法&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;GET            请求获取Request-URI所标识的资源&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;POST          在Request-URI所标识的资源后附加新的数据&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;HEAD         请求获取由Request-URI所标识的资源的响应消息报头&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;PUT            请求服务器存储一个资源，并用Request-URI作为其标识&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;DELETE       请求服务器删除Request-URI所标识的资源&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;TRACE        请求服务器回送收到的请求信息，主要用于测试或诊断&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;CONNECT  保留将来使用&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;OPTIONS   请求查询服务器的性能，或者查询与资源相关的选项和需求&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;响应报文相关：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;响应行-状态码&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;1xx：指示信息–表示请求已接收，继续处理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;2xx：成功–表示请求已被成功接收、理解、接受&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;3xx：重定向–要完成请求必须进行更进一步的操作&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;4xx：客户端错误–请求有语法错误或请求无法实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;5xx：服务器端错误–服务器未能实现合法的请求&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;常见的状态码&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;200 OK&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;请求成功（其后是对GET和POST请求的应答文档。）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;304 Not Modified&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;404 Not Found&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;服务器无法找到被请求的页面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;500 Internal Server Error&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;请求未完成。服务器遇到不可预知的情况。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;比如304，在浏览器第一次打开百度时，如图所示:&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a style=" border-width: 0px; border-style: initial; border-color: initial; font-size: 15px; color: rgb(0, 153, 204) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img class="alignnone size-full wp-image-108303" data-ratio="0.634765625" data-type="png" data-w="1024" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvxqR307m7B5FgSkiaVCDcB9CLicwqN7UCqtibA9XlPR3jUlr3TTjjdZjug/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;刷新一下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a style=" border-width: 0px; border-style: initial; border-color: initial; font-size: 15px; color: rgb(0, 153, 204) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img class="alignnone size-full wp-image-108309" data-ratio="0.697265625" data-type="png" data-w="1024" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvctEdlxePuGJMao6ZMAHq9btmrNlXfO4kWA18jveUXUN4kVrq1Fxk0A/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这上面的304就证明了&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;1、304状态码:有些图片和js文件在本地客户端缓存，再次请求后，缓存的文件可以使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;2、以上所以HTTP请求，只靠一个TCP连接，这就是所谓的持久连接。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;四、关于HTTP协议的Web应用框架或者规范&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;JavaEE的人会知道Servlet规范。其中Web应用容器都实现了HTTP协议中的对象，即请求和响应对象。比如 javax.servlet.http.HttpServletResponse 对象中肯定有对状态码描述，如图&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="alignnone size-full wp-image-108307" data-ratio="0.8287671232876712" data-type="png" data-w="730" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQxme8UMser3zib1KVYjcCCQvAroiayHwSHOkib8NPN9dPCRe5ApPjB6KehenjLeJshALusREs2icILPiaA/0?wx_fmt=png" style=" border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both ; ; ; ; ; ; ; ; ; ; "/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;至于如何使用它们，坐等系列文章吧。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 76, 65);"&gt;五、总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;回顾全文，HTTP协议其实就是我们对话一样，语言就是其中的协议。所以掌握HTTP协议明白以下几点就好：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;1、用什么通过HTTP协议通信&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;2、怎么通过HTTP协议通信&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「ImportNew」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;看更多 Java 技术精选文章&lt;/span&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓&lt;span style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;↓↓&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQyDw7zYBm5mdR0kYTYxhcyRibvwBhstIaG4Qb6LrIpEkxbg2SmibCczIQ77PC219l5vibxkFKZXT9W1Q/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1212773925218</guid></item></channel></rss>