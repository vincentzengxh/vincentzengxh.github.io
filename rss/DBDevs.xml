<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>数据库开发 - chuansong.me</title><link>http://chuansong.me/account/DBDevs</link><description>伯乐在线旗下账号，分享数据库相关技术文章、教程和工具，另外还包括数据库相关的工作。偶尔也谈谈程序员人生 :)</description><lastBuildDate>Fri, 30 Dec 2016 11:58:45 -0000</lastBuildDate><ttl>10</ttl><item><title>一个复杂系统的拆分改造实践</title><link>http://chuansong.me/n/1424247748839</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px; line-height: 25.6px;"&gt;来源：伯乐在线专栏作者 - 占利军&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;http://blog.jobbole.com/109409/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;a csmlink="MBc3cc" href="http://chuansong.me/n/379161448239" style="line-height: 25.6px;" target="_blank"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;点击 → 了解如何加入专栏作者&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;1 为什么要拆分？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;先看一段对话。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.4979310344827586" data-type="png" data-w="1450" height="276" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdpCyma08TCROZIbY56wwM2R7ClpvX7Zu82sZMv0rKkIiagnzWlTn9rhA/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="554"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;从上面对话可以看出拆分的理由：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）  应用间耦合严重。系统内各个应用之间不通，同样一个功能在各个应用中都有实现，后果就是改一处功能，需要同时改系统中的所有应用。这种情况多存在于历史较长的系统，因各种原因，系统内的各个应用都形成了自己的业务小闭环；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）  业务扩展性差。数据模型从设计之初就只支持某一类的业务，来了新类型的业务后又得重新写代码实现，结果就是项目延期，大大影响业务的接入速度；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）  代码老旧，难以维护。各种随意的if else、写死逻辑散落在应用的各个角落，处处是坑，开发维护起来战战兢兢；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4）  系统扩展性差。系统支撑现有业务已是颤颤巍巍，不论是应用还是DB都已经无法承受业务快速发展带来的压力；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.6675461741424802" data-type="jpeg" data-w="379" height="217" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdbM1nsDT6lB6yvZKHmFFjssRMbkSvSoytTWNJUicIYzyWYrlRbSW8ichw/0?wx_fmt=jpeg" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="325"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;5）  新坑越挖越多，恶性循环。不改变的话，最终的结果就是把系统做死了。&lt;/p&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;2 拆前准备什么?&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;2.1 多维度把握业务复杂度&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一个老生常谈的问题，系统与业务的关系？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.5072358900144718" data-type="png" data-w="1382" height="233" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdXmPOYM3rxccxhm2gAaUOBRbkEAdO7hqoI9icCsyPfXeZSJEv4HOajFw/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="460"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们最期望的理想情况是第一种关系（车辆与人），业务觉得不合适，可以马上换一辆新的。但现实的情况是更像心脏起搏器与人之间的关系，不是说换就能换。一个系统接的业务越多，耦合越紧密。如果在没有真正把握住业务复杂度之前贸然行动，最终的结局就是把心脏带飞。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如何把握住业务复杂度？需要多维度的思考、实践。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一个是技术层面，通过与pd以及开发的讨论，熟悉现有各个应用的领域模型，以及优缺点，这种讨论只能让人有个大概，更多的细节如代码、架构等需要通过做需求、改造、优化这些实践来掌握。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;各个应用熟悉之后，需要从系统层面来构思，我们想打造平台型的产品，那么最重要也是最难的一点就是功能集中管控，打破各个应用的业务小闭环，统一收拢，这个决心更多的是开发、产品、业务方、各个团队之间达成的共识，可以参考《微服务（Microservice）那点事》一文，“按照业务或者客户需求组织资源”。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外也要与业务方保持功能沟通、计划沟通，确保应用拆分出来后符合使用需求、扩展需求，获取他们的支持。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2.2 定义边界，原则：高内聚，低耦合，单一职责！&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;业务复杂度把握后，需要开始定义各个应用的服务边界。怎么才算是好的边界？像葫芦娃兄弟一样的应用就是好的！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;举个例子，葫芦娃兄弟（应用）间的技能是相互独立的，遵循单一职责原则，比如水娃只能喷水，火娃只会喷火，隐形娃不会喷水喷火但能隐身。更为关键的是，葫芦娃兄弟最终可以合体为金刚葫芦娃，即这些应用虽然功能彼此独立，但又相互打通，最后合体在一起就成了我们的平台。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.35990888382687924" data-type="png" data-w="1317" height="171" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdgvMlUuMreIFtzjG2102j52VDxg6yoxAH1CCzhGeba7lFf3YFIGXJ0w/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="475"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里很多人会有疑惑，拆分粒度怎么控制？很难有一个明确的结论，只能说是结合业务场景、目标、进度的一个折中。但总体的原则是先从一个大的服务边界开始，不要太细，因为随着架构、业务的演进，应用自然而然会再次拆分，让正确的事情自然发生才最合理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2.3 确定拆分后的应用目标&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一旦系统的宏观应用拆分图出来后，就要落实到某一具体的应用拆分上了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;首先要确定的就是某一应用拆分后的目标。拆分优化是没有底的，可能越做越深，越做越没结果，继而又影响自己和团队的士气。比如说可以定这期的目标就是将db、应用分拆出去，数据模型的重新设计可以在第二期。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2.4 确定当前要拆分应用的架构状态、代码情况、依赖状况，并推演可能的各种异常&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;动手前的思考成本远远低于动手后遇到问题的解决成本。应用拆分最怕的是中途说“他*的，这块不能动，原来当时这样设计是有原因的，得想别的路子！”这时的压力可想而知，整个节奏不符合预期后，很可能会接二连三遇到同样的问题，这时不仅同事们士气下降，自己也会丧失信心，继而可能导致拆分失败。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2.5 给自己留个锦囊，“有备无患”&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;锦囊就四个字“有备无患”，可以贴在桌面或者手机上。在以后具体实施过程中，多思考下“方案是否有多种可以选择？复杂问题能否拆解？实际操作时是否有预案？”，应用拆分在具体实践过程中比拼得就是细致二字，多一份方案，多一份预案，不仅能提升成功概率，更给自己信心。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2.6 放松心情，缓解压力&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;收拾下心情，开干！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;3 实践&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;3.1 db拆分实践&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;DB拆分在整个应用拆分环节里最复杂，分为垂直拆分和水平拆分两种场景，我们都遇到了。垂直拆分是将库里的各个表拆分到合适的数据库中。比如一个库中既有消息表，又有人员组织结构表，那么将这两个表拆分到独立的数据库中更合适。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;水平拆分：以消息表为例好了，单表突破了千万行记录，查询效率较低，这时候就要将其分库分表。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.42005610098176716" data-type="png" data-w="1426" height="207" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdEWbLCm8GYZrULuzelia3XsgrhZgNicSUMPsxxZNXbPNpenE4aFppSmoQ/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="493"/&gt;&lt;/p&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;3.1.1 主键id接入全局id发生器&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;DB拆分的第一件事情就是使用全局id发生器来生成各个表的主键id。为什么？&lt;/p&gt;&lt;p&gt;举个例子，假如我们有一张表，两个字段id和token，id是自增主键生成，要以token维度来分库分表，这时继续使用自增主键会出现问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.25680933852140075" data-type="png" data-w="771" height="80" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxd2unIdWHu7z9iaWBBSL39hhq7oMASmg57dsCY7WhMibLQ6z062lmPU8jw/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="312"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;正向迁移扩容中，通过自增的主键，到了新的分库分表里一定是唯一的，但是，我们要考虑迁移失败的场景，如下图所示，新的表里假设已经插入了一条新的记录，主键id也是2，这个时候假设开始回滚，需要将两张表的数据合并成一张表（逆向回流），就会产生主键冲突！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.3829639889196676" data-type="png" data-w="1444" height="171" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxd0WYOic4epQH0GmiaxQo4878IHF0wPGGarfv0Rlydp0LQ5Yvbib1QyGNdg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="447"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;因此在迁移之前，先要用全局唯一id发生器生成的id来替代主键自增id。这里有几种全局唯一id生成方法可以选择。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）snowflake：https://github.com/twitter/snowflake；（非全局递增）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2） mysql新建一张表用来专门生成全局唯一id（利用auto_increment功能）（全局递增）；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）有人说只有一张表怎么保证高可用？那两张表好了（在两个不同db），一张表产生奇数，一张表产生偶数。或者是n张表，每张表的负责的步长区间不同（非全局递增）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4）……&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们使用的是阿里巴巴内部的tddl-sequence（mysql+内存），保证全局唯一但非递增，在使用上遇到一些坑：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）对按主键id排序的sql要提前改造。因为id已经不保证递增，可能会出现乱序场景，这时候可以改造为按gmt_create排序；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）报主键冲突问题。这里往往是代码改造不彻底或者改错造成的，比如忘记给某一insert sql的id添加#{}，导致继续使用自增，从而造成冲突；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.1148491879350348" data-type="png" data-w="862" height="61" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdxrDeX1rLyEQwrtrfeKtLP2cZc7YyVxymY20ibuiboRqSV7z8icGVT5nHQ/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="531"/&gt;&lt;/p&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;3.1.2 建新表&amp;amp;迁移数据&amp;amp;binlog;同步&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）  新表字符集建议是utf8mb4，支持表情符。新表建好后索引不要漏掉，否则可能会导致慢sql！从经验来看索引被漏掉时有发生，建议事先列计划的时候将这些要点记下，后面逐条检查；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）  使用全量同步工具或者自己写job来进行全量迁移；全量数据迁移务必要在业务低峰期时操作，并根据系统情况调整并发数；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）  增量同步。全量迁移完成后可使用binlog增量同步工具来追数据，比如阿里内部使用精卫，其它企业可能有自己的增量系统，或者使用阿里开源的cannal/otter：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;https://github.com/alibaba/canal?spm=5176.100239.blogcont11356.10.5eNr98&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;https://github.com/alibaba/otter/wiki/QuickStart?spm=5176.100239.blogcont11356.21.UYMQ17&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;增量同步起始获取的binlog位点必须在全量迁移之前，否则会丢数据，比如我中午12点整开始全量同步，13点整全量迁移完毕，那么增量同步的binlog的位点一定要选在12点之前。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;位点在前会不会导致重复记录？不会！线上的MySQL binlog是row 模式，如一个delete语句删除了100条记录，binlog记录的不是一条delete的逻辑sql，而是会有100条binlog记录。insert语句插入一条记录，如果主键冲突，插入不进去。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4&gt;3.1.3 联表查询sql改造&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;现在主键已经接入全局唯一id，新的库表、索引已经建立，且数据也在实时追平，现在可以开始切库了吗？no！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;考虑以下非常简单的联表查询sql，如果将B表拆分到另一个库里的话，这个sql怎么办？毕竟跨库联表查询是不支持的！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.15088757396449703" data-type="png" data-w="676" height="85" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxd6xyY47YWiaOWjplwzmq2wz6P3YBDJElUh6B5qiczsibnnSlEofibFX4U6A/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="563"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;因此，在切库之前，需要将系统中上百个联表查询的sql改造完毕。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如何改造呢？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1） 业务避免&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;业务上松耦合后技术才能松耦合，继而避免联表sql。但短期内不现实，需要时间沉淀；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2） 全局表&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;每个应用的库里都冗余一份表，缺点：等于没有拆分，而且很多场景不现实，表结构变更麻烦；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3） 冗余字段&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;就像订单表一样，冗余商品id字段，但是我们需要冗余的字段太多，而且要考虑字段变更后数据更新问题；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4） 内存拼接&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4.1）通过RPC调用来获取另一张表的数据，然后再内存拼接。1）适合job类的sql，或改造后RPC查询量较少的sql；2）不适合大数据量的实时查询sql。假设10000个ID，分页RPC查询，每次查100个，需要5ms，共需要500ms，rt太高。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.36147757255936674" data-type="png" data-w="379" height="112" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdcRgJAGLe7UMg8QVYCEgXRb5Xs5fABNZ2icZ4Gn56h8M9Z6Xct5waCibA/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="310"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4.2）本地缓存另一张表的数据&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;适合数据变化不大、数据量查询大、接口性能稳定性要求高的sql。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.6112224448897795" data-type="png" data-w="499" height="159" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdJFKpKOrOegMWO1R33NDvyByWVIibsmo2LlBJ2uRdMxgTJDReWLUQHMA/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="261"/&gt;&lt;/p&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;3.1.4切库方案设计与实现（两种方案）&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以上步骤准备完成后，就开始进入真正的切库环节，这里提供两种方案，我们在不同的场景下都有使用。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;a）DB停写方案&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.5106382978723404" data-type="png" data-w="1363" height="209" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdHicW5zl0SUoc3RG3ECFLFmpI5AT9Dag7Pe0moleicSUo5mYdJ7CcczRA/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="409"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;优点：快，成本低；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缺点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）如果要回滚得联系DBA执行线上停写操作，风险高，因为有可能在业务高峰期回滚；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）只有一处地方校验，出问题的概率高，回滚的概率高&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;举个例子，如果面对的是比较复杂的业务迁移，那么很可能发生如下情况导致回滚：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;sql联表查询改造不完全；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;sql联表查询改错&amp;amp;性能问题；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;索引漏加导致性能问题；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;字符集问题&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;此外，binlog逆向回流很可能发生字符集问题（utf8mb4到gbk），导致回流失败。这些binlog同步工具为了保证强最终一致性，一旦某条记录回流失败，就卡住不同步，继而导致新老表的数据不同步，继而无法回滚！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;b）双写方案&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.5494428969359332" data-type="png" data-w="1436" height="251" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdJyTN4x62LkTv2yK7upFMLxbcmBZtjRibbs8coEes1rPIAhbgUT0bOKw/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="457"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;第2步“打开双写开关，先写老表A再写新表B”，这时候确保写B表时try catch住，异常要用很明确的标识打出来，方便排查问题。第2步双写持续短暂时间后（比如半分钟后），可以关闭binlog同步任务。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;优点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）将复杂任务分解为一系列可测小任务，步步为赢；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）线上不停服，回滚容易；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）字符集问题影响小&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缺点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）流程步骤多，周期长；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）双写造成RT增加&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4&gt;3.1.5 开关要写好&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;不管什么切库方案，开关少不了，这里开关的初始值一定要设置为null！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果随便设置一个默认值，比如”读老表A“，假设我们已经进行到读新表B的环节了。这时重启了应用，在应用启动的一瞬间，最新的“读新表B”的开关推送等可能没有推送过来，这个时候就可能使用默认值，继而造成脏数据！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;3.2 拆分后一致性怎么保证？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;以前很多表都在一个数据库内，使用事务非常方便，现在拆分出去了，如何保证一致性？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）分布式事务&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;性能较差，几乎不考虑。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）消息机制补偿&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）定时任务补偿&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;用得较多，实现最终一致，分为加数据补偿，删数据补偿两种。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;3.3 应用拆分后稳定性怎么保证？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;一句话：怀疑第三方，防备使用方，做好自己！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;img class="aligncenter" data-ratio="0.1234718826405868" data-type="png" data-w="818" height="57" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdf9ef9K9kIXUBz4RG8TkdfONnjCyj67MshkhakCCRQFDuUwH4LrLSuA/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="462"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）怀疑第三方&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;a）防御式编程，制定好各种降级策略；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;比如缓存主备、推拉结合、本地缓存……&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;b）遵循快速失败原则，一定要设置超时时间，并异常捕获；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;c）强依赖转弱依赖，旁支逻辑异步化&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;我们对某一个核心应用的旁支逻辑异步化后，响应时间几乎缩短了1/3，且后面中间件、其它应用等都出现过抖动情况，而核心链路一切正常；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;d）适当保护第三方，慎重选择重试机制&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）防备使用方&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;a）设计一个好的接口，避免误用&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;遵循接口最少暴露原则；很多同学搭建完新应用后会随手暴露很多接口，而这些接口由于没人使用而缺乏维护，很容易给以后挖坑。听到过不只一次对话，”你怎么用我这个接口啊，当时随便写的，性能很差的“；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不要让使用方做接口可以做的事情；比如你只暴露一个getMsgById接口，别人如果想批量调用的话，可能就直接for循环rpc调用，如果提供getMsgListByIdList接口就不会出现这种情况了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;避免长时间执行的接口；特别是一些老系统，一个接口背后对应的可能是for循环select DB的场景。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;…&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;b）容量限制&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;按应用优先级进行流控；不仅有总流量限流，还要区分应用，比如核心应用的配额肯定比非核心应用配额高；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;业务容量控制。有些时候不仅仅是系统层面的限制，业务层面也需要限制。举个例子，对saas化的一些系统来说，”你这个租户最多1w人使用“。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）做好自己&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;a）单一职责&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;b）及时清理历史坑&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;例：例如我们改造时候发现一年前留下的坑，去掉后整个集群cpu使用率下降1/3&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;c） 运维SOP化&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;说实话，线上出现问题，如果没有预案，再怎么处理都会超时。曾经遇到过一次DB故障导致脏数据问题，最终只能硬着头皮写代码来清理脏数据，但是时间很长，只能眼睁睁看着故障不断升级。经历过这个事情后，我们马上设想出现脏数据的各种场景，然后上线了三个清理脏数据的job，以防其它不可预知的产生脏数据的故障场景，以后只要遇到出现脏数据的故障，直接触发这三个清理job，先恢复再排查。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;d）资源使用可预测&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;应用的cpu、内存、网络、磁盘心中有数&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;正则匹配耗cpu&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;耗性能的job优化、降级、下线（循环调用rpc或sql）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;慢sql优化、降级、限流&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;tair/redis、db调用量要可预测&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;例：tair、db&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;举个例子: 某一个接口类似于秒杀功能，qps非常高（如下图所示），请求先到tair，如果找不到会回源到DB，当请求突增时候，甚至会触发tair/redis这层缓存的限流，此外由于缓存在一开始是没数据的，请求会穿透到db，从而击垮db。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.33178869323447635" data-type="png" data-w="1079" height="109" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdah0paIpRkp6fyCM6wz89gruGcrdR7Cy1DUuW8Sib67lLp9vHT9XO9DQ/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="329"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里的核心问题就是tair/redis这层资源的使用不可预测，因为依赖于接口的qps，怎么让请求变得可预测呢？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果我们再增加一层本地缓存（guava，比如超时时间设置为1秒），保证单机对一个key只有一个请求回源，那样对tair/redis这层资源的使用就可以预知了。假设有500台client，对一个key来说，一瞬间最多500个请求穿透到Tair/redis，以此类推到db。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.24175824175824176" data-type="png" data-w="1456" height="111" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdnaRz8oRSPFlK8KnSKBxretjWD7LfNE121aoBo65rGRBDP5lHGrIicOg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="459"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;再举个例子：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;比如client有500台，对某key一瞬间最多有500个请求穿透到db，如果key有10个，那么请求最多可能有5000个到db，恰好这些sql的RT有些高，怎么保护DB的资源？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以通过一个定时程序不断将数据从db刷到缓存。这里就将不可控的5000个qps的db访问变为可控的个位数qps的db访问。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="aligncenter" data-ratio="0.4368131868131868" data-type="png" data-w="1456" height="190" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdM3L944fnsCrFWPvlPLCQBke1Py9FaRy0kNK9tawWFaEQqYAnGiarGHg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" width="435"/&gt;&lt;/p&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;4  总结&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1）做好准备面对压力！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;2）复杂问题要拆解为多步骤，每一步可测试可回滚！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这是应用拆分过程中的最有价值的实践经验！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;3）墨菲定律：你所担心的事情一定会发生，而且会很快发生，所以准备好你的SOP（标准化解决方案）！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;某个周五和组里同事吃饭时讨论到某一个功能存在风险，约定在下周解决，结果周一刚上班该功能就出现故障了。以前讲小概率不可能发生，但是概率再小也是有值的，比如p=0.00001%，互联网环境下，请求量足够大，小概率事件就真发生了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;4）借假修真&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这个词看上去有点玄乎，顾名思义，就是在借者一些事情，来提升另外一种能力，前者称为假，后者称为真。在任何一个单位，对核心系统进行大规模拆分改造的机会很少，因此一旦你承担起责任，就毫不犹豫地全力以赴！不要被过程的曲折所吓倒，心智的磨砺，才是本真。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 20px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;专栏作者简介&lt;span style="max-width: 100%; line-height: 25.6px;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="max-width: 100%; line-height: 25.6px;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="line-height: 25.6px; max-width: 100%;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="line-height: 25.6px; max-width: 100%;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（ &lt;/span&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;a csmlink="TBc3cc" href="http://chuansong.me/n/379161448239" style="line-height: 25.6px;" target="_blank"&gt;点击 → 加入专栏作者&lt;/a&gt;&lt;span style="line-height: 25.6px; max-width: 100%;"&gt; ）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="white-space: normal; line-height: 25.6px; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;p&gt;占利军：&lt;span style="color: rgb(46, 46, 46);"&gt;&lt;/span&gt;一个专注于后端架构、算法的工程师 个人经历： 2015 至今 阿里巴巴； 2013-2015 美团； 2010-2013 中科院（硕士）； 2006-2010 浙大（本科）&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img class="" data-ratio="1.26" data-type="jpeg" data-w="250" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/DmibiaFiaAI4B2UhdQZGsDOoInPPnLtbHxdN3vxCaeB1mWD4Uu4SRnia3D6lOjvWkzcNibgBAWicJYKGe9ibFiajibeLnZQ/0?wx_fmt=jpeg" style="border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 10px; font-size: 0px; color: transparent; vertical-align: middle; width: 230px; height: 290px;"/&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;打&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;赏支持作者写出更多好文章，谢谢！&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1424247748839</guid></item><item><title>完整揭秘阿里双11背后的技术(存储、大数据和混合云架构等)</title><link>http://chuansong.me/n/1414925048679</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;section style="background-color: rgb(255, 255, 255); box-sizing: border-box;"&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="   box-sizing: border-box; "&gt;&lt;section class="" style=" text-align: center; margin-top: 10px; margin-bottom: 10px;  box-sizing: border-box; "&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(0, 128, 255); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;新的一年该给自己充充电了！&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;数十位阿里技术大V精心选题！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;8大技术领域27篇共计十万余字！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2016双11业务狂欢背后的技术实践&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;全面阐述阿里巴巴最新技术积累与创新&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &lt;img data-ratio="1.1764705882352942" data-s="300,640" data-type="png" data-w="459" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8yktqs9hxhBTmnU9ibd3KuibnPP6t5Gh2DoViadxtFeDFsOpAwW6xicAjQ34WJCnALqlGcu6F8uhByAIwQ/640?wx_fmt=png" style="box-sizing: border-box !important; word-wrap: break-word !important; width: auto !important; visibility: visible !important;"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(136, 136, 136); font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;《不一样的技术创新-阿里巴巴2016双11背后的技术》&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="1" data-s="300,640" data-type="jpeg" data-w="258" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/2A8tXicCG8yktqs9hxhBTmnU9ibd3KuibnPbwcxgZzfyQ4iak4lsEJU8pI8SFaxc11MUkw2ZJakpnR7BXG3cjydxuA/640?wx_fmt=jpeg" style="box-sizing: border-box !important; word-wrap: break-word !important; width: auto !important; visibility: visible !important;"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong style="max-width: 100%; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注阿里技术，立即在线阅读！&lt;/strong&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;经过3个月的精心策划和准备，《不一样的技术创新--阿里巴巴2016双11背后的技术》一书最终呈现在大家面前。期待这27篇共计10万余字凝聚了阿里工程师的智慧和创造力的的技术干货，在2017新年到来之际，提前给您充充电～迎接互联网技术的新挑战！&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;每年双11技术保障工作的顺利完成，是阿里技术积累和创新能力的集中展现。2016双11业务狂欢的背后，更是体现了阿里这两年来在人工智能、VR、云计算和大数据技术方面丰富的技术实践与突破。&lt;/span&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;书中全面阐述阿里双11背后的技术实践与创新，包含基础设施、存储、中间件、云计算、业务架构、大数据、认知计算与人工智能、交互技术及安全等技术领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section style="background-color: rgb(255, 255, 255); box-sizing: border-box;"&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="   box-sizing: border-box; "&gt;&lt;section class="" style=" margin-top: 0.5em; margin-bottom: 0.5em;  box-sizing: border-box; "&gt;&lt;section class="" style="border-top: 2px solid rgb(146, 124, 124); padding-top: 3px; border-right-color: rgb(146, 124, 124); border-bottom-color: rgb(146, 124, 124); border-left-color: rgb(146, 124, 124); box-sizing: border-box;"&gt;&lt;section class="" style="display: inline-block; vertical-align: top; height: 2em; line-height: 2em; padding-right: 0.5em; padding-left: 0.5em; color: rgb(255, 255, 255); background-color: rgb(146, 124, 124); box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;全书目录&lt;/p&gt;&lt;/section&gt;&lt;section style="width: 0px; display: inline-block; vertical-align: top; border-left: 0.8em solid rgb(146, 124, 124); border-top: 1em solid rgb(146, 124, 124); border-right: 0.8em solid transparent !important; border-bottom: 1em solid transparent !important; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section style="background-color: rgb(255, 255, 255); box-sizing: border-box;"&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="   box-sizing: border-box; "&gt;&lt;section class="" style=" margin-top: 10px; margin-bottom: 10px;  box-sizing: border-box; "&gt;&lt;section class="" style="display: inline-block; width: 100%; border-width: 1px; border-style: solid; border-color: rgb(192, 200, 209); padding: 10px; background-color: rgb(250, 250, 239); box-shadow: rgb(170, 170, 170) 0px 0px 5px; border-radius: 0.6em; box-sizing: border-box;"&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="box-sizing: border-box;"&gt;&lt;section class="" style="   box-sizing: border-box; "&gt;&lt;section class="" style="color: rgb(51, 51, 51); box-sizing: border-box;"&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第一章 基础设施&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;1.1 万亿交易量级下的秒级监控&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;1.2 双11背后基础设施软硬结合实践创新&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;1.3 阿里视频云ApsaraVideo是怎样让4000万人同时狂欢的&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第二章 存储&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;2.1永不停止的脚步——数据库优化之路&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;2.2 AliCloudDB--双11商家后台数据库的基石&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第三章 中间件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;3.1 万亿级数据洪峰下的分布式消息引擎&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第四章 电商云化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;4.1 17.5W秒级交易峰值下的混合云弹性架构之路&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;4.2 集团AliDocker化双11总结&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第五章 业务架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;5.1 内容+：打造不一样的双11&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;5.2 双11交易核心链路的故事&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;5.3 千亿访问量下的开放平台技术揭秘&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;5.4 智慧供应链&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;5.5 菜鸟双11“十亿级包裹”之战&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第六章 大数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;6.1 双11数据大屏背后的实时计算处理&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;6.2 双11背后的大规模数据处理&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;6.3 突破传统，4k大屏的沉浸式体验&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第七章 人工智能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;7.1 基于深度强化学习与自适应在线学习的搜索和推荐算法研究&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;7.2 颠覆传统的电商智能助理-阿里小蜜技术揭秘&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;7.3 深度学习与自然语言处理在智能语音客服中的应用&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;7.4 数据赋能商家背后的黑科技&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;7.5 探索基于强化学习的智能推荐之路&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;7.6 DNN在搜索场景中的应用&lt;/span&gt;&lt;/p&gt;&lt;p class="p2"&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;strong&gt;&lt;span class="s1"&gt;第八章 交互技术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;8.1 VR电商购物&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;8.2 淘宝直播在双11的互动实践&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;8.3 2016双11前端突破&lt;/span&gt;&lt;/p&gt;&lt;p class="p1"&gt;&lt;span style="font-size: 14px;"&gt;8.4 Weex 双11会场大规模应用的秒开实战和稳定性保障&lt;/span&gt;&lt;/p&gt;&lt;p class="p3"&gt;&lt;span style="font-size: 14px;"&gt;8.5 双11晚会背后的技术&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; background-color: rgb(255, 255, 255); word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; font-size: 10px; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; font-size: 16px; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; font-size: 10px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 16px; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;现在关注“&lt;/span&gt;&lt;strong style="max-width: 100%; color: rgb(27, 143, 210); font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;阿里技术&lt;/strong&gt;&lt;span style="max-width: 100%; font-size: 16px; color: rgb(0, 0, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;”公众号，可第一时间在线阅读双11电子书，10万字纯干货，8个领域27篇文章，涵盖基础设施、存储、中间件、云计算、业务架构、大数据、认知计算与人工智能、交互技术及安全等技术领域！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p class="" style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &lt;img data-ratio="0.509375" data-s="300,640" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/2A8tXicCG8yktqs9hxhBTmnU9ibd3KuibnP2jQkF72NCiaR1KHDsuppEmvxfOwIf7GPD44INdSqnRjnF4Fa9ZQS2Xg/640?wx_fmt=jpeg" style="box-sizing: border-box !important; word-wrap: break-word !important; width: auto !important; visibility: visible !important;"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1414925048679</guid></item><item><title>架构设计中的 6 种常见安全误区</title><link>http://chuansong.me/n/1414925148642</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;来源：付山阳&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;www.csdn.net/article/2015-08-13/2825453&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;&lt;a csmlink="nWcicc" href="http://chuansong.me/n/379161448239" style="line-height: 25.6px;" target="_blank"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如有好文章投稿，请点击 → 这里了解详情&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;自然世界中，先天有缺陷的生物总是容易被细菌病毒入侵，而健壮的生物更能抵抗细菌病毒的攻击，计算机系统也是一样，若有先天的架构设计安全缺陷，那么在面临网络攻击的时候，就更容易被入侵或者破坏，甚至因为设计架构的原因，有些漏洞完全没有办法修复！本文将讲述架构设计中需要避免出现的安全误区，以帮助我们研发人员设计出更安全健壮的软件架构。本文的举例既有硬件架构，也有软件架构，还有基础架构等等不同的架构，但其中原理适用于所有的架构设计。下文将从兼容性设计误区，降低成本设计误区，数据和代码不分离的设计误区，封闭设计的误区，黑名单设计的误区，没有将安全列为设计目标之一的误区，总共6个方面来探讨设计安全误区的问题。&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;误区一：兼容性设计&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;兼容性越好的架构越能适应未来变化的需要，所以架构设计者会非常关注架构的兼容性设计，但是有些兼容性设计会带来严重的安全漏洞，这些安全漏洞甚至无法以简单的漏洞补丁方式修复。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;以苹果的USB-C接口设计为案例。USB-C这个接口不仅用来实现供电、还用于支持鼠标，键盘等设备的数据传输，起到了简化设计结构，方便用户的目的。谷歌新款Chromebook Pixel也内置了USB-C接口，预示着业界对于MacBook的USB-C接口设计基本上是一致认可的。不过，安全专家却认为这是一个很糟糕的设计。在2014年的黑帽技术大会上，安全专家演示了一次针对USB-C接口的攻击，只要将特制的U盘插入使用USB-C接口的苹果计算机，攻击者无需在做任何操作，就可以将后门或是病毒自动植入苹果计算机，使计算机可以被攻击者远程控制或是通过病毒自动破坏计算机内的文件，非常可怕。更悲剧的还在后面，苹果一直都没有办法修复该漏洞，为什么呢？这得从这个漏洞的利用方式说起，上文说到攻击需要特制的U盘，安全专家改变了U盘的硬件和软件结构和内容，当U盘插入USB-C接口的苹果计算机时，电脑会识别U盘为一个键盘，再利用U盘中的芯片和存储的攻击代码，就可以伪装成键盘向主机发送控制命令，从而完全控制主机，无论使用者是否开启自动播放，都可以成功。所以漏洞的关键在于U盘和键盘等设备可以共用同一类接口与计算机交互，在计算机系统上没有办法区分伪装成键盘的U盘和真实的键盘，这样若不改变USB-C接口可以兼容U盘，键盘等各种硬件的设计，他们就不能修复该漏洞，而若要修复该漏洞就必须推翻原来的设计，让USB接口不再兼容键盘，鼠标等输入硬件，输入类硬件仍然使用原来的PS/2接口或其它不同的接口。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;苹果的USB-C接口设计产生了一个必须推翻自己才能修复的漏洞， 所以说这是一个糟糕的设计。对于软硬件的兼容性设计，第一，一定要注意兼容的对象是否为同一类，不同类的对象最好不要强容，苹果这个设计就没有将控制指令的输入设备（键盘）与数据输入设备（U盘）这两类对象区分对待，导致了这个越权漏洞的产生；第二，兼容性设计者需要确保鉴权机制能够识别不同的对象输入，对不同的对象输入走不同的处理，避免出现控制指令输入设备可以伪装数据输入设备，代码可以伪装成数据输入的漏洞，借用一句经典的话——“圈子不同，不要强容”。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;误区二：降低成本设计&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;架构设计者也会非常关注架构的成本，能以最少的成本实现系统是体现设计者水平的重要标志，所以架构设计者的设计总有降低软硬件成本的倾向，这种倾向本没有错，但如果在错误的地方降了成本，给系统带来极大的安全风险，就得不偿失了。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;例如下面这个因为降成本设计导致服务器无法防范CC攻击的场景。很多设计者会将每台服务器的负载率设定得非常高，高达50%-70%，希望减少服务器的部署以降低成本，但是在正常业务场景下就有这么高的负载，被CC攻击的时候会很容易被瘫痪，安全专家也没有办法在服务器上实施安全策略以防御攻击。CC（Challenge Collapsar）是一种HTTP层的DDos攻击，它通过发送大量HTTP层的请求，以达到让被攻击的目标网站瘫痪的目的。Challenge Collapsar的中文意思是挑战黑洞，大家可能会觉得它的名字有点怪，这里涉及攻击命名者与一个防火墙产品的纠葛，黑洞是一款知名的防火墙产品，意思很明显了，命名者想说黑洞防火墙也防不住他的这种攻击。目前国内领先的几家DDos清洗设备安全厂商可以基于特征防御一些普通的CC攻击，但是对于一些没有数据段特征，并且有大量代理IP的CC攻击仍然没有办法。这个时候防御的重点战场就必须转移到服务器上来了，通过业务服务器上更多业务场景的数据，以及更容易编程实现复杂的安全策略优势来检测攻击请求，举个例子，比如我们通常业务场景下，来自河南省的访问量很少，而攻击的时候该省的访问量上升10倍，我们可以对该省的访问量丢掉80%，从而防御攻击，并且最大限度的降低对业务的影响。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;所以设计时保证一定的服务器冗余，能够降低攻击开始阶段系统就被攻击到瘫痪的概率，也为DDos安全专家的安全防御策略提供计算资源。如果有条件的话，最好是把业务部署在云上，这样被攻击的时候可以动态增加服务器数量，既能节省成本也能保障攻击的时候能够有效的防护。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;误区三：数据和代码不分离的设计&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;数据和代码不分离意味着数据可以被当成代码执行，而数据是可以由用户（攻击者）自己定义的，也就是说用户（攻击者）可以自定义在系统上执行的代码，那么攻击者可以构造木马代码，作为数据输入给系统，系统执行这些木马代码后，系统就会被攻击者控制，这样的设计将给系统带来极大的风险。我们的系统开发过程中其实有不少这样的案例，下面我们先看看一个设计导致的上传攻击漏洞的案例。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;例如一个导致上传攻击漏洞的设计案例，先简单描述一下上传攻击的原理，大部分应用系统都有上传图片或文件的功能，攻击者利用这些功能上传一个网页木马，如果存放上传文件的目录有执行脚本的权限，那么攻击者就可以直接得到一个WebShell，进而控制Web服务器。这个漏洞有两个必要条件，一是可以上传木马，二是存放上传文件的目录具备执行脚本的权限。上传是业务的功能需要，即便有做各种安全过滤，限制木马上传，但也有各种绕过过滤的攻击方法，比较难以限制。所以漏洞的关键就在上传的目录是否具备执行脚本的权限上，很多设计者会基于降低成本的考虑，将存储上传文件的位置与Web应用程序放在同一服务器，甚至同一目录下，这样上传的目录也和Web应用程序一样具备执行脚本的权限，从而导致系统产生了一个高危上传漏洞。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;而如果将存储上传文件的位置设计在另一台只具备存储功能的文件服务器或数据库上，与Web应用服务器分开，这样即使木马被上传进来，也因为文件服务器不能执行脚本而没有办法实施攻击。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;误区四：封闭设计&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;架构师设计通常会遵循对扩展开放，对修改封闭的设计原则。对于修改封闭，就是说外部可以调用系统的接口使用系统的功能，但是看不到系统内部实现的代码，也不能对内部实现的代码进行修改。这常常给设计者一种错觉，认为外部使用者不知道系统内部是怎么实现的，不知道存在的安全缺陷，从而放心大胆的在内部留下许多安全隐患，最常见的就是使用私有加密算法。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;设计者常会直观的认为私有算法拥有算法的秘密性，所以安全性要比公开常用加密算法更高些。但其实私有算法的秘密性也是很难保障的首先，中国有句古语——“天下没有不透风的墙”，指不定什么时候你的算法就会通过队友泄露出去，如果你觉得这个说法太虚了，举个实际的例子，开发人员都喜欢用GitHub，指不定哪个猪队友（有可能是自己）就会把你的算法全部上传到GitHub，黑客会放过这么好的机会吗？当然不会，乌云上这些漏洞案例比比皆是。其次，如果算法没有泄露，黑客就不知道你的算法了吗？当然不是，黑客可以通过很多数学推导的方式，把加密的算法推导出来，例如加密算法的公式通常如下所示：&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;y= F（x） 其中F是加密算法，y是密文，x是明文&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;但只要有足够多的 x，y 就可以推导出 F，比如下面一组【x，y】的数据：&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;x=[0 0.9375 1.8750 2.8125 3.7500 4.6875 5.6250 6.5625 7.5000&lt;/p&gt;&lt;p style="white-space: normal;"&gt;8.4375 9.3750 10.3125 11.2500 12.1875 13.1250 14.0625 15.0000];&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;y=[0.000000E+000 8.789063E-003 3.515625E-002 7.910156E-002&lt;/p&gt;&lt;p style="white-space: normal;"&gt;1.406250E-001 2.197266E-001 3.164063E-001 4.306641E-001&lt;/p&gt;&lt;p style="white-space: normal;"&gt;5.625000E-0017.119141E-001 8.789063E-001 1.063477E+000&lt;/p&gt;&lt;p style="white-space: normal;"&gt;1.265625E+000 1.485352E+000 1.722656E+000 1.977539E+000 2.250000E+000];&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;通过matlab的最小二乘法就可以计算出F的公式如下：&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;&lt;img data-ratio="0.28" data-type="jpeg" data-w="300" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/2iak9icUD6zoNRCXvusar3pjQeW54XtiaLCqNrQghMBEzBstKuQwXXAqW8Y6aB6LmpNuUC3M0hSl9iagAkolm2sHrA/640?wx_fmt=jpeg" style="box-sizing: border-box !important; word-wrap: break-word !important; width: auto !important; visibility: visible !important;"/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;加密算法是这样，其它的设计也是这样，黑客总是可以通过各种方法收集到攻击目标的大量信息，要知道攻击的第一步就是情报收集。所以，使用私有加密算法并不能保证加密算法的私密性，对安全性提升也微乎其微。再加上私有算法的数学复杂性难以达到和公开常用算法的一样水平（比如RSA算法利用的就是“将两个大素数相乘十分容易，但是想要对其乘积进行因式分解却极其困难”的数学原理）， 在算法的实现上也不如公开常用算法一样久经考验，因此即便封装了的私有加密算法也是不能使用的，加密应该用公开常用的加密算法，用密钥秘密性而不是算法的秘密性来保障安全。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;所以，通过此类通过封闭设计隐藏软件的实现，从而隐藏一些安全隐患是非常不可取的！官方机构对此类行为也有过明确的意见，反对采用执行或者实现的秘密性来保障产品的安全，美国国家标准与技术研究所（NIST）明文表示：“系统的安全性不应该依赖于执行或其部件的秘密性。软件的设计应该假设是开放的——用户和黑客都知道软件是怎么样实现的，而且即便知道软件的实现也不会危害产品的安全，通过密钥或者鉴权因子就能保障产品数据的安全。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;误区五：黑名单防御&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;通常设计者都会知道需要防御sql注入和XSS攻击等安全问题，但是在选择防御的方案时常常走入一些误区， 他们通常会选择用过滤的方法去防御sql注入和XSS攻击等攻击，这种类似黑名单的防御方式简单方便，修改量小，而且他们认为这样黑客已经攻不进来了。他们低估了黑客们的智慧和毅力，事实证明凡是采用过滤方式防御sql注入和xss的产品，无一不被绕成狗的。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;乌云上这种被绕过的案例比比皆是，目前还没有看到有一个不被绕过的硬件防火墙，云WAF或主机端的防护产品，即便最新宣称“永别了SQL注入”的SQLChop也很快在乌云被爆出存在绕过的漏洞， 笔者也zan同SQLChop的用数据分析检测SQL注入的思路把防护水平提高了一个等级，但即便这样也依然逃脱不了被绕过的命运。这些如此专业的安全厂商设计的产品都难逃被绕过的命运，那我们自己的研发人员自己在服务器上开发和部署的SQL注入和XSS攻击过滤功能，是不是会被绕得更惨呢？答案是肯定的。所以对SQL注入漏洞应该用参数化查询的方式来解决，XSS漏洞应该用对输出进行编码的方式来解决，过滤的方法只能作为临时方案用来辅助做深度防御，而绝不能单独作为防御攻击的安全解决方案。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;误区六：没有将安全列为设计目标之一&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;相比以上误区，大部分设计最大的误区就是没有将安全列为设计的目标之一，这才是产生以上所有设计安全问题的根源。产生这样误区的主要原因有两个，第一，架构师或设计者真心不觉得有人有能力和有耐心去攻击他们的产品。我在与架构师的沟通中，听到最多的一句话就是“不可能！”，不管是最优秀互联网企业的架构师，还是最优秀传统企业的架构师都是这样。架构师或设计者们通常以自己的知识去判断是否能被攻击，但是大部分的架构师和设计者都不具备一定深度的安全知识，所以常常作出错误的判断。黑客是最具极客精神的群体，为挖掘一个漏洞连续调试12小时，持续攻坚一个星期都不是什么稀奇的事情，所以在这样一个群体面前，绝不能以己度人，听从靠谱安全架构师的意见会更安全。第二，存在安全漏洞并不一定立即发生安全事故。安全问题大多数情况下都只是风险，它转化为安全事故一般有一段时间，而且很多情况下即便发生了安全事故，一些安全力量薄弱的公司甚至不能检测和感知到，所以表面的一片“和谐”给了我们的设计者一种错觉，不需要做安全的设计，产品给我的需求都做不完，哪有时间”浪费”人力的做安全设计和开发！&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;所以各种遗留下来的安全隐患积累到一定程度，或者被某个导火索事件引起安全事故的大爆发，导致企业的经营遭受重创！不管是架构师等研发人员，还是安全人员都不应该让企业走到这一步绝境，而应该在产品设计之初就避免出现严重的设计安全问题，为保障产品的安全水平打下基础。&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1414925148642</guid></item><item><title>有没有人曾告诉你，你的 SQL 又报错了？</title><link>http://chuansong.me/n/1405849448553</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;来源：等你归去来&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;www.cnblogs.com/yougewe/p/5143961.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;&lt;a csmlink="KO1ccc" href="http://chuansong.me/n/379161448239" style="line-height: 25.6px;" target="_blank"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如有好文章投稿，请点击 → 这里了解详情&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;引语：线上运行的真实环境总是变幻莫测，明明你在本地测试的时候各种情况都是OK得不要不要的，也许你还在为自己某个地方炫酷的效果以及神奇的设计感到激动不已！但是，到线上以后，他就会偶尔跟抽风一样的跟你say Hello,World！然后会有人跟你说，这里出问题了，那里出问题了！反应往往是这样，“不可能！”，“妈蛋，怎么可能？”，“我就纳闷了，怎么可能出现这种问题呢？”。哈哈，这也许就是大多数攻城狮朋友们最经常发出的感叹吧！&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;那么，今天我们就来聊聊怎样发现你的错误以及解决一些错误的快速定位方法，而不是等到用户来你这里反馈，因为那时候可能已经错太久了！我们要做的，应该是将错误发现在第一时间，解决在萌芽之中，作出事后总结以避免以后再犯类似错误！因为，错不可怕，可怕的是一直犯同样的错误，那样的话，你和新手有何差别？&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;说明几点：&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 本文主要解决的问题是SQL相关的错误；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2. 本文以PHP微视角出发；（妈蛋，谁叫我是从事PHP开发呢？）&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;3. 本文解决的问题为，1 如何第一时间发现问题；2 如何解决问题；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;4. 欢迎质疑、补充；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;正题一、如何发现问题？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;测试什么的那就不用说了，谁TM敢不过测试就直接上线？如果真是那样，我只能说，你牛逼！测试是一道很重要的防线保障，一般来说，经过测试后的功能，上线之后，Bug不会太多，或者说不会太明显！好吧，我就假设测试一个问题都没有发现，那么， 我们就上线吧！其实，上线之后，我们心里是没有底的，尤其是在某些还没有一套完善的部署系统的公司或项目中，上线前和上线后总会出各种稀奇古怪。到底开发和用户是两个层面的人，鬼知道会发生什么呢？我们悬着的一颗心，竟然要完全依赖于用户的操作，用户的反馈？噢，不，那样，太被动了！&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;主动发现问题。  一、上线之后，你也不可能再进行测试了，你现在就是一个普通用户，那么，你自己去操作就是必须的，一个大概走下来，基本功能可以确定了，Ok，接下来，真正交给用户！  二、如果没有后手，就真的完全交给用户，那你还是太Low了，因为，必要的监控措施是一定要有的！这里指的监控是程序级别的，也就是所谓的报错。怎样记录报错信息？怎样知道报错了？都说了嘛，我是从事PHP开发的。PHP中有一个记录错误日志的功能，error_reporting,把这个给打开，指定错误日志位置，级别，就可以记录PHP的错误了，但是一定要关闭错误的页面显示，否则，用户看到此类错误，你就完蛋了！既然本文说的是SQL错误，那不应该是这里，没错。但是我要说的是，当SQL报错的时候，PHP也已经发出报错了，通常是一个警告级别的错误，而且这种错误往往是关联性的发生，如下面的语句依赖于上面的查询，而上面已经报错，那么后续也会跟着报错。PHP知道错误了，但是只是大概，那SQL具体哪里错了？只有他自己知道，这种记录就交给他吧！大概原理就是，在查询出错的地方，记录错误日志，错误日志主要记录信息有：错误信息，文件位置（追根溯源一个个文件查上去直到入口），下面是一段示例记录错误信息的PHP代码供参考：&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;?php&lt;/span?&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;   // 记录sql错误日志&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;    private function logError($msg = "")&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;    {&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;        if (isset($this-&amp;gt;_logfile))&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;        {&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            if (!$msg)&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            {&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                if (!mysql_errno())&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                {&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                    return;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                }&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                $msg = "mysql_errno: " . mysql_errno() . "\nmysql_error: " . mysql_error();&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            }&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            file_put_contents($this-&amp;gt;_logfile, '[' . date('Y-m-d H:i:s') . "] $msg\n", FILE_APPEND);&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            $trace = debug_backtrace();&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            foreach ($trace as $call)&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            {&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                if(empty($call['file']) &amp;amp;&amp;amp; empty($call['line']))&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                {    &lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                    continue;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                }&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;                file_put_contents($this-&amp;gt;_logfile, "{$call['file']} on line {$call['line']}\n", FILE_APPEND);&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            }&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;            file_put_contents($this-&amp;gt;_logfile, "\n", FILE_APPEND);&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(178, 178, 178); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;　&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这样，你就有了一个可供参考的东西了。但是，还有一个关键的问题，就是你怎么知道报错了？那就是报警提示了，你可以使用微信提供的测试号通知自己、你可以使用公司的短信平台给自己发短信、你可以发邮件给自己，然后设置邮件短信提醒！收到信息，赶紧解决去吧，更改的时候，你只需去查看这个文件指示的地方，你就大概知道是什么错了，都知道什么错了，我想，要想解决问题，应该只是个时间问题了，而且是个短时间问题！&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;正题二、如何解决问题？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;其实前面我已经说了，既然已经找到问题根源了，要解决问题只是个短时间问题，但是，我还是将给出一些解决方案作参考，毕竟，大家都这么忙，哪有时间破解你那烂代码！如下是一经常会出现的错误：&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 报错：[2002] 由于目标计算机积极拒绝，无法连接。解析：数据库连接信息错误，你可能把测试环境连接部署到线上去了，这问题大发了，赶紧恢复吧？ 附注：如果没有报错是因为你线上机器可以连接测试库，那问题也大发了；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2. 报错：[1146] Table 'bbbq' doesn't exist。解析：表不存在，赶紧查查，是不是本次新加的表没有被添加到线上吧，或者表名写错了？ 附注：一般过了测试的不太可能是表名写错了；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;3. 报错：[1054] Unknown column 'column_x' in 'field list'。解析：指定的列不存在，要么库中没有，要么写错了，赶紧查！ 附注： 同上；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;4. 报错：[1366] Incorrect string value: '\xA9\x96' for column 'x_name' at row 1。解析：字符集问题，如一个gbk的字被字段设置为gb2312接收则会出现此问题，赶紧改回来吧！附注：请尽量使用utf-8编码，代码与入库都方便；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;5. 报错：[1364] Field 'pid' doesn't have a default value。解析：指定字段没有默认值，请确认应该获取到的值是否未获取从而为null，为某些不必要字段指定数据库默认值。   附注： 如有索引关系，请一定设置not null 选项，否则索引将可能失效；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;6. 报错：[1366] Incorrect integer value: '' for column 'townId' at row 1。解析：给定的值不符合字段类型要求，在入库之前先确认该字段需要什么类型，可做相应强制转换，再入库。  附注：某些版本的mysql可以自行强制转换类型处理此问题，但是结果可能已经超出你的预期；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt; 7. LOAD DATA INFILE ，从文件直接导入数据到数据库&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;　　7.1. 报错：[2] File 'D:/wamp/www/a/area.csv' not found (Errcode: 2)。解析：找不到指定的csv文件，确认目录位置是否给定正确，如果正确，确认该文件是否为动态生成而目前尚未生成。  附注：小问题；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;　　7.2. 报错：[13] Can't get stat of '/opt/app/mysql5/var/D:/wamp/www/a/area.csv' (Errcode: 2)或者提示没有权限操作数据库。解析：数据库与web不在同一台服务器，需要指定关键字LOCAL，从而将web与数据库分开。  附注：LOCAL参数是在必要时候使用，因为不指定LOCAL的操作将看起来更安全；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;　　7.3. 报错：[1366] Incorrect integer value: '北京' for column 'provinceId' at row 1。解析：这里使用不指定字段的方式插入数据库，因此，如果csv文件的值顺序与数据库字段顺序不对应的话，将会有很多类似的报错，而这则是致命的，因为全部都错了，即使偶有个别正确入库的，那也是错的你也不会想要的结果，请以正确的顺序写入csv文件或者指定字段；  附注：这里的1366 与前面的1366 意义是不一样的；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;　　7.4. 示例LOAD：  LOAD DATA LOCAL INFILE 'D:/wamp/www/a/area.csv' REPLACE INTO TABLE `address` CHARACTER SET utf8  FIELDS TERMINATED BY ',' (`provinceId`, `provinceName`, `cityId`, `cityName`, `areaId`, `areaName`, `townId`, `townName`);  附注：要求每个字段都是有值的，即几个字段就要几个','；&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;8. [1064] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'LIMIT 0, 1000' at line 1。解析：好吧，这是个最通用的错误解释，就是说你的语法写错了。比如 where a_id= order by id desc;这里你原本是想获取一个ID然后去查询，但是后面的ID得到空值，所以整个语法就错了。其实，如果是直接接收参数去查询，这本身可能报错，也是一个注入点，请一定要处理传入的值，一般要求'='号后给''号，整型参数用intval()格式化等等安全意识！&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;9. 讲解：REPLACE与INSERT 功能其实是差不多的（唯一键是必须的），但是REPLACE会在数据库中存在此记录时先删除再插入，如有自增ID，将会被迅速变大，从而不必手动执行删除操作，而INSERT重复数据时则将报错（可配合UPDATE使用）。适当使用两个功能，解决问题！&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;...&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在真实开发中，其实遇到很多有意思的问题，但一时间也难以想起来，想起来再补充，你也可以下方回复你遇到的问题及解决方案，大家一起参考！&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1405849448553</guid></item><item><title>可扩展 Web 架构与分布式系统</title><link>http://chuansong.me/n/1401035248338</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;翻译：oschina&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;www.oschina.net/translate/scalable-web-architecture-and-distributed-systems&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;&lt;a csmlink="a4YJcc" href="http://chuansong.me/n/379161448239" style="font-size: 14px; white-space: normal; line-height: 25.6px;" target="_blank"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如有好文章投稿，请点击 → 这里了解详情&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;开放源代码已经成为一些大型网站的基本原则。而在这些网站成长的过程中，一些优秀的实践经验和规则也出现在他们的结构中。本文旨在介绍一些在大型网站结构设计的过程中需要注意的关键问题以及实现目标的基础工作。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;本文侧重于介绍网络系统，尽管一些准则在其他分布式系统中也是适用的。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;1.1. web分布式系统的设计原则&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;搭建和运营一个可伸缩的web站点或者应用程序意味着什么？在原始层面上这仅仅是用户通过互联网连接到远程资源-使系统变得可伸缩的部分是将资源、或者访问的资源，分布于多个服务器上。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;像生活中大多数事情一样，当构建一个web服务时花时间提前做好计划从长远看来还是很有帮助的；了解一些注意事项和大网站背后的权衡原则可以在创建小型网站时做出更明智的决定。以下是一些影响大规模web系统设计的关键原则:&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.575px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;可用性:对于很多公司来说一个网站的正常运行时间是非常关键的声誉和功能，像一些大型的在线零售系统，即使一分钟的宕机都有可能导致数千或者数百万美元的损失，因此设计系统的时时可用性和弹性的错误处理机制既是一个基本业务也是一个技术要求。 高可用分布式系统需要仔细考虑关键组件的冗余，分系统失败后能快速修复，并且当问题出现时优雅型降级。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;性能:网站的性能正在变成大多数站点考虑的一个重要的方面，网站的速度影响正常使用和用户的满意度，同样影响搜索的排名，这也是影响网站收益和保留用户的一个因素。因此，创建一个快速响应和低延迟的系统是非常关键的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可靠性:一个系统需要具备可靠性，比如同一个数据的请求始终返回同样的数据响应 。如果数据改变或者被更新，那么同样的数据将返回一个新的数据。用户需要知道一些东西被写入系统或者被存储到系统后，系统会保持不变并且可以在以后恢复到合适的位置。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可伸缩性:当谈到任何大型的分布式系统时，规模大小只是考虑的其中一个方面，同样重要的是增强处理较大规模的负载性能所做的努力，这通常称为系统的可伸缩性。可伸缩性可以代表系统很多不同的参数：额外流量的处理量，添加存储容量的便意性，甚至事务的处理量。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可管理性: 设计一个系统可以方便操作是另一个重要的考虑方面，系统的可管理性等同于操作的可伸缩性：维护和升级。可管理性需要考虑的事情是当问题发生时方便诊断和了解问题，易于升级和修改，以及系统能简单性的操作（即，例行的操作有没有失败和异常？）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;成本: 成本是一个重要的因素。很明显这包含硬件和软件成本，但同样重要需要考虑的其他方面是部署和维护系统的成本。开发者构建系统花费的大量时间，运维部署时间，甚至培训时间都需要考虑，成本是总体成本。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;以上每个原则都为设计分布式web架构提供了基础决策。然而，他们也能彼此互斥，例如要实现某个目标就要以另外的作为代价。一个基本的例子：选择通过单纯增加更多的服务器（可扩展性）来增加地址容量，是以可管理性（你必须操作增加的服务器）和成本（服务器的价格）为代价的。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当设计任何的web应用程序时，考虑这些关键原则都是很重要的，即使得承认一个设计可能要牺牲它们之中的一个或者多个。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;1.2. 基础&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当设计一个系统架构时，有一些东西是要考虑的：正确的部分是什么，怎样让这些部分很好地融合在一起，以及好的折中方法是什么。通常在系统架构需要之前就为它的可扩展性投资不是一个聪明的商业抉择；然而，在设计上的深谋远虑能在未来节省大量的时间和资源。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这部分关注点是几乎所有大型web应用程序中心的一些核心因素：服务、冗余、划分和错误处理。每一个因素都包含了选择和妥协，特别是上部分提到的设计原则。为了详细的解析这些，最好是用一个例子来开始。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;strong&gt;实例：图片托管应用&lt;/strong&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;有时候你可能会在线上传一张图片。对于那些托管并负责分发大量图片的网站来说，要搭建一个既节省成本又高效还能具备较低的延迟性（你能快速的获图片）的网站架构确实是一种挑战。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;我们来假设一个系统，用户可以上传他们的图片到中心服务器，这些图片又能够让一些web链接或者API获取这些图片，就如同现在的Flickr或者Picasa。为了简化的需要，我们假设应用程序分为两个主要的部分：一个是上传图片到服务器的能力（通常说的写操作），另一个是查询一个图片的能力。然而，我们当然想上传功能很高效，但是我们更关心的是能够快速分发能力，也就是说当某个人请求一个图片的时候（比如，一个web页面或者其它应用程序请求图片）能够快速的满足。这种分发能力很像web服务器或者CDN连接服务器（CDN服务器一般用来在多个位置存储内容一边这些内容能够从地理位置或者物理上更靠近访问它的用户，已达到高效访问的目的）气的作用。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;系统其他重要方面：&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.575px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;对图片存储的数量没有限制，所以存储需要可扩展，在图像数量方面需要考虑。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;图片的下载和请求不需要低延迟。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果用户上传一个图片，图片应该都在那里（图片数据的可靠性）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;系统应该容易管理（可管理性）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;由于图片主机不会有高利润的空间，所以系统需要具有成本效益。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;Figure 1.1是一个简化的功能图。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36576" data-ratio="0.6323529411764706" data-type="jpeg" data-w="544" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxOmuXG6FLrXw1eGaTiabQTglFNJuTMia8diblEn0Y9qIibYmdS39W0qxhibw/0?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.1: 图片主机应用的简化架构图&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在这个图片主机的例子里，可遇见系统必需快速，它的数据存储要可靠以及这些所有的属性都应该高度的可扩展。建立这个应用程序的一个小版本不是很重要而且很容易部署在单一的服务器上；然而，这不是这节里的感兴趣部分。假设下我们想建一个会增长到和Flickr痛让规模的东西。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;服务&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当要考虑设计一个可扩展的系统时，为功能解耦和考虑下系统每部分的服务都定义一个清晰的接口都是很有帮助的。在实际中，在这种方式下的系统设计被成为面向服务架构（SOA）。对于这类型的系统，每个服务有自己独立的方法上下文，以及使用抽象接口与上下文的外部任何东西进行交互，典型的是别的服务的公共API。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;把一个系统解构为一些列互补的服务，能够为这些部分从别的部分的操作解耦。这样的抽象帮助在这些服务服、它的基础环境和服务的消费者之间建立清晰的关系。建立这种清晰的轮廓能帮助隔离问题，但也允许各模块相对其它部分独立扩展。这类面向服务设计系统是非常类似面向对象设计编程的。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在我们的例子中，上传和检索图像的请求都是由同一个服务器处理的；然而，因为系统需要具有伸缩性，有理由要将这两个功能分解为各由自己的服务进行处理。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;快速转发（Fast-forward）假定服务处于大量使用中；在这种情况下就很容易看到，读取图像所花的时间中有多少是由于受到了写入操作的影响（因为这两个功能将竞争使用它们共享的资源）。取决于所采用的体系结构，这种影响可能是巨大的。即使上传和下载的速度完全相同（在绝大多数IP网络中都不是这样的情况，大部分下载速度和上传速度之比都至少设计为3:1），文件读取操作一般都是从高速缓存中进行的，而写操作却不得不进行最终的磁盘操作（而且可能要写几次才能达成最后的一致状态）。即使所有内容都已在内存中，或者从磁盘（比如SSD磁盘）中进行读取，数据库写入操作几乎往往都要慢于读取操作。（Pole Position是一个开源的DB基准测试工具）&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这种设计另一个潜在的问题出在web服务器上，像Apache或者lighttpd通常都有一个能够维持的并发连接数上限（默认情况下在500左右，不过可以更高）和最高流量数，它们会很快被写操作消耗掉。因为读操作可以异步进行，或者采用其它一些像gizp压缩的性能优化或者块传输编码方式，web服务器可以通过在多个请求服务之间切换来满足比最大连接数更多的请求（一台Apache的最大连接数设置为500，它每秒钟提供近千次读请求服务也是正常的）。写操作则不同，它需要在上传过程中保持连接，所以大多数家庭网络环境下，上传一个1MB的文件可能需要超过1秒的时间，所以web服务器只能处理500个这样并发写操作请求。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36577" data-ratio="0.6312849162011173" data-type="png" data-w="537" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcx4zV5uQd8qdiaSE3vNF9hqjRznrl9wVx3cibxSW3M1so5HmdicFsicZplAQ/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;对于这种瓶颈，一个好的规划案例是将读取和写入图片分离为两个独立的服务，如图Figure 1.2.所示。这让我们可以单独的扩展其中任意一个（因为有可能我们读操作比写操作要频繁很多），同时也有助于我们理清每个节点在做什么。最后，这也避免了未来的忧虑，这使得故障诊断和查找问题更简单，像慢读问题。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这种方法的优点是我们能够单独的解决各个模块的问题-我们不用担心写入和检索新图片在同一个上下文环境中。这两种服务仍然使用全球资料库的图片，但是它们可通过适当的服务接口自由优化它们自己的性能（比如，请求队列，或者缓存热点图片-在这之上的优化）。从维护和成本角度来看，每个服务按需进行独立规模的规划，这点非常有用，试想如果它们都组合混杂在一起，其中一个无意间影响到了性能，另外的也会受影响。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当然，上面的例子在你使用两个不同端点时可以很好的工作（事实上，这非常类似于云存储和内容分发网络）。虽然有很多方式来解决这样的瓶颈，但每个都有各自的取舍。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;比如，Flickr通过分配用户访问不同的分片解决这类读/写问题，每一个分片只可以处理一定数量的用户，随着用户的增加更多的分片被添加到集群上。在第一个例子中，可以根据实际用途更简单的规划硬件资源（在整个系统中读和写的比例），然而，Flickr规划是根据用户基数（假定每个用户拥有相同的资源空间）。在前者中一个故障或者问题会导致整个系统功能的下降（比如，全部不能写入文件了），然而Flickr一个分片的故障只会影响到相关的那部分用户。在第一个例子中，更容易操作整个数据集-比如，在所有的图像元数据上更新写入服务用来包含新的元数据或者检索-然而在Flickr架构上每一个分片都需要执行更新或者检索（或者需要创建个索引服务来核对元数据-找出哪一个才是实际结果）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;冗余(Redundancy)&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;为了优雅的处理故障，web架构必须冗余它的服务和数据。例如，单服务器只拥有单文件的话，文件丢失就意味这永远丢失了。丢失数据是个很糟糕的事情，常见的方法是创建多个或者冗余备份。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;同样的原则也适用于服务。如果应用有一个核心功能，确保它同时运行多个备份或者版本可以安全的应对单点故障。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在系统中创建冗余可以消除单点故障，可以在紧急时刻提供备用功能。例如，如果在一个产品中同时运行服务的两个实例，当其中一个发生故障或者降级(degrade)，系统可以转移(failover)到好的那个备份上。故障转移(Failover)可以自动执行或者人工手动干预。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;服务冗余的另一个关键部分是创建无共享(shared-nothing)架构。采用这种架构，每个接点都可以独立的运作，没有中心”大脑”管理状态或者协调活动。这可以大大提高可伸缩性(scalability)因为新的接点可以随时加入而不需要特殊的条件或者知识。而且更重要的是，系统没有单点故障。所以可以更好的应对故障。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;例如，在我们的图片服务应用，所有的图片应该都冗余备份在另外的一个硬件上（理想的情况下，在不同的地理位置，以防数据中心发生大灾难，例如地震，火灾），而且访问图片的服务（见Figure 1.3.）-包括所有潜在的服务请求-也应该冗余。（负载均衡器是个很好的方法冗余服务，但是下面的方法不仅仅是负载均衡）&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36578" data-ratio="0.49801849405548215" data-type="png" data-w="757" height="264" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxdWOqFN6Tgr5RC5w7IqiaLhjw0T5tpRJ5l5yQA5GwFibljjMVeac2sc1Q/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="530"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.3: 使用冗余的图片存储&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;分区&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;我们可能遇见单一服务器无法存放的庞大数据集。也可能遇到一个需要过多计算资源的操作，导致性能下降，急需增添容量。这些情况下，你都有两种选择：横向或纵向扩展。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;纵向扩展意味着对单一服务器增添更多资源。对于一个非常庞大的数据集，这可能意味着为单一服务器增加更多（或更大）的硬盘以存放整个数据集。而对于计算操作，这可能意味着将操作移到一个拥有更快的 CPU 或 更大的内存的服务器中。无论哪种情况，纵向扩展都是为了使单个服务器能够自己处理更多的方法。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;另一方面，对于横向扩展，则是增加更多的节点。例如庞大的数据集，你可以用第二个服务器来存放部分数据；而对于计算操作，你可以切割计算，或是通过额外的节点加载。想要充分的利用横向扩展的优势，你应该以内在的系统构架设计原则来实现，否则的话，实现的方法将会变成繁琐的修改和切分操作。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;说道横向分区，更常见的技术是将你的服务分区，或分片。分区可以通过对每个功能逻辑集的分割分配而来;可以通过地域划分，也可以通过类似付费 vs. 未付费用户来区分。这种方式的优势是可以通过增添容量来运行服务或实现数据存储。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;以我们的图像服务器为例，将曾经储存在单一的文件服务器的图片重新保存到多个文件服务器中是可以实现的，每个文件服务器都有自己惟一的图片集。（见图表1.4。）这种构架允许系统将图片保存到某个文件服务器中，在服务器都即将存满时，像增加硬盘一样增加额外的服务器。这种设计需要一种能够将文件名和存放服务器绑定的命名规则。一个图像的名称可能是映射全部服务器的完整散列方案的形式。或者可选的，每个图像都被分配给一个递增的 ID，当用户请求图像时，图像检索服务只需要保存映射到每个服务器的 ID 范围（类似索引）就可以了。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36579" data-ratio="0.5186170212765957" data-type="png" data-w="752" height="273" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxIalhL8lS9WQZybL8s9xsK2wQ4vhjia9MKnN3gQufeX9CaSrUP61lUuw/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="526"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;图 1.4: 使用冗余和分区实现的图片存储服务&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当然，为多个服务器分配数据或功能是充满挑战的。一个关键的问题就是数据局部性；对于分布式系统，计算或操作的数据越相近，系统的性能越佳。因此，一个潜在的问题就是数据的存放遍布多个服务器，当需要一个数据时，它们并不在一起，迫使服务器不得不为从网络中获取数据而付出昂贵的性能代价。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;另一个潜在的问题是不一致性。当多个不同的服务读取和写入同一共享资源时，有可能会遭遇竞争状态——某些数据应当被更新，但读取操作恰好发生在更新之前——这种情形下，数据就是不一致的。例如图像托管方案中可能出现的竞争状态，一个客户端发送请求，将其某标题为“狗”的图像改名为”小家伙“。而同时另一个客户端发送读取此图像的请求。第二个客户端中显示的标题是“狗”还是“小家伙”是不能明确的。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当然，对于分区还有一些障碍存在，但分区允许将问题——数据、负载、使用模式等——切割成可以管理的数据块。这将极大的提高可扩展性和可管理性，但并非没有风险。有很多可以降低风险，处理故障的方法；不过篇幅有限，不再赘述。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;1.3. 构建高效和可伸缩的数据访问模块&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在设计分布式系统时一些核心问题已经考虑到，现在让我们来讨论下比较困难的一部分：可伸缩的数据访问。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;对于大多数简单的web应用程序，比如LAMP系统，类似于图 Figure 1.5.&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36580" data-ratio="0.2979942693409742" data-type="png" data-w="349" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxzCujj5N8FGqdawB1r7DhFjSCuMgdUUfsg7kWibCiajp8cFVHtSBX8icxg/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.5: 简单web应用程序&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;随着它们的成长，主要发生了两方面的变化：应用服务器和数据库的扩展。在一个高度可伸缩的应用程序中，应用服务器通常最小化并且一般是shared-nothing架构（译注：shared nothing architecture是一 种分布式计算架构，这种架构中不存在集中存储的状态，整个系统中没有资源竞争，这种架构具有非常强的扩张性，在web应用中广泛使用）方式的体现，这使得系统的应用服务器层水平可伸缩。由于这种设计，数据库服务器可以支持更多的负载和服务；在这一层真正的扩展和性能改变开始发挥作用了。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;剩下的章节主要集中于通过一些更常用的策略和方法提供快速的数据访问来使这些类型服务变得更加迅捷。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36581" data-ratio="0.35424354243542433" data-type="png" data-w="271" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxXIkYUuN1xoYI0ib6A8acNz8tMY1FbGXSKOq4mDibdoPqn4Zj2rIWgX4A/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.6: Oversimplified web application&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;大多数系统简化为如图 Figure 1.6所示，这是一个良好的开始。如果你有大量的数据，你想快捷的访问，就像一堆糖果摆放在你办公室抽屉的最上方。虽然过于简化，前面的声明暗示了两个困难的问题：存储的可伸缩性和数据的快速访问。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;为了这一节内容，我们假设你有很大的数据存储空间（TB），并且你想让用户随机访问一小部分数据（查看Figure 1.7）。这类似于在图像应用的例子里在文件服务器定位一个图片文件。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36582" data-ratio="0.3396501457725947" data-type="png" data-w="686" height="186" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcx2Wiab3sOnhJaGlGoy2Pu5qBiaNubusiakGcTAPDmFicNjy3dSBcPLX4a6A/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="549"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.7: Accessing specific data&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这非常具有挑战性，因为它需要把数TB的数据加载到内存中；并且直接转化为磁盘的IO。要知道从磁盘读取比从内存读取慢很多倍-内存的访问速度如同敏捷的查克·诺里斯（译注：空手道冠军），而磁盘的访问速度就像笨重的卡车一样。这个速度差异在大数据集上会增加更多；在实数顺序读取上内存访问速度至少是磁盘的6倍，随机读取速度比磁盘快100,000倍。另外，即使使用唯一的ID，解决获取少量数据存放位置的问题也是个艰巨的任务。这就如同不用眼睛看在你的糖果存放点取出最后一块Jolly Rancher口味的糖果一样。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;谢天谢地，有很多方式你可以让这样的操作更简单些；其中四个比较重要的是缓存，代理，索引和负载均衡。本章的剩余部分将讨论下如何使用每一个概念来使数据访问加快。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;缓存&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;缓存利用局部访问原则：最近请求的数据可能会再次被请求。它们几乎被用于计算机的每一层：硬件，操作系统，web浏览器，web应用程序等等。缓存就像短期存储的内存：它有空间的限制，但是通常访问速度比源数据源快并且包含了大多数最近访问的条目。缓存可以在架构的各个层级存在，但是常常在前端比较常见，在这里通常需要在没有下游层级的负担下快速返回数据。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在我们的API例子中如何使用缓存来快速访问数据？在这种情况下，有两个地方你可以插入缓存。一个操作是在你的请求层节点添加一个缓存，如图 Figure 1.8.&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36583" data-ratio="0.6676691729323309" data-type="png" data-w="665" height="355" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxTUvhd829dfONAcIJkvunCeCCzPGz0B0SdOsLP1r3brDEjZxNsacoQA/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="532"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.8: Inserting a cache on your request layer node&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;直接在一个请求层节点配置一个缓存可以在本地存储相应数据。每次发送一个请求到服务，如果数据存在节点会快速的返回本地缓存的数据。如果数据不在缓存中，请求节点将在磁盘查找数据。请求层节点缓存可以存放在内存和节点本地磁盘中（比网络存储快些）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36584" data-ratio="1.0114155251141552" data-type="png" data-w="438" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxxicjibBEYXHaElphSOQibBzibWDDD5JxD0zSphDMm6b4ax6wsXenFLgDEQ/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.9: Multiple caches&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当你扩展这些节点后会发生什么呢？如图Figure 1.9所示，如果请求层扩展为多个节点，每个主机仍然可能有自己的缓存。然而，如果你的负载均衡器随机分配请求到节点，同样的请求将指向不同的节点，从而增加了缓存的命中缺失率。有两种选择可以解决这个问题：全局缓存和分布式缓存。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;全局缓存&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;全局缓存顾名思义：所有的节点使用同一个缓存空间，这涉及到添加一个服务器，或者某种文件存储系统，速度比访问源存储和通过所有节点访问要快些。每个请求节点以同样的方式查询本地的一个缓存，这种缓存方案可能有点复杂，因为在客户端和请求数量增加时它很容易被压倒，但是在有些架构里它还是很有用的（尤其是那些专门的硬件来使全局缓存变得非常快，或者是固定数据集需要被缓存的）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在描述图中有两种常见形式的缓存。在图Figure 1.10中，当一个缓存响应没有在缓存中找到时，缓存自身从底层存储中查找出数据。在 Figure 1.11中，当在缓存中招不到数据时，请求节点会向底层去检索数据。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36585" data-ratio="0.5972222222222222" data-type="png" data-w="792" height="331" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxO1fvVNnN4gQl2ibicLT2uA7Fw0tibbrZVdrOqibBDUVTNd0zYxtPdPOQ2w/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="554"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.10: Global cache where cache is responsible for retrieval&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36586" data-ratio="0.766612641815235" data-type="png" data-w="617" height="426" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcx7Z7icpQrpA7p1RvDuBVzVpsiaTTp42xmvsCPRjt11CHtlt8mgvta3n7w/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="555"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.11: Global cache where request nodes are responsible for retrieval&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;大多数使用全局缓存的应用程序趋向于第一类，这类缓存可以管理数据的读取，防止客户端大量的请求同样的数据。然而，一些情况下，第二类实现方式似乎更有意义。比如，如果一个缓存被用于非常大的文件，一个低命中比的缓存将会导致缓冲区来填满未命中的缓存；在这种情况下，将使缓存中有一个大比例的总数据集。另一个例子是架构设计中文件在缓存中存储是静态的并且不会被排除。（这可能是因为应用程序要求周围数据的延迟-某些片段的数据可能需要在大数据集中非常快-在有些地方应用程序逻辑理清排除策略或者热点 比缓存方案好使些）&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;分布式缓存&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在分布式缓存（图1.12）中，每个节点都会缓存一部分数据。如果把冰箱看作食杂店的缓存的话，那么分布式缓存就象是把你的食物分别放到多个地方 —— 你的冰箱、柜橱以及便当盒 ——放到这些便于随时取用的地方就无需一趟趟跑去食杂店了。缓存一般使用一个具有一致性的哈希函数进行分割，如此便可在某请求节点寻找某数据时，能够迅速知道要到分布式缓存中的哪个地方去找它，以确定改数据是否从缓存中可得。在这种情况下，每个节点都有一个小型缓存，在直接到原数据所作处找数据之前就可以向别的节点发出寻找数据的请求。由此可得，分布式缓存的一个优势就是，仅仅通过向请求池中添加新的节点便可以拥有更多的缓存空间。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;分布式缓存的一个缺点是修复缺失的节点。一些分布式缓存系统通过在不同节点做多个备份绕过了这个问题；然而，你可以想象这个逻辑迅速变复杂了，尤其是当你在请求层添加或者删除节点时。即便是一个节点消失和部分缓存数据丢失了，我们还可以在源数据存储地址获取-因此这不一定是灾难性的!&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36587" data-ratio="1.0264084507042253" data-type="png" data-w="568" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxfpPQ4kSdOCKeNupm6Y2yrG2dU5icQcV25YngYOd2AlGGIxUtyZ8Kcow/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.12: Distributed cache&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;缓存的伟大之处在于它们使我们的访问速度更快了（当然前提是正确使用），你选择的方法要在更多请求下更快才行。然而，所有这些缓存的代价是必须有额外的存储空间，通常在放在昂贵的内存中；从来没有嗟来之食。缓存让事情处理起来更快，而且在高负载情况下提供系统功能，否则将会使服务器出现降级。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;有一个很流行的开源缓存项目Memcached（它可以当做一个本地缓存，也可以用作分布式缓存）；当然，还有一些其他操作的支持（包括语言包和框架的一些特有设置）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;Memcached 被用作很多大型的web站点，尽管他很强大，但也只是简单的内存key-value存储方式，它优化了任意数据存储和快速检索（o(1)）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;Facebook使用了多种不同的缓存来提高他们站点的性能。在语言层面上（使用PHP内置函数调用）他们使用$GLOBALSand APC缓存，这有助于使中间函数调用和结果返回更快（大多数语言都有这样的类库用来提高web页面的性能）。Facebook使用的全局缓存分布在多个服务器上，这样一个访问缓存的函数调用可以使用很多并行的请求在不同的Memcached 服务器上获取存储的数据。这使得他们在为用户分配数据空间时有了更高的性能和吞吐量，同时有一个中央服务器做更新（这非常重要，因为当你运行上千服务器时，缓存失效和一致性将是一个大挑战）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;现在让我们讨论下当数据不在缓存中时该如何处理···&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;代理&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;简单来说，代理服务器是一种处于客户端和服务器中间的硬件或软件，它从客户端接收请求，并将它们转交给服务器。代理一般用于过滤请求、记录日志或对请求进行转换(增加/删除头部、加密/解密、压缩，等等)。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36588" data-ratio="0.23173803526448364" data-type="png" data-w="397" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxvrblKBicClA9MjNCUE3RJ3EggyyibyI5jibBhQGAo1PWRbESx3xbL4QEA/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;图1.13: 代理服务器&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;当需要协调来自多个服务器的请求时，代理服务器也十分有用，它允许我们从整个系统的角度出发、对请求流量执行优化。压缩转发(collapsed forwarding)是利用代理加快访问的其中一种方法，将多个相同或相似的请求压缩在同一个请求中，然后将单个结果发送给各个客户端。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;假设，有几个节点都希望请求同一份数据，而且它并不在缓存中。在这些请求经过代理时，代理可以通过压缩转发技术将它们合并成为一个请求，这样一来，数据只需要从磁盘上读取一次即可(见图1.14)。这种技术也有一些缺点，由于每个请求都会有一些时延，有些请求会由于等待与其它请求合并而有所延迟。不管怎么样，这种技术在高负载环境中是可以帮助提升性能的，特别是在同一份数据被反复访问的情况下。压缩转发有点类似缓存技术，只不过它并不对数据进行存储，而是充当客户端的代理人，对它们的请求进行某种程度的优化。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在一个LAN代理服务器中，客户端不需要通过自己的IP连接到Internet，而代理会将请求相同内容的请求合并起来。这里比较容易搞混，因为许多代理同时也充当缓存(这里也确实是一个很适合放缓存的地方)，但缓存却不一定能当代理。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36589" data-ratio="0.3573446327683616" data-type="png" data-w="708" height="177" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcx5NzicHLTfjQswxnRHL6AU1cGgoueVpDWeR09uSZB6OCl8uP1Thic0ydg/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="496"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;图1.14: 通过代理来合并请求&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;另一个使用代理的方式不只是合并相同数据的请求，同时也可以用来合并靠近存储源（一般是磁盘）的数据请求。采用这种策略可以让请求最大化使用本地数据，这样可以减少请求的数据延迟。比如，一群节点请求B部分信息：partB1,partB2等，我们可以设置代理来识别各个请求的空间区域，然后把它们合并为一个请求并返回一个bigB，大大减少了读取的数据来源（查看图Figure 1.15）。当你随机访问上TB数据时这个请求时间上的差异就非常明显了！代理在高负载情况下，或者限制使用缓存时特别有用，因为它基本上可以批量的把多个请求合并为一个。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36590" data-ratio="0.3194444444444444" data-type="png" data-w="792" height="177" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxcC5x952ea0nOhibyr2qTYtON8GDfwib75vxlRwBWP2pRQYuDgLp2zQ6g/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="554"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.15: Using a proxy to collapse requests for data that is spatially close together&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;值得注意的是，代理和缓存可以放到一起使用，但通常最好把缓存放到代理的前面，放到前面的原因和在参加者众多的马拉松比赛中最好让跑得较快的选手在队首起跑一样。因为缓存从内存中提取数据，速度飞快，它并不介意存在对同一结果的多个请求。但是如果缓存位于代理服务器的另一边，那么在每个请求到达cache之前都会增加一段额外的时延，这就会影响性能。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;如果你正想在系统中添加代理，那你可以考虑的选项有很多；Squid和Varnish都经过了实践检验，广泛用于很多实际的web站点中。这些代理解决方案针对大部分client－server通信提供了大量的优化措施。将二者之中的某一个安装为web服务器层的反向代理（reverse proxy，下面负载均衡器一节中解释）可以大大提高web服务器的性能，减少处理来自客户端的请求所需的工作量。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;索引&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;使用索引快速访问数据是个优化数据访问性能公认的策略；可能我们大多数人都是从数据库了解到的索引。索引用增长的存储空间占用和更慢的写（因为你必须写和更新索引）来换取更快的读取。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;你可以把这个概念应用到大数据集中就像应用在传统的关系数据存储。索引要关注的技巧是你必须仔细考虑用户会怎样访问你的数据。如果数据集有很多TBs，但是每个数据包(payload)很小(可能只有1KB)，这时就必须用索引来优化数据访问。在这么大的数据集找到小的数据包是个很有挑战性的工作因为你不可能在合理的时间內遍历所有数据。甚至，更有可能的是这么大的数据集分布在几个（甚至很多个）物理设备上-这意味着你要用些方法找到期望数据的正确物理位置。索引是最适合的方法做这种事情。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36591" data-ratio="0.5934065934065934" data-type="jpeg" data-w="728" height="302" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxFqq8puXcrIE4qZFEMD9iaIiaOtCNXejo2fvdGI0bEzdOoHNFdz2F4MmQ/0?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="510"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.16: Indexes&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;索引可以作为内容的一个表格-表格的每一项指明你的数据存储的位置。例如，如果你正在查找B的第二部分数据-你如何知道去哪里找？如果你有个根据数据类型(数据A，B，C)排序的索引，索引会告诉你数据B的起点位置。然后你就可以跳转(seek)到那个位置，读取你想要的数据B的第二部分。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这些索引常常存储在内存中，或者存储在对于客户端请求来说非常快速的本地位置(somewhere very local)。Berkeley DBs (BDBs)和树状数据结构常常按顺序存储数据，非常理想用来存储索引。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;常常索引有很多层，当作数据地图，把你从一个地方指向另外一个地方，一直到你的得到你想要的那块数据。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36593" data-ratio="0.43902439024390244" data-type="jpeg" data-w="984" height="211" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxGODJic6mnr6CE0zicqul22hr1DaAKbL2Mpmn6VuicrpZvrtN8uYbFRubQ/0?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="482"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.17: Many layers of indexes&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;索引也可以用来创建同样数据的多个不同视图(views)。对于大数据集来说，这是个很棒的方法来定义不同的过滤器(filter)和类别(sort)，而不用创建多个额外的数据拷贝。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;例如，想象一下，图片存储系统开始实际上存储的是书的每一页的图像，而且服务允许客户查询这些图片中的文字，搜索每个主题的所有书的内容，就像搜索引擎允许你搜索HTML内容一样。在这种情况下，所有的书的图片占用了很多很多服务器存储，查找其中的一页给用户显示有点难度。首先，用来查询任意词或者词数组(tuples)的倒排索引(inverse indexes)需要很容易的访问到；然后，导航到那本书的确切页面和位置并获取准确的图片作为返回结果，也有点挑战性。所以，这种境况下，倒排索引应该映射到每个位置(例如书B)，然后B要包含一个索引每个部分所有单词，位置和出现次数的索引。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;可以表示上图Index1的一个倒排索引，可能看起来像下面的样子-每个词或者词数组对应一个包含他们的书。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;table width="599"&gt;&lt;tbody style="border-width: 0px; border-style: initial; border-color: initial;"&gt;&lt;tr style="border-width: 0px 0px 1px; border-bottom-style: solid; border-bottom-color: rgb(232, 232, 232);"&gt;&lt;th style="padding-right: 5px; padding-left: 5px; border-width: 0px; border-style: initial; border-color: initial; font-weight: normal; vertical-align: middle; text-align: center;"&gt;Word(s)&lt;/th&gt;&lt;th style="padding-right: 5px; padding-left: 5px; border-width: 0px; border-style: initial; border-color: initial; font-weight: normal; vertical-align: middle; text-align: center;"&gt;Book(s)&lt;/th&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody style="border-width: 0px; border-style: initial; border-color: initial;"&gt;&lt;tr style="border-width: 0px 0px 1px; border-bottom-style: solid; border-bottom-color: rgb(232, 232, 232);"&gt;&lt;td style="padding-right: 5px; padding-left: 5px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-right-color: rgb(232, 232, 232); vertical-align: middle; text-align: center;"&gt;being awesome&lt;/td&gt;&lt;td style="padding-right: 5px; padding-left: 5px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-right-color: rgb(232, 232, 232); vertical-align: middle; text-align: center;"&gt;Book B, Book C, Book D&lt;/td&gt;&lt;/tr&gt;&lt;tr style="border-width: 0px 0px 1px; border-bottom-style: solid; border-bottom-color: rgb(232, 232, 232);"&gt;&lt;td style="padding-right: 5px; padding-left: 5px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-right-color: rgb(232, 232, 232); vertical-align: middle; text-align: center;"&gt;always&lt;/td&gt;&lt;td style="padding-right: 5px; padding-left: 5px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-right-color: rgb(232, 232, 232); vertical-align: middle; text-align: center;"&gt;Book C, Book F&lt;/td&gt;&lt;/tr&gt;&lt;tr style="border-width: 0px 0px 1px; border-bottom-style: solid; border-bottom-color: rgb(232, 232, 232);"&gt;&lt;td style="padding-right: 5px; padding-left: 5px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-right-color: rgb(232, 232, 232); vertical-align: middle; text-align: center;"&gt;believe&lt;/td&gt;&lt;td style="padding-right: 5px; padding-left: 5px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-right-color: rgb(232, 232, 232); vertical-align: middle; text-align: center;"&gt;Book B&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这个中间索引可能看起来像上面的样子，但是可能只包含词，位置和书B的信息。这种嵌套的索引架构要使每个子索引占用足够小的空间，以防所有的这些信息必须保存在一个大的倒排索引中。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这是大型系统的关键点，因为即使压缩，这些索引也太大，太昂贵（expensive）而难以存储。在这个系统，如果我们假设我们世界上的很多书-100,000,000 -每个书只有10页(只是为了下面好计算)，每页有250个词，那就是2500亿(250 billion)个词。如果我们假设每个词有5个字符，每个字符占用8位(或者1个字节，即使某些字符要用2个字节)，所以每个词占用5个字节，那么每个词即使只包含一次，这个索引也要占用超过1000GB存储空间。那么，你可以明白创建包含很多其他信息-词组，数据位置和出现次数-的索引，存储空间增长多快了吧。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;创建这些中间索引和用更小分段表示数据，使的大数据问题可以得到解决。数据可以分散到多个服务器，访问仍然很快。索引是信息检索(information retrieval)的奠基石，是现代搜索引擎的基础。当然，我们这段只是浅显的介绍，还有其他很多深入研究没有涉及-例如如何使索引更快，更小，包含更多信息(例如关联(relevancy))，和无缝的更新（在竞争条件下(race conditions)，有一些管理性难题；在海量添加或者修改数据的更新中，尤其还涉及到关联(relevancy)和得分(scoring)，也有一些难题）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;快速简便的查找到数据是很重要的；索引是可以达到这个目的有效简单工具。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;负载均衡器&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;最后还要讲讲所有分布式系统中另一个比较关键的部分，负载均衡器。负载均衡器是各种体系结构中一个不可或缺的部分，因为它们担负着将负载在处理服务请求的一组节点中进行分配的任务。这样就可以让系统中的多个节点透明地服务于同一个功能（参见图1.18）。它的主要目的就是要处理大量并发的连接并将这些连接分配给某个请求处理节点，从而可使系统具有伸缩性，仅仅通过添加新节点便能处理更多的请求。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter size-full wp-image-36595" data-ratio="0.42650103519668736" data-type="png" data-w="483" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxo4Uo7DMXOoaKzOtbalzy32tAZK9vcicCMa2BqIpgwfkJYiaHdlbiagpZQ/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; text-align: center; display: block; clear: both;" title="可扩展Web架构与分布式系统"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;图1.18: 负载均衡器&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;用于处理这些请求的算法有很多种，包括随机选取节点、循环式选取，甚至可以按照内存或CPU的利用率等等这样特定的条件进行节点选取。负载均衡器可以用软件或硬件设备来实现。近来得到广泛应用的一个开源的软件负载均衡器叫做 HAProxy）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;在分布式系统中，负载均衡器往往处于系统的最前端，这样所有发来的请求才能进行相应的分发。在一些比较复杂的分布式系统中，将一个请求分发给多个负载均衡器也是常事，如图1.19所示。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36596" data-ratio="0.26903553299492383" data-type="png" data-w="788" height="148" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxPylYRGcxKWbx3jTpy4xkJI1icV7B9iahgYxsgnCDOwDabjwlP1tLRhnA/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="552"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;图1.19: 多重负载均衡器&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;和代理类似，有些负载均衡器还可以基于请求的类型对不同的请求进行不同的处理（技术上讲，这样的叫做反向代理）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;负载均衡器面临的一个难题是怎么管理同用户的session相关的数据。在电子商务网站中，如果你只有一个客户端，那么很容易就可以把用户放入购物车里的东西保存起来，等他下次访问访问时购物车里仍能看到那些东西（这很重要，因为当用户回来发现仍然呆在购物车里的产品时很有可能就会买它）。然而，如果在一个session中将用户分发到了某个节点，但该用户下次访问时却分发到了另外一个节点，这里就有可能产生不一致性，因为新的节点可能就没有保留下用户购物车里的东西。（要是你把6盒子子农夫山泉放到购物车里了，可下次回来一看购物车空了，难道你不会发火吗？） 解决该问题的一个方法是可以使session具有保持性，让同一用户总是分发到同一个节点之上，但这样一来就很难利用类似failover这样的可靠性措施了。如果这样的话，用户的购物车里的东西不会丢，但如果用户保持的那个节点失效，就会出现一种特殊的情况，购物车里的东西不会丢这个假设再也不成立了（虽然但愿不要把这个假设写到程序里）。当然，这个问题还可以用本章中讲到的其它策略和工具来解决，比如服务以及许多并没有讲到的方法（象服务器缓存、cookie以及URL重写）。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;如果系统中只有不太多的节点，循环式（round robin）DNS系统这样的方案也许更有意义，因为负载均衡器可能比较贵，而且还额外增加了一层没必要的复杂性。当然，在比较大的系统中会有各种各样的调度以及负载均衡算法，简单点的有随机选取或循环式选取，复杂点的可以考虑上利用率以及处理能力这些因素。所有这些算法都是对浏览和请求进行分发，并能提供很有用的可靠性工具，比如自动failover或者自动提出失效节点（比如节点失去响应）。然而，这些高级特性会让问题诊断难以进行。例如，当系统载荷较大时，负载均衡器可能会移除慢速或者超时的节点（由于节点要处理大量请求），但对其它节点而言，这么做实际上是加剧了情况的恶化程度。在这时进行大量的监测非常重要，因为系统总体流量和吞吐率可能看上去是在下降（因为节点处理的请求变少了），但个别节点却越来越忙得不可开交。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;负载均衡器是一种能让你扩展系统能力的简单易行的方式，和本文中所讲的其它技术一样，它在分布式系统架构中起着基础性的作用。负载均衡器还要提供一个比较关键的功能，它必需能够探测出节点的运行状况，比如，如果一个节点失去响应或处于过载状态，负载均衡器可以将其总处理请求的节点池中移除出去，还接着使用系统中冗余的其它不同节点。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="white-space: normal;"&gt;&lt;strong&gt;队列&lt;/strong&gt;&lt;/h3&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;目前为止我们已经介绍了许多更快读取数据的方法，但另一个使数据层具伸缩性的重要部分是对写的有效管理。当系统简单的时候，只有最小的处理负载和很小的数据库，写的有多快可以预知；然而，在更复杂的系统，写可能需要几乎无法决定的长久时间。例如，数据可能必须写到不同数据库或索引中的几个地方，或者系统可能正好处于高负载。这些情况下，写或者任何那一类任务，有可能需要很长的时间，追求性能和可用性需要在系统中创建异步；一个通常的做到那一点的办法是通过队列。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36597" data-ratio="0.8073555166374781" data-type="png" data-w="571" height="415" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcx7rvkkxhqwnbKxxonZMqxs3VkWwMibJKNkH7XTxYiaTwVA3HbQcAZqqYQ/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="514"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;Figure 1.20: Synchronous request&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;设想一个系统，每个客户端都在发起一个远程服务的任务请求。每一个客户端都向服务器发送它们的请求，服务器尽可能快的完成这些任务，并分别返回结果给各个客户端。在一个小型系统，一个服务器（或逻辑服务）可以给传入的客户端请求提供迅速服务，就像它们来的一样快，这种情形应该工作的很好。然而，当服务器收到了超过它所能处理数量的请求时，每个客户端在产生一个响应前，将被迫等待其他客户端的请求结束。这是一个同步请求的例子，示意在图1.20。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;这种同步的行为会严重的降低客户端性能；客户端被迫等待，有效的执行零工作，直到它的请求被应答。添加额外的服务器承担系统负载也不会解决这个问题；即使是有效的负载均衡，为了最大化客户端性能，保证平等的公平的分发工作也是极其困难的。而且，如果服务器处理请求不可及，或者失败了，客户端上行也会失败。有效解决这个问题在于，需要在客户端请求与实际的提供服务的被执行工作之间建立抽象。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;a&gt;&lt;img class="aligncenter wp-image-36598" data-ratio="0.6156299840510366" data-type="png" data-w="627" height="347" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0REdQ158gfYicuiczftwRbcxEJqqNrOvP2WMsa2PMA2f29yo3QicRRibgDuxta3tzzYHV4p1gOAj10Yg/0?wx_fmt=png" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;" title="可扩展Web架构与分布式系统" width="564"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style="white-space: normal; text-align: center;"&gt;图 1.21:用队列管理请求&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;进入队列。一个队列就像它听起来那么简单：一个任务进入，被加入队列然后工人们只要有能力去处理就会拿起下一个任务。（看图1.21）这些任务可能是代表了简单的写数据库，或者一些复杂的事情，像为一个文档生成一个缩略预览图一类的。当一个客户端提交一个任务请求到一个队列，它们再也不会被迫等待结果；它们只需要确认请求被正确的接收了。这个确认之后可能在客户端请求的时候，作为一个工作结果的参考。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;队列使客户端能以异步的方式工作，提供了一个客户端请求与其响应的战略抽象。换句话说，在一个同步系统，没有请求与响应的区别，因此它们不能被单独的管理。在一个异步的系统，客户端请求一个任务，服务端响应一个任务已收到的确认，然后客户端可以周期性的检查任务的状态，一旦它结束就请求结果。当客户端等待一个异步的请求完成，它可以自由执行其它工作，甚至异步请求其它的服务。后者是队列与消息在分布式系统如何成为杠杆的例子。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;队列也对服务中断和失败提供了防护。例如，创建一个高度强健的队列，这个队列能够重新尝试由于瞬间服务器故障而失败的服务请求，是非常容易的事。相比直接暴露客户端于间歇性服务中断，需要复杂的而且经常矛盾的客户端错误处理程序，用一个队列去加强服务质量的担保更为可取。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;队列对管理任何大规模分布式系统不同部分之间的分布式通信，是一个基础，而且实现它们有许多的方法。有不少开源的队列如 RabbitMQ, ActiveMQ, BeanstalkD，但是有些也用像 Zookeeper的服务，或者甚至像Redis的数据存储。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="white-space: normal;"&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;1.4. 结论&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;设计有效的系统来进行快速的大数据访问是有趣的，同时有大量的好工具来帮助各种各样的应用程序进行设计。 这文章只覆盖了一些例子，仅仅是一些表面的东西，但将会越来越多–同时在这个领域里一定会继续有更多创新东西。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1401035248338</guid></item><item><title>再次写给我们这些浮躁的程序员</title><link>http://chuansong.me/n/1392347948642</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px; line-height: 25.6px;"&gt;来源：叶正盛&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;blog.csdn.net/yzsind/article/details/6168854&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2010年初写过一篇博客，一年过去了，社会好像更浮躁，也有网友问我这方面的问题，于是有了下面这篇文章，再次写给我们这些刚入行浮躁的程序员，如何成长，以下是列出了一些成长的心得，我们不必每条都去实践，但是优秀的程序员成长过程中总会实践里面的几条。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;多做项目，多思考&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不要害怕做事，刚毕业的同学最缺的就是工作经验，乱七八糟的项目能让你很快就了解了一个公司的业务与使用的技术，并且可以多接触同事与客户。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;当你毕业后刚进一家公司时，如果主管没有把你安排到项目组工作，那真的很杯具，因为他认为你还不能胜任工作或者你的加入会让项目组更糟。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;还有人说，我刚进公司，公司就把我当成了苦工，工资又低，项目组加入好几个，也做了很多事情，每天都要加班。我估计有很多人感觉是这种状态，为什么会是这样，因为全国人民（不只是程序员）里有90%可能都和你一样的感觉，这说明你现在状况是很普遍的，也说明你现在的能力并没有很多出众的地方。也许是逆境才能让人成长，如果有一天你让你的团队从这些苦力工作中解脱出来或者能给你的团队前进的动力，那你就升华了，你就比他们出众。你没有能力去改变现状，所以只能接受，而不要认为是自己生不逢时，或者说公司环境太差。创业也一样，不要认为公司没发展的主要原因是环境太差，那你不要去当老板算了，投资环境都非常好还能轮到你吗。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;还有很多同学感觉自己付出了很多，回报太少，这个问题很难平衡，首先一点，公司在聘你进来后不会因为你没有成绩就先给你回报，公司也不可能会在你有了成绩后就立即给你回报，但是长时间付出没有回报，那这个公司就不值得你付出。我不赞成频繁换公司，这么做至少可以说明你是一个只求回报不求付出的人。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;至于薪资的问题，这个很难去评估，因为每个企业的收益相差太远。但是刚毕业的同学工作需要关注薪资+成长环境，当薪资可以满足普通生活需求后，成长环境更为重要，就好比，给你一月5000元，或者6000元，真的不那么重要，因为这些收入在你以后的人生中基本没有影响。当然，如果你现在在大城市几年里每个月只拿着1000元，那还是需要选择一下收入更好的公司，因为这么低的收入会严重影响你的工作学习计划，也说明你的公司不重视员工，没有能力给员工好生活的公司，将来的发展也是有限的。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.454" data-s="300,640" data-type="jpeg" data-w="500" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/2A8tXicCG8yldYJLchvacKAn5etRWKMZNrVtFWrKNNIialt6CUmkojFlMNrwlgVET0GGjYvTEaUKmzUN3revEuCg/640?wx_fmt=jpeg" style="box-sizing: border-box !important; word-wrap: break-word !important; width: auto !important; visibility: visible !important;"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;特别说明一点，互联网公司与传统信息化企业不一样，互联网一直是风险比较高的行业，也许你选择了一个看好的企业，也佩服老板的眼光，可能你现在需要的是与公司同甘共苦。不要指望在刚创业的团队里拿到非常好的待遇，因为你现在就是在投资，也许几年后公司成功了，你就是功臣，不怎么出色的你也可以当上总监或副总裁。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;自己开发框架与工具来提高工作效率&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;当你参与了很多项目，当你发现自己经常做一些COPY,PASTE的操作时，你可以考虑花时间去提取问题的共性，做一些自动化工具去摆平问题，或者是写一些基础框架来屏蔽这些无聊并且累赘的代码。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;自己开发框架与工具，可以让你快速的从一个初级程序员转变成更高级的程序员或分析师或架构师，因为这个过程中给你提供了为其他程序员服务的机会，你有动力去了解其它程序员的工作需求，你可以把你的框架或工具写得很好，接口简单灵活并且性能好，分析师和架构师就经常要干这种让人力成本降低的事。但要记住一点，不要以为自己开发框架与工具就认为很NB了，因为这种工作并不会体现多少技术含量，而只是提高个人抽象问题的能力，这个活很多程序员都能干，但是很少人去干好。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;参与开源项目&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;参与开源项目可以让你领略到不同程序员的沟通方法，开发习惯，技术思维，可以认识更多的朋友，如果你足够强，也可能一举成名哦。可以让你更深入了解这个开源东西，所以最好是感兴趣或者是与工作有关的，不要说什么流行就参与什么。开源项目可以自己贡献一个新的项目，或者参与一个感兴趣的项目。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不要指望开源项目会给你带来直接的金钱，如果你想拿着开源项目封装一下去发财，那我真不知道如何做，可以去问问什么什么芯，什么什么国产操作系统的人，他们更有经验。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;英语&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在这个全球信息时代，英语真的是一个很重要的工具，我真的很羡慕那些学校里英语就很好的同学，好的英语能力可以更快速的了解到更多知识。当前，新的技术与知识大部份语言都是英语或翻译成英语，如果能把英语学好，可以让你人生少奋斗10年。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;写技术博客&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;写技术博客是一种可以快速提高的方法，但是一个人能坚持每周写技术博客，那是需要付出很多代价，写博客并不是要我们写出高质量的文章才发表，我们可以分享自己的一些小经验，也可以分享自己的体会。一样东西在你大脑里，并不表示你已经掌握了，如果你能说给别人听，或者用文字表达出来，那首先你要将这些知识点整理清楚才好表达。我经常认为自己已经对某个问题了解了，但是在整理技术博客时发现自己的知识盲点，然后再去查找知识来补充自己的盲点，直到最后搞清楚了才算告一段落。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;有些人不喜欢分享或者害怕分享，但是在这个世界，只要不是公司机密或商业秘密，拿出来分享可以让你得到更多同行的反馈，网络上的人会给你相对真实的反馈，因为大部份人与你没有利益关系。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;新人不要害怕自己分享的知识是否有技术含量，只要你认为有价值，都可以拿出来，这不仅可以给别人提供知识，也可以自己整理思路，还可以得到网友的反馈。如果你的知识没有价值，分享出来也没有关系，如果你的文章技术含量低，怕被人鄙视，那是你这个人不敢承认现实，因为同事与朋友可能不会说你的文章很菜，就算被鄙视了又如何，有时被人鄙视也是一种前进的动力。有人说如果几年后我进步了很多，但还让人看到我这些初学时弱智的文档，误人子弟，不好意思，Ok，那个时候有可以完全把文档删除，其实我更喜欢放在那里品味自己成长的过程，把有误导的地方更正。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;我知道有一个技术博客作者，数据库专家杨廷琨，他几年来，每天坚持写一篇技术博客，现在已经有2千多篇，我的ORACLE数据库水平比他差很多，但是我也偶尔看到一些他新写的文档我几年前就会了，但这些并不妨碍我对这位博客作者的敬佩，因为他的博客让我学到了很多知识。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入感兴趣的技术论坛&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;每个公司使用的技术与产品及环境都不太一样，也许你在公司里感觉什么东西都是别人做好了，我只是个流水线工人，我们的系统由于有严格的规范也不太出问题，自己的实践提高机会太少，那建议你加入感兴趣的技术论坛。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;技术论坛上你可以看到很多人各种各样的问题与分享讨论，你也可以试着去帮别人解决问题。技术论坛可以让你进一步成长，但不要告诉我你只是会沙发、顶或接分的那种。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;国内CSDN、ITPUB、CHINAUNIX、JAVAEYE、MSDN都是人气很旺，里面也不缺技术大牛与无敌大菜鸟。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;常看参考手册&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;很多程序员，遇到问题喜欢直接去请教别人，或是Google找结果，通过别人或Google也许问题可以解决，但是只能形成知识点，不能形成知识体系。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;要全面掌握一个东西最快的方法是看产品的官方参考手册，参考手册一般是代表正规的用法或者是推荐的用法，对于小产品最好是先将参考手册全部看一遍。如果是比较大的产品如（ORACLE、JAVA、.NET）那可以选择看经常使用到的部分。只有当你在看完参考手册还不懂的时候再去Google或与别人探讨，这样的方式会让你的知识更体系化。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深入分析问题原因&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;程序员一定要具备对技术问题刨根问底的想法，很多程序员能解决问题，但是不想去了解问题的根源。我们经常遇到问题，而且很多问题重启程序或者重启机器就好了，有多少程序员会去挖掘重启就解决问题的原因。我是从事数据库的，也经常看到很多人遇到数据库有问题，重装一下搞定，而没有深入分析问题产生的原因。也许在生产环境我们没有时间去分析，但是在开发环境、测试环境你是不是也经常重启解决问题。如果能在开发环境与测试环境遇到问题，这是技术人员成长的最好机会，我们在自己的领域一定不能放过这种成长的机会，因为大部份专家都是在这种历练中出来的。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不要害怕复杂&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;很多程序员习惯了利用各种框架及工具解决问题，自己只是写一些简单逻辑，当有一天遇到一个问题，没有对应的框架或工具时就放弃需求。我们不要害怕困难，如果你每天的代码都没有挑战，那何来提高，我们应该在适当的时候给自己一些压力，这样可以让自己提高得更快一些。比如你的系统需要一个轻量级的工作流引擎、编译器、解析器、界面设计器、屏幕控制器，或者一个http服务器之类的东东，但是现有的东西都感觉不太满意，你可以自己去搞一个试试，不要害怕不成功，不要害怕自己做不好。这些东西看起来有点复杂，但是当你深入去做时，你会发现里面有很多有意思的东西，你需要去逐步改进你的小系统，直到它能很好的运行为止，这是个很好的成长过程，可以让你对程序有更深的理解，也可打开思路。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;学习计算机基础，深入技术原理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;有时候我们经常迷惘，感觉技术水平没有提高，感觉技术能力总是浮在表面，特别是当你发现自己算法分析、性能分析、故障诊断能力有限时，也许这是你再次需要学习计算机基础的时候，因为基础不牢，所以你的问题诊断准确率不高。每个程序员应该都学过计算机基础（计算机体系、操作系统、网络、数据库原理、算法等等），这些知识对很多人来说是很枯燥。在当前高级编程语言时代，你的计算机基础不好也能编码，而且效率也不低，但是当你要想成为技术牛人，计算机基础就是一道坎，因为不扎实的计算机基础知识会让你在忽悠与被忽悠中成长。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关心产品市场与商业动态&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;程序员是否需要关心产品市场与商业动态，我认为是有必要的，除非你真是技术天才，能闭关十年后横扫江湖。计算机技术发展太快，每年都有新的流行产品与技术，大公司也经常改变战略或易主。如果你想引领技术潮流，想创业，那一定要关心产品市场与商业动态。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(192, 0, 0); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不要去轻视任何一种职位、语言、工具&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在IT岗位里，没有高低之分，不要去轻视任何一种岗位，有些程序员认为自己的成果最有价值，美工、测试只是边缘岗位，项目经理就只会瞎指挥，不干活，销售人员与售前人员接到定单后屁事都没有，整个项目基本上就是我一个人的成果。这种心态是最要不得的。其实你的领导并不会这么想，很多事情是你不知道的，如客户关系就可能不是你一个人搞定的。还有最重要的一点，如果这个项目没有你参加怎么样？项目可能换成另外一个人做，也许他也能做得也不错，这就说明你的价值或重要性并不像你想象的那么重要。举个例子：&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;就好比你买一台联想电脑4000块，卖给一个没看过电脑的火星人20000块，这台电脑是最后的成果，但是否表示联想这台电脑是最重要的，可能你买一台戴尔的电脑还赚的钱更多，也可能你只要给对方一台杂牌电脑就可以拿到20000块。在这个例子里更重要的也许是客户关系与抓住商机，而买什么样的电脑影响不大（你在项目里的地位可能就是这台电脑的作用，没有你肯定不完整，但是很容易找到你的替代品，所以你的价值并不是最重要的）。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;计算机编程语言是初学者最喜欢对比的话题，有的大师也经常对比各种语言的优缺点。我并不反对的评论那种语言的优劣，但我们不能去鄙视某种语言的及其使用者，因为流行的语言都有它生存的环境，可能是我们对技术的见识太窄，也可能是我们对人类的思维习惯了解的不全面，不要总是拿自己的习惯去评价。有很多系统管理员喜欢用命令行，喜欢用shell,perl等脚本语言，这些东西在我看来简直是低效且易读性差的东西，但是当你经常在没有图形界面下工作时，脚本语言可能真是更高效的选择。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;最后写上一句浮躁的根源：不要把祖国当母亲，应该把祖国当自己的孩子。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本不想讲这句话的，但是现实就是如此，浮躁的人群总是对社会充满了意见。我认为所有的这些浮躁都有一个共同点，就是认为自己无法改变这个社会，改变这个社会是国家的事，是其他人的事。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;小时候老师总是讲祖国是母亲，我们是花朵，但是实际上我们也不是什么花朵，我们就是郑智化歌里的那根“小小的草，风吹雨打后依然不倒”。现实的社会总是充满着种种不平衡，但是浮躁并不能解决问题。有时总在想祖国并不像我的母亲，她更像是我的孩子，她还很小，经历过很多坎坷，我们经常感觉自家的孩子比不上别人的孩子的某个方面，于是对孩子多加责骂，也可能会让她花一个暑假的时间去补习。小孩子有一些成绩后也会骄傲，有时还会欺骗，我们不能容忍的是她的恶意谎言，但是她还没有到无药可救的程度，她依然还在成长。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;我们经常拿孩子与别人的孩子对比，而且总是发现别人孩子更好的一面，但是你是否希望与别人交换孩子呢，除了感情外你是否了解别人孩子的全部，我们需要更多的面对现实，应该在孩子成长的时候及时指出她的缺点，她不可能什么都是优秀的，所以我们应该尽自己的能力让她更好一些。你不太可能改变母亲，但是你的行动会影响孩子，你抛弃孩子，你真正的孩子将来可能也会抛弃你，所以说祖国可能并不像母亲，更像孩子，如果你把祖国当孩子，也许是另一种人生价值。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); font-size: 15px;"&gt;觉得本文对你有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 169, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关注「程序员的那些事」，看技术干货&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 25.6px; text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylBdiap3J3SwP0ianxOhYKCBYY75PlXmINda18ybIrkfxbRT4jhBBtSu3k1qbwdHUArhNOIKsnQgJMg/640?wx_fmt=png" style="line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important; visibility: visible !important; width: auto !important;" width="auto"/&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1392347948642</guid></item><item><title>穿上 Linux 小企鹅同款，12 款程序员专属极客卫衣</title><link>http://chuansong.me/n/1392348048664</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;范品社推出了十几款程序员相关题材极客卫衣、长、短袖。 包括：Hello World，404，Chrome 断网，吃饭、睡觉、编程狂人，薛定谔的猫，黑客帝国等。卫衣单件 ¥139.9，长袖 ¥69.9，短袖 ¥59.9。&lt;br style="box-sizing: border-box;"/&gt;&lt;br style="box-sizing: border-box;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(249, 110, 87); box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;先领券再购物：&lt;/strong&gt;&lt;/span&gt;满99减5元，满159减10元，满259减20元，满359减30元。&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;strong&gt;购买方式，请见末尾&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="line-height: 25.6px; white-space: normal; widows: 1;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; text-align: center; overflow: hidden; box-sizing: border-box;"&gt;&lt;section class="" style="display: inline-block; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;&lt;img class="" data-ratio="1.0511363636363635" data-type="png" data-w="176" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/75TZzMDzrHiciboAx8gDTJRKMvb3fOGn8rEwS1ao1hsR9Q6as4maa7u4cLeIMdWL6u25GHU2ANicehtgC2oZCBJcw/0?wx_fmt=png" style="margin-right: auto; margin-left: auto; height: 12em; width: 11em; box-sizing: border-box; background-color: rgb(249, 110, 87);" width="11em"/&gt;&lt;/section&gt;&lt;section style="margin-top: -9em; margin-bottom: 3em; box-sizing: border-box;"&gt;&lt;section style="margin-left: -2em; font-size: 24px; box-sizing: border-box;"&gt;&lt;section style="width: 0px; display: inline-block; vertical-align: top; border-right: 0.5em solid rgb(249, 110, 87); border-bottom: 1em solid rgb(249, 110, 87); box-sizing: border-box; border-left: 0.5em solid transparent !important; border-top: 1em solid transparent !important;"&gt;&lt;/section&gt;&lt;section class="" style="padding-right: 10px; padding-left: 10px; height: 2em; line-height: 2em; min-width: 6em; display: inline-block; vertical-align: top; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(249, 110, 87);"&gt;&lt;p style="box-sizing: border-box;"&gt;简约个性&lt;/p&gt;&lt;/section&gt;&lt;section style="width: 0px; display: inline-block; vertical-align: top; border-left: 0.5em solid rgb(249, 110, 87); border-top: 1em solid rgb(249, 110, 87); box-sizing: border-box; border-right: 0.5em solid transparent !important; border-bottom: 1em solid transparent !important;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;section style="margin-left: 2em; font-size: 24px; box-sizing: border-box;"&gt;&lt;section style="width: 0px; display: inline-block; vertical-align: top; border-right: 0.5em solid rgb(249, 110, 87); border-bottom: 1em solid rgb(249, 110, 87); box-sizing: border-box; border-left: 0.5em solid transparent !important; border-top: 1em solid transparent !important;"&gt;&lt;/section&gt;&lt;section class="" style="padding-right: 10px; padding-left: 10px; height: 2em; line-height: 2em; min-width: 6em; display: inline-block; vertical-align: top; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(249, 110, 87);"&gt;&lt;p style="box-sizing: border-box;"&gt;极客之选&lt;/p&gt;&lt;/section&gt;&lt;section style="width: 0px; display: inline-block; vertical-align: top; border-left: 0.5em solid rgb(249, 110, 87); border-top: 1em solid rgb(249, 110, 87); box-sizing: border-box; border-right: 0.5em solid transparent !important; border-bottom: 1em solid transparent !important;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; text-align: center; box-sizing: border-box;"&gt;&lt;img class="" data-ratio="1.5" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/75TZzMDzrHiciboAx8gDTJRKMvb3fOGn8rnpcWMWCTAepIVqFmnicCzuQxTk9o240he5ubOZ9NEWhibDJx9via2FdKA/0?wx_fmt=jpeg" style="vertical-align: middle; box-sizing: border-box;"/&gt;&lt;img class="" data-ratio="1.5" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_jpg/75TZzMDzrHiciboAx8gDTJRKMvb3fOGn8rDWJyibjpUN1GOZCKoMnhQWe0Im1UnFfVV3lb6W3SCNfJuVRA39y3CkA/0?wx_fmt=jpeg" style="vertical-align: middle; box-sizing: border-box;"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; padding-right: 3px; padding-left: 3px; text-align: center; overflow: hidden; box-sizing: border-box;"&gt;&lt;section class="" style="margin-bottom: -1em; padding: 3px 10px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;好评如潮&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section class="" style="height: 2.8em; box-sizing: border-box;"&gt;&lt;section style="transform: rotate(-45deg); box-sizing: border-box;"&gt;&lt;section style="margin: auto; width: 2em; height: 2em; display: inline-block; box-sizing: border-box;"&gt;&lt;section style="margin-left: -3px; width: 6px; height: 6px; border-radius: 100%; box-sizing: border-box; background-color: rgb(249, 110, 87);"&gt;&lt;/section&gt;&lt;section style="height: 32px; border-left: 1px solid rgb(249, 110, 87); border-bottom: 1px solid rgb(249, 110, 87); box-sizing: border-box;"&gt;&lt;/section&gt;&lt;section style="margin-top: -3px; margin-right: -5px; width: 6px; height: 6px; float: right; border-radius: 100%; box-sizing: border-box; background-color: rgb(249, 110, 87);"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section style="margin-top: -0.8em; width: 550px; display: inline-block; vertical-align: top; box-sizing: border-box;"&gt;&lt;section style="border-top: 1px solid rgb(249, 110, 87); box-sizing: border-box;"&gt;&lt;/section&gt;&lt;section style="margin-top: -3px; width: 6px; height: 6px; border-radius: 100%; box-sizing: border-box; background-color: rgb(249, 110, 87);"&gt;&lt;/section&gt;&lt;section style="margin-top: -6px; width: 6px; height: 6px; float: right; border-radius: 100%; box-sizing: border-box; background-color: rgb(249, 110, 87);"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;寒******1&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;非常帅，身边的猿们都惊呆了！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;d******r&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;非常喜欢，里面是绒的，很保暖~~很geek很有范儿&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;红***梦&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;不错，很喜欢，而且包装也很好，老板用心赞～&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;曾******鸿&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;真的非常的好。店家给了一个surprise，非常开心，希望衣服可以穿的久些，好评&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;h******6&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;老婆说，穿上去很赞，慕名而来，买的&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;z******n&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;geek品质，低调且狂热，好评尖货&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;潘******4&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;我们俩都是程序猿(づ ●─● )づ摸上去比较舒服，最小码套在我身上也很大，他的码还没试呢，料子挺好的，要是有合身情侣款就更好拉&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;f******c&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;质量好赞，有型，非常好，看了广告过来的，三个小伙伴一人买了一件，五分好评&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;t******2&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;衣服很厚，颜色不错挺好的，hello world真是程序猿必备啊！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;s***s&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;我的是404 女友的是java 女友很喜欢 对 我就是来虐狗的&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;e******d&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;赶活动买的，质量很好，必须全5好评。我是忠实“开发者”系列公众号的读者，哈哈！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;b******e&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;刚好合身，质量也很好，就是款式显年轻了，让我感叹岁月流逝啊！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;i******0&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;实物与图片一致，摸起来手感柔软，是棉的，不错，价格实惠&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 10px; margin-bottom: 10px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-top: 10px; padding-right: 10px; padding-left: 10px; box-sizing: border-box; background-color: rgb(239, 239, 239);"&gt;&lt;span class="" style="display: inline-block; width: 26.7969px; line-height: 0.8; font-weight: bolder; font-size: 48px; box-sizing: border-box;"&gt;&lt;section style="box-sizing: border-box;"&gt;“&lt;/section&gt;&lt;/span&gt;&lt;section class="" style="display: inline-block; vertical-align: top; float: right; width: 482.391px; line-height: 1.5; font-size: 19.2px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;&lt;span style="font-size: 16px; box-sizing: border-box;"&gt;1******3&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; box-sizing: border-box;"&gt;很闷骚，很有逼格，质量也不错～&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="clear: both; box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;section class="" style="text-align: right; font-size: 14px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;以上均为最新客户真实评论&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;br style="box-sizing: border-box;"/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; text-align: center; box-sizing: border-box;"&gt;&lt;section class="" style="padding: 0.2em 0.5em 0.15em; display: inline-block; border-left: 1px solid rgb(249, 110, 87); border-right: 1px solid rgb(249, 110, 87); box-sizing: border-box;"&gt;&lt;section class="" style="line-height: 1em; vertical-align: top; font-size: 16px; color: rgb(249, 110, 87); box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;网店购买地址&lt;/p&gt;&lt;/section&gt;&lt;section style="margin-top: 0.5em; font-weight: bolder; line-height: 1; box-sizing: border-box;"&gt;&lt;section class="" style="padding-right: 0.5em; padding-left: 0.5em; display: inline-block; font-size: 18px; color: rgb(249, 110, 87); box-sizing: border-box; background-color: rgba(255, 255, 254, 0.992157);"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;strong style="box-sizing: border-box;"&gt;fanpinshe.taobao.com&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section style="margin-top: -1em; margin-bottom: 1em; border-bottom: 1px solid rgb(249, 110, 87); box-sizing: border-box;"&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;br style="box-sizing: border-box;"/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="box-sizing: border-box;"&gt;&lt;section class="" style="font-size: 14px; box-sizing: border-box;"&gt;&lt;p style="box-sizing: border-box;"&gt;淘口令：复制以下红色内容，然后打开手淘即可购买&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="Powered-by-XIUMI V5" powered-by="xiumi.us" style="line-height: 25.6px; white-space: normal; box-sizing: border-box;"&gt;&lt;section class="" style="margin-top: 8px; margin-bottom: 8px; box-sizing: border-box;"&gt;&lt;section class="" style="padding-right: 10px; padding-left: 10px; display: inline-block; border-radius: 5px; line-height: 1.8; font-size: 16px; color: rgb(255, 255, 255); width: 556px; box-sizing: border-box; background-color: rgb(239, 79, 79);"&gt;&lt;p style="box-sizing: border-box;"&gt;范品社，使用￥极客T恤￥抢先预览（长按复制整段文案，打开手机淘宝即可进入活动内容）&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1392348048664</guid></item><item><title>基于 Nginx 的软件负载均衡实现解读</title><link>http://chuansong.me/n/1388080048946</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;来源：taozj&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;taozj.org/201612/nginx-load-balancing.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;负载均衡在服务端开发中算是一个比较重要的特性。因为Nginx除了作为常规的Web服务器外，还会被大规模的用于反向代理前端，因为Nginx的异步框架可以处理很大的并发请求，把这些并发请求hold住之后就可以分发给后台服务端(backend servers，也叫做服务池， 后面简称backend)来做复杂的计算、处理和响应，这种模式的好处是相当多的：隐藏业务主机更安全，节约了公网IP地址，并且在业务量增加的时候可以方便地扩容后台服务器。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;负载均衡可以分为硬件负载均衡和软件负载均衡，前者一般是专用的软件和硬件相结合的设备，设备商会提供完整成熟的解决方案，通常也会更加昂贵。软件的复杂均衡以Nginx占据绝大多数，本文也是基于其手册做相应的学习研究的。&lt;/p&gt;&lt;p&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a rel="fancy-group" title=""&gt;&lt;img class="" data-ratio="0.5142857142857142" data-type="png" data-w="700" height="undefined" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B11tGAR43elPicCbRPFib4P7toqTEElPZ9wd7h0uREiat6U8iaa5zaZjDuq1sjhFZpCty13MQgV7AiaH3A/0?wx_fmt=png" style="margin: 0.5em auto; border-width: initial; border-style: none; border-color: initial; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline;" title="" width="undefined"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h1&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;一、基本简介&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;负载均衡涉及到以下的基础知识。&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(1) 负载均衡算法&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;　　a. Round Robin: 对所有的backend轮训发送请求，算是最简单的方式了，也是默认的分配方式；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;　　b. Least Connections(least_conn): 跟踪和backend当前的活跃连接数目，最少的连接数目说明这个backend负载最轻，将请求分配给他，这种方式会考虑到配置中给每个upstream分配的weight权重信息；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;　　c. Least Time(least_time): 请求会分配给响应最快和活跃连接数最少的backend；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;　　d. IP Hash(ip_hash): 对请求来源IP地址计算hash值，IPv4会考虑前3个octet，IPv6会考虑所有的地址位，然后根据得到的hash值通过某种映射分配到backend；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;　　e. Generic Hash(hash): 以用户自定义资源(比如URL)的方式计算hash值完成分配，其可选consistent关键字支持一致性hash特性；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;strong&gt;(2) 会话一致性&lt;/strong&gt;&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;用户(浏览器)在和服务端交互的时候，通常会在本地保存一些信息，而整个过程叫做一个会话(Session)并用唯一的Session ID进行标识。会话的概念不仅用于购物车这种常见情况，因为HTTP协议是无状态的，所以任何需要逻辑上下文的情形都必须使用会话机制，此外HTTP客户端也会额外缓存一些数据在本地，这样就可以减少请求提高性能了。如果负载均衡可能将这个会话的请求分配到不同的后台服务端上，这肯定是不合适的，必须通过多个backend共享这些数据，效率肯定会很低下，最简单的情况是保证会话一致性——相同的会话每次请求都会被分配到同一个backend上去。&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(3) 后台服务端的动态配置&lt;/strong&gt;&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;出问题的backend要能被及时探测并剔除出分配群，而当业务增长的时候可以灵活的添加backend数目。此外当前风靡的Elastic Compute云计算服务，服务商也应当根据当前负载自动添加和减少backend主机。&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;&lt;strong&gt;(4) 基于DNS的负载均衡&lt;/strong&gt;&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;通常现代的网络服务者一个域名会关连到多个主机，在进行DNS查询的时候，默认情况下DNS服务器会以round-robin形式以不同的顺序返回IP地址列表，因此天然将客户请求分配到不同的主机上去。不过这种方式含有固有的缺陷：DNS不会检查主机和IP地址的可访问性，所以分配给客户端的IP不确保是可用的(Google 404)；DNS的解析结果会在客户端、多个中间DNS服务器不断的缓存，所以backend的分配不会那么的理想。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;二、Nginx中的负载均衡&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;Nginx中的负载均衡配置在手册中描述的极为细致，此处就不流水帐了。对于常用的HTTP负载均衡，主要先定义一个upstream作为backend group，然后通过proxy_pass/fastcgi_pass等方式进行转发操作，其中fastcgi_pass几乎算是Nginx+PHP站点的标配了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;2.1 会话一致性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;Nginx中的会话一致性是通过sticky开启的，会话一致性和之前的负载均衡算法之间并不冲突，只是需要在第一次分配之后，该会话的所有请求都分配到那个相同的backend上面。目前支持三种模式的会话一致性：&lt;a&gt;&lt;/a&gt;&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;(1). Cookie Insertion&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;在backend第一次response之后，会在其头部添加一个session cookie，即由负载均衡器向客户端植入 cookie，之后客户端接下来的请求都会带有这个cookie值，Nginx可以根据这个cookie判断需要转发给哪个backend了。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;figure&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;sticky cookie srv_id expires=1h domain=.example.com path=/;&lt;/span&gt;&lt;/figure&gt;&lt;/blockquote&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;上面的srv_id代表了cookie的名字，而后面的参数expires、domain、path都是可选的。&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;(2). Sticky Routes&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;也是在backend第一次response之后，会产生一个route信息，route信息通常会从cookie/URI信息中提取。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;figure&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;figure&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;sticky route $route_cookie $route_uri;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;/blockquote&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;这样Nginx会按照顺序搜索&lt;nobr aria-hidden="true"&gt;routecookie、&lt;/nobr&gt;route_uri参数并选择第一个非空的参数用作route，而如果所有的参数都是空的，就使用上面默认的负载均衡算法决定请求分发给哪个backend。&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;(3). &lt;strong style="border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;"&gt;Learn&lt;/strong&gt;&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;较为的复杂也较为的智能，Nginx会自动监测request和response中的session信息，而且通常需要回话一致性的请求、应答中都会带有session信息，这和第一种方式相比是不用增加cookie，而是动态学习已有的session。&lt;br/&gt;　　&lt;/p&gt;&lt;p&gt;这种方式需要使用到zone结构，在Nginx中zone都是共享内存，可以在多个worker process中共享数据用的。(不过其他的会话一致性怎么没用到共享内存区域呢？)&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;span style="display: none; line-height: 0px;"&gt;‍&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;sticky learn &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;   create=$upstream_cookie_examplecookie&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;   lookup=$cookie_examplecookie&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;   zone=client_sessions:1m&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;   timeout=1h;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.2 Session Draining&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;主要是有需要关闭某些backend以便维护或者升级，这些关键性的服务都讲求gracefully处理的：就是新的请求不会发送到这个backend上面，而之前分配到这个backend的会话的后续请求还会继续发送给他，直到这个会话最终完成。&lt;/p&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;让某个backend进入draining的状态，既可以直接修改配置文件，然后按照之前的方式通过向master process发送信号重新加载配置，也可以采用Nginx的on-the-fly配置方式。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;$ curl http://localhost/upstream_conf?upstream=backend&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;$ curl http://localhost/upstream_conf?upstream=backend\&amp;amp;id;=1\&amp;amp;drain;=1&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过上面的方式，先列出各个bacnkend的ID号，然后drain指定ID的backend。通过在线观测backend的所有session都完成后，该backend就可以下线了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.3 backend健康监测&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;backend出错会涉及到两个参数，max_fails=1 fail_timeout=10s;意味着只要Nginx向backend发送一个请求失败或者没有收到一个响应，就认为该backend在接下来的10s是不可用的状态。&lt;/p&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;通过周期性地向backend发送特殊的请求，并期盼收到特殊的响应，可以用以确认backend是健康可用的状态。通过health_check可以做出这个配置。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;match server_ok {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    status 200-399;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    essay-header Content-Type = text/html;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    body !~ "maintenance mode";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;server {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    location / {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        proxy_pass http://backend;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        health_check interval=10 fails=3 passes=2 match=server_ok;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上面的health_check是必须的，后面的参数都是可选的。尤其是后面的match参数，可以自定义服务器健康的条件，包括返回状态码、头部信息、返回body等，这些条件是&amp;amp;&amp;amp;与关系。默认情况下Nginx会相隔interval的间隔向backend group发送一个”/“的请求，如果超时或者返回非2xx/3xx的响应码，则认为对应的backend是unhealthy的，那么Nginx会停止向其发送request直到下次改backend再次通过检查。&lt;/p&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;在使用了health_check功能的时候，一般都需要在backend group开辟一个zone，在共享backend group配置的同时，所有backend的状态就可以在所有的worker process所共享了，否则每个worker process独立保存自己的状态检查计数和结果，两种情况会有很大的差异哦。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.4 通过DNS设置HTTP负载均衡&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Nginx的backend group中的主机可以配置成域名的形式，如果在域名的后面添加resolve参数，那么Nginx会周期性的解析这个域名，当域名解析的结果发生变化的时候会自动生效而不用重启。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;http {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    resolver 10.0.0.1 valid=300s ipv6=off;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    resolver_timeout 10s;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    server {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        location / {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;            proxy_pass http://backend;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;   &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    upstream backend {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        zone backend 32k;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        least_conn;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        ...&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        server backend1.example.com resolve;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;        server backend2.example.com resolve;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果域名解析的结果含有多个IP地址，这些IP地址都会保存到配置文件中去，并且这些IP都参与到自动负载均衡。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.5 TCP/UDP流量的负载均衡&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通常，HTTP和HTTPS的负载均衡叫做七层负载均衡，而TCP和UDP协议的负载均衡叫做四层负载均衡。因为七层负载均衡通常都是HTTP和HTTPS协议，所以这种负载均衡相当于是四层负载均衡的特例化，均衡器可以根据HTTP/HTTPS协议的头部(User-Agent、Language等)、响应码甚至是响应内容做额外的规则，达到特定条件特定目的的backend转发的需求。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;除了Nginx所专长的HTTP负载均衡，Nginx还支持TCP和UDP流量的负载均衡，适用于LDAP/MySQL/RTMP和DNS/syslog/RADIUS各种应用场景。这类情况的负载均衡使用stream来配置，Nginx编译的时候需要支持–with-stream选项。查看手册，其配置原理和参数和HTTP负载均衡差不多。&lt;/p&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;因为TCP、UDP的负载均衡都是针对通用程序的，所以之前HTTP协议支持的match条件(status、essay-header、body)是没法使用的。TCP和UDP的程序可以根据特定的程序，采用send、expect的方式来进行动态健康检测。&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;match http {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    send      "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;    expect ~* "200 OK";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.6 其他特性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;slow_start=30s：防止新添加/恢复的主机被突然增加的请求所压垮，通过这个参数可以让该主机的weight从0开始慢慢增加到设定值，让其负载有一个缓慢增加的过程。&lt;/p&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;max_conns=30：可以设置backend的最大连接数目，当超过这个数目的时候会被放到queue队列中，同时队列的大小和超时参数也可以设置，当队列中的请求数大于设定值，或者超过了timeout但是backend还不能处理请求，则客户端将会收到一个错误返回。通常来说这还是一个比较重要的参数，因为Nginx作为反向代理的时候，通常就是用于抗住并发量的，如果给backend过多的并发请求，很可能会占用后端过多的资源(比如线程、进程非事件驱动)，最终反而会影响backend的处理能力。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本文完！&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1388080048946</guid></item><item><title>MySQL 大表优化方案</title><link>http://chuansong.me/n/1378343948924</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;来源：manong&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;segmentfault.com/a/1190000006158186&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当MySQL单表记录数过大时，增删改查性能都会急剧下降，可以参考以下步骤来优化：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;单表优化&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;除非单表数据未来会一直不断上涨，否则不要一开始就考虑拆分，拆分会带来逻辑、部署、运维的各种复杂度，一般以整型值为主的表在千万级以下，字符串为主的表在五百万以下是没有太大问题的。而事实上很多时候MySQL单表的性能依然有不少优化空间，甚至能正常支撑千万级以上的数据量：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;字段&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;尽量使用TINYINT、SMALLINT、MEDIUM_INT作为整数类型而非INT，如果非负则加上UNSIGNED&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;VARCHAR的长度只分配真正需要的空间&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用枚举或整数代替字符串类型&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量使用TIMESTAMP而非DATETIME，&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;单表不要有太多字段，建议在20以内&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;避免使用NULL字段，很难查询优化且占用额外索引空间&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;用整型来存IP&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;索引&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;索引并不是越多越好，要根据查询有针对性的创建，考虑在WHERE和ORDER BY命令上涉及的列建立索引，可根据EXPLAIN来查看是否用了索引还是全表扫描&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应尽量避免在WHERE子句中对字段进行NULL值判断，否则将导致引擎放弃使用索引而进行全表扫描&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;值分布很稀少的字段不适合建索引，例如”性别”这种只有两三个值的字段&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;字符字段只建前缀索引&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;字符字段最好不要做主键&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不用外键，由程序保证约束&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量不用UNIQUE，由程序保证约束&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用多列索引时主意顺序和查询条件保持一致，同时删除不必要的单列索引&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;查询SQL&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;可通过开启慢查询日志来找出较慢的SQL&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不做列运算：SELECT id WHERE age + 1 = 10，任何对列的操作都将导致表扫描，它包括数据库教程函数、计算表达式等等，查询时要尽可能将操作移至等号右边&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;sql语句尽可能简单：一条sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大sql可以堵死整个库&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不用SELECT *&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;OR改写成IN：OR的效率是n级别，IN的效率是log(n)级别，in的个数建议控制在200以内&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不用函数和触发器，在应用程序实现&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;避免%xxx式查询&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;少用JOIN&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用同类型进行比较，比如用'123'和'123'比，123和123比&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量避免在WHERE子句中使用 != 或 &amp;lt;&amp;gt; 操作符，否则将引擎放弃使用索引而进行全表扫描&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对于连续数值，使用BETWEEN不用IN：SELECT id FROM t WHERE num BETWEEN 1 AND 5&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;列表数据不要拿全表，要使用LIMIT来分页，每页数量也不要太大&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;引擎&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;目前广泛使用的是MyISAM和InnoDB两种引擎：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h5&gt;MyISAM&lt;/h5&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;MyISAM引擎是MySQL 5.1及之前版本的默认引擎，它的特点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;不支持行锁，读取时对需要读到的所有表加锁，写入时则对表加排它锁&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不支持事务&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不支持外键&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不支持崩溃后的安全恢复&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在表有读取查询的同时，支持往表中插入新纪录&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持BLOB和TEXT的前500个字符索引，支持全文索引&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持延迟更新索引，极大提升写入性能&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对于不会进行修改的表，支持压缩表，极大减少磁盘空间占用&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;InnoDB&lt;/h5&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;InnoDB在MySQL 5.5后成为默认索引，它的特点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;支持行锁，采用MVCC来支持高并发&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持事务&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持外键&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持崩溃后的安全恢复&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不支持全文索引&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;总体来讲，MyISAM适合SELECT密集型的表，而InnoDB适合INSERT和UPDATE密集型的表&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;系统调优参数&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以使用下面几个工具来做基准测试：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;sysbench：一个模块化，跨平台以及多线程的性能测试工具&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;iibench-mysql：基于 Java 的 MySQL/Percona/MariaDB 索引进行插入性能测试工具&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;tpcc-mysql：Percona开发的TPC-C测试工具&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;具体的调优参数内容较多，具体可参考官方文档，这里介绍一些比较重要的参数：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;back_log：back_log值指出在MySQL暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中。也就是说，如果MySql的连接数据达到max_connections时，新来的请求将会被存在堆栈中，以等待某一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log，将不被授予连接资源。可以从默认的50升至500&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;wait_timeout：数据库连接闲置时间，闲置连接会占用内存资源。可以从默认的8小时减到半小时&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;max_user_connection: 最大连接数，默认为0无上限，最好设一个合理上限&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;thread_concurrency：并发线程数，设为CPU核数的两倍&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;skip_name_resolve：禁止对外部连接进行DNS解析，消除DNS解析时间，但需要所有远程主机用IP访问&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;key_buffer_size：索引块的缓存大小，增加会提升索引处理速度，对MyISAM表性能影响最大。对于内存4G左右，可设为256M或384M，通过查询show status like 'key_read%'，保证key_reads / key_read_requests在0.1%以下最好&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;innodb_buffer_pool_size：缓存数据块和索引块，对InnoDB表性能影响最大。通过查询show status like 'Innodb_buffer_pool_read%'，保证 (Innodb_buffer_pool_read_requests – Innodb_buffer_pool_reads) / Innodb_buffer_pool_read_requests越高越好&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;innodb_additional_mem_pool_size：InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小，当数据库对象非常多的时候，适当调整该参数的大小以确保所有数据都能存放在内存中提高访问效率，当过小的时候，MySQL会记录Warning信息到数据库的错误日志中，这时就需要该调整这个参数大小&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;innodb_log_buffer_size：InnoDB存储引擎的事务日志所使用的缓冲区，一般来说不建议超过32MB&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;query_cache_size：缓存MySQL中的ResultSet，也就是一条SQL语句执行的结果集，所以仅仅只能针对select语句。当某个表的数据有任何任何变化，都会导致所有引用了该表的select语句在Query Cache中的缓存数据失效。所以，当我们的数据变化非常频繁的情况下，使用Query Cache可能会得不偿失。根据命中率(Qcache_hits/(Qcache_hits+Qcache_inserts)*100))进行调整，一般不建议太大，256MB可能已经差不多了，大型的配置型静态数据可适当调大.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;可以通过命令show status like 'Qcache_%'查看目前系统Query catch使用大小&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;read_buffer_size：MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区，MySql会为它分配一段内存缓冲区。如果对表的顺序扫描请求非常频繁，可以通过增加该变量值以及内存缓冲区大小提高其性能&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;sort_buffer_size：MySql执行排序使用的缓冲大小。如果想要增加ORDER BY的速度，首先看是否可以让MySQL使用索引而不是额外的排序阶段。如果不能，可以尝试增加sort_buffer_size变量的大小&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;read_rnd_buffer_size：MySql的随机读缓冲区大小。当按任意顺序读取行时(例如，按照排序顺序)，将分配一个随机读缓存区。进行排序查询时，MySql会首先扫描一遍该缓冲，以避免磁盘搜索，提高查询速度，如果需要排序大量数据，可适当调高该值。但MySql会为每个客户连接发放该缓冲空间，所以应尽量适当设置该值，以避免内存开销过大。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;record_buffer：每个进行一个顺序扫描的线程为其扫描的每张表分配这个大小的一个缓冲区。如果你做很多顺序扫描，可能想要增加该值&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;thread_cache_size：保存当前没有与连接关联但是准备为后面新的连接服务的线程，可以快速响应连接的线程请求而无需创建新的&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;table_cache：类似于thread_cache_size，但用来缓存表文件，对InnoDB效果不大，主要用于MyISAM&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;升级硬件&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Scale up，这个不多说了，根据MySQL是CPU密集型还是I/O密集型，通过提升CPU和内存、使用SSD，都能显著提升MySQL性能&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;读写分离&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;也是目前常用的优化，从库读主库写，一般不要采用双主或多主引入很多复杂性，尽量采用文中的其他方案来提高性能。同时目前很多拆分的解决方案同时也兼顾考虑了读写分离&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;缓存&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缓存可以发生在这些层次：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;MySQL内部：在系统调优参数介绍了相关设置&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据访问层：比如MyBatis针对SQL语句做缓存，而Hibernate可以精确到单个记录，这里缓存的对象主要是持久化对象Persistence Object&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用服务层：这里可以通过编程手段对缓存做到更精准的控制和更多的实现策略，这里缓存的对象是数据传输对象Data Transfer Object&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Web层：针对web页面做缓存&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;浏览器客户端：用户端的缓存&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以根据实际情况在一个层次或多个层次结合加入缓存。这里重点介绍下服务层的缓存实现，目前主要有两种方式：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;直写式（Write Through）：在数据写入数据库后，同时更新缓存，维持数据库与缓存的一致性。这也是当前大多数应用缓存框架如Spring Cache的工作方式。这种实现非常简单，同步好，但效率一般。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;回写式（Write Back）：当有数据要写入数据库时，只会更新缓存，然后异步批量的将缓存数据同步到数据库上。这种实现比较复杂，需要较多的应用逻辑，同时可能会产生数据库与缓存的不同步，但效率非常高。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;表分区&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;MySQL在5.1版引入的分区是一种简单的水平拆分，用户需要在建表的时候加上分区参数，对应用是透明的无需修改代码&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对用户来说，分区表是一个独立的逻辑表，但是底层由多个物理子表组成，实现分区的代码实际上是通过对一组底层表的对象封装，但对SQL层来说是一个完全封装底层的黑盒子。MySQL实现分区的方式也意味着索引也是按照分区的子表定义，没有全局索引&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio="0.6370370370370371" data-s="300,640" data-type="png" data-w="540" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTwicSwdicfdrfrnk5RJ1ecBtyRP5LlHNC7cUTribm7VGGBHCHHBzX6Jkyg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;用户的SQL语句是需要针对分区表做优化，SQL条件中要带上分区条件的列，从而使查询定位到少量的分区上，否则就会扫描全部分区，可以通过EXPLAIN PARTITIONS来查看某条SQL语句会落在那些分区上，从而进行SQL优化，如下图5条记录落在两个分区上：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;mysql&lt;/span&gt;&lt;span class="crayon-o" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;&amp;gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;explain partitions select count&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;from user_partition where id &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: bold !important;"&gt;in&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;2&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;3&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;4&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;5&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;+----+-------------+----------------+------------+-------+---------------+---------+---------+------+------+--------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-o" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;| &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;id&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;select_type&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;table&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;          | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;partitions&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;type&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;  | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;possible_keys&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;key&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;     | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;key_len&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;ref&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;  | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;rows&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;Extra&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;                    |&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;+----+-------------+----------------+------------+-------+---------------+---------+---------+------+------+--------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-o" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;|  &lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;SIMPLE&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;      | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;user_partition&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;p1&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;p4&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;      | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;range&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;PRIMARY&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;       | &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;PRIMARY&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;8&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;       | &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;NULL&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; |    &lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;5&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; | &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Using &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;where&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;;&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;Using &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;index&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; |&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;+----+-------------+----------------+------------+-------+---------------+---------+---------+------+------+--------------------------+&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;row &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;in&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;set&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;0.00&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;sec&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;分区的好处是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;可以让单表存储更多的数据&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;分区表的数据更容易维护，可以通过清楚整个分区批量删除大量数据，也可以增加新的分区来支持新插入的数据。另外，还可以对一个独立分区进行优化、检查、修复等操作&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;部分查询能够从查询条件确定只落在少数分区上，速度会很快&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;分区表的数据还可以分布在不同的物理设备上，从而搞笑利用多个硬件设备&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可以使用分区表赖避免某些特殊瓶颈，例如InnoDB单个索引的互斥访问、ext3文件系统的inode锁竞争&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可以备份和恢复单个分区&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;分区的限制和缺点：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;一个表最多只能有1024个分区&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果分区字段中有主键或者唯一索引的列，那么所有主键列和唯一索引列都必须包含进来&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;分区表无法使用外键约束&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;NULL值会使分区过滤无效&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;所有分区必须使用相同的存储引擎&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;分区的类型：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;RANGE分区：基于属于一个给定连续区间的列值，把多行分配给分区&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;LIST分区：类似于按RANGE分区，区别在于LIST分区是基于列值匹配一个离散值集合中的某个值来进行选择&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;HASH分区：基于用户定义的表达式的返回值来进行选择的分区，该表达式使用将要插入到表中的这些行的列值进行计算。这个函数可以包含MySQL中有效的、产生非负整数值的任何表达式&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;KEY分区：类似于按HASH分区，区别在于KEY分区只支持计算一列或多列，且MySQL服务器提供其自身的哈希函数。必须有一列或多列包含整数值&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;分区适合的场景有：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;最适合的场景数据的时间序列性比较强，则可以按时间来分区，如下所示：&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;CREATE TABLE members&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;firstname VARCHAR&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;25&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;NOT&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;NULL&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;lastname VARCHAR&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;25&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;NOT&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;NULL&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;username VARCHAR&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;16&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;NOT&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;NULL&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;email VARCHAR&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;35&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;joined DATE &lt;/span&gt;&lt;span class="crayon-st" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important;"&gt;NOT&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-t" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: bold !important; color: rgb(128, 0, 128) !important;"&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;PARTITION BY RANGE&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;YEAR&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-v" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 45, 122) !important;"&gt;joined&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;)&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;PARTITION p0 VALUES LESS THAN&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1960&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;PARTITION p1 VALUES LESS THAN&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1970&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;PARTITION p2 VALUES LESS THAN&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1980&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;PARTITION p3 VALUES LESS THAN&lt;/span&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt; &lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;(&lt;/span&gt;&lt;span class="crayon-cn" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 153, 153) !important;"&gt;1990&lt;/span&gt;&lt;span class="crayon-sy" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;),&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 12px;"&gt;&lt;span class="crayon-h" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(0, 111, 224) !important;"&gt;    &lt;/span&gt;&lt;span class="crayon-e" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: teal !important;"&gt;PARTITION p4 VALUES LESS THAN &lt;/span&gt;&lt;span class="crayon-i" style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important;"&gt;MAXVALUE&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="border-width: 0px; border-style: initial; border-color: initial; font-family: inherit; height: inherit; font-size: inherit !important; line-height: inherit !important; font-weight: inherit !important; color: rgb(51, 51, 51) !important;"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;查询时加上时间范围条件效率会非常高，同时对于不需要的历史数据能很容的批量删除。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;如果数据有明显的热点，而且除了这部分数据，其他数据很少被访问到，那么可以将热点数据单独放在一个分区，让这个分区的数据能够有机会都缓存在内存中，查询时只访问一个很小的分区表，能够有效使用索引和缓存&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;另外MySQL有一种早期的简单的分区实现 – 合并表（merge table），限制较多且缺乏优化，不建议使用，应该用新的分区机制来替代&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;垂直拆分&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;垂直分库是根据数据库里面的数据表的相关性进行拆分，比如：一个数据库里面既存在用户数据，又存在订单数据，那么垂直拆分可以把用户数据放到用户库、把订单数据放到订单库。垂直分表是对数据表进行垂直拆分的一种方式，常见的是把一个多字段的大表按常用字段和非常用字段进行拆分，每个表里面的数据记录数一般情况下是相同的，只是字段不一样，使用主键关联&lt;/p&gt;&lt;p&gt;比如原始的用户表是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio="0.38301886792452833" data-s="300,640" data-type="png" data-w="530" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTQmlMvDwAeSkicX2wacPXXgNjZoGxxTVz8icthXoibocvxWhibx4FcSN8OA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;垂直拆分后是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.3433962264150943" data-type="png" data-w="530" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTEXz39Jrs8DIYrBPWfTav2xJpwJ3HLk93pvZ2HQx7dNrAqiaa2ZEwp7w/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;垂直拆分的优点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;可以使得行数据变小，一个数据块(Block)就能存放更多的数据，在查询时就会减少I/O次数(每次查询时读取的Block 就少)&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可以达到最大化利用Cache的目的，具体在垂直拆分的时候可以将不常变的字段放一起，将经常改变的放一起&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据维护简单&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缺点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;主键出现冗余，需要管理冗余列&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;会引起表连接JOIN操作（增加CPU开销）可以通过在业务服务器上进行join来减少数据库压力&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;依然存在单表数据量过大的问题（需要水平拆分）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;事务处理复杂&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;水平拆分&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;水平拆分是通过某种策略将数据分片来存储，分库内分表和分库两部分，每片数据会分散到不同的MySQL表或库，达到分布式的效果，能够支持非常大的数据量。前面的表分区本质上也是一种特殊的库内分表&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;库内分表，仅仅是单纯的解决了单一表数据过大的问题，由于没有把表的数据分布到不同的机器上，因此对于减轻MySQL服务器的压力来说，并没有太大的作用，大家还是竞争同一个物理机上的IO、CPU、网络，这个就要通过分库来解决&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;前面垂直拆分的用户表如果进行水平拆分，结果是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.5113207547169811" data-type="png" data-w="530" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTcJjAt4GR9PiadYeBC3ZhBULPWgibZxUYs0FjGMeaA7iaBVRBIDmptDghw/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;实际情况中往往会是垂直拆分和水平拆分的结合，即将Users_A_M和Users_N_Z再拆成Users和UserExtras，这样一共四张表&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;水平拆分的优点是:&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;不存在单库大数据和高并发的性能瓶颈&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用端改造较少&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;提高了系统的稳定性和负载能力&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缺点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;分片事务一致性难以解决&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;跨节点Join性能差，逻辑复杂&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据多次扩展难度跟维护量极大&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;分片原则&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;能不分就不分，参考单表优化&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;分片数量尽量少，分片尽量均匀分布在多个数据结点上，因为一个查询SQL跨分片越多，则总体性能越差，虽然要好于所有数据在一个分片的结果，只在必要的时候进行扩容，增加分片数量&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;分片规则需要慎重选择做好提前规划，分片规则的选择，需要考虑数据的增长模式，数据的访问模式，分片关联性问题，以及分片扩容问题，最近的分片策略为范围分片，枚举分片，一致性Hash分片，这几种分片都有利于扩容&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量不要在一个事务中的SQL跨越多个分片，分布式事务一直是个不好处理的问题&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查询条件尽量优化，尽量避免Select * 的方式，大量数据结果集下，会消耗大量带宽和CPU资源，查询尽量避免返回大量结果集，并且尽量为频繁使用的查询语句建立索引。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过数据冗余和表分区赖降低跨库Join的可能&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里特别强调一下分片规则的选择问题，如果某个表的数据有明显的时间特征，比如订单、交易记录等，则他们通常比较合适用时间范围分片，因为具有时效性的数据，我们往往关注其近期的数据，查询条件中往往带有时间字段进行过滤，比较好的方案是，当前活跃的数据，采用跨度比较短的时间段进行分片，而历史性的数据，则采用比较长的跨度存储。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;总体上来说，分片的选择是取决于最频繁的查询SQL的条件，因为不带任何Where语句的查询SQL，会遍历所有的分片，性能相对最差，因此这种SQL越多，对系统的影响越大，所以我们要尽量避免这种SQL的产生。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由于水平拆分牵涉的逻辑比较复杂，当前也有了不少比较成熟的解决方案。这些方案分为两大类：客户端架构和代理架构。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h5&gt;&lt;strong&gt;客户端架构&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过修改数据访问层，如JDBC、Data Source、MyBatis，通过配置来管理多个数据源，直连数据库，并在模块内完成数据的分片整合，一般以Jar包的方式呈现&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这是一个客户端架构的例子：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.69125" data-type="png" data-w="800" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTmfFtHJPuMfHYpxlSdqXRs78QCYvfCD65JVMqHl9p7mYXQrBfbZ1qwg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;可以看到分片的实现是和应用服务器在一起的，通过修改Spring JDBC层来实现&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;客户端架构的优点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;应用直连数据库，降低外围系统依赖所带来的宕机风险&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;集成成本低，无需额外运维的组件&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缺点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;限于只能在数据库访问层上做文章，扩展性一般，对于比较复杂的系统可能会力不从心&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将分片逻辑的压力放在应用服务器上，造成额外风险&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;&lt;strong&gt;代理架构&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;通过独立的中间件来统一管理所有数据源和数据分片整合，后端数据库集群对前端应用程序透明，需要独立部署和运维代理组件&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这是一个代理架构的例子：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.5584158415841585" data-type="png" data-w="505" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTJmVibpgUlTcPojU7S2Yyv6DZtEhqSHOtlDXg6WVjKp3WLfknQxTRvKg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;代理组件为了分流和防止单点，一般以集群形式存在，同时可能需要Zookeeper之类的服务组件来管理&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;代理架构的优点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;能够处理非常复杂的需求，不受数据库访问层原来实现的限制，扩展性强&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对于应用服务器透明且没有增加任何额外负载&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;缺点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;需部署和运维独立的代理中间件，成本高&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用需经过代理来连接数据库，网络上多了一跳，性能有损失且有额外风险&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;各方案比较&lt;/h5&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio="0.78748370273794" data-s="300,640" data-type="png" data-w="1534" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRT1OYF7YCCVUib6Gk1GUpvpW3HapuPdXTak8Y3hzuS3bRTIohxPNDTCbw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio="0.8457516339869281" data-s="300,640" data-type="png" data-w="1530" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTbmm5lVlklSEShkPTHzL0v7cckgDu02k5rHL4ps3khnjDQn4xMQoz3w/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio="0.5032594524119948" data-s="300,640" data-type="png" data-w="1534" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B15uxjemmDV0KGprlCD3rRTNbtBfV4RvZZRnmD7UibHTImZjevaX2lBEWEDg5UUMQpA0JZhrYLPrAg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如此多的方案，如何进行选择？可以按以下思路来考虑：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;确定是使用代理架构还是客户端架构。中小型规模或是比较简单的场景倾向于选择客户端架构，复杂场景或大规模系统倾向选择代理架构&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;具体功能是否满足，比如需要跨节点ORDER BY，那么支持该功能的优先考虑&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不考虑一年内没有更新的产品，说明开发停滞，甚至无人维护和技术支持&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;最好按大公司-&amp;gt;社区-&amp;gt;小公司-&amp;gt;个人这样的出品方顺序来选择&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;选择口碑较好的，比如github星数、使用者数量质量和使用者反馈&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开源的优先，往往项目有特殊需求可能需要改动源代码&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;按照上述思路，推荐以下选择：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;客户端架构：ShardingJDBC&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;代理架构：MyCat或者Atlas&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;兼容MySQL且可水平扩展的数据库&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;目前也有一些开源数据库兼容MySQL协议，如：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;TiDB&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Cubrid&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但其工业品质和MySQL尚有差距，且需要较大的运维投入，如果想将原始的MySQL迁移到可水平扩展的新数据库中，可以考虑一些云数据库：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;阿里云PetaData&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;阿里云OceanBase&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;腾讯云DCDB&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;NoSQL&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在MySQL上做Sharding是一种戴着镣铐的跳舞，事实上很多大表本身对MySQL这种RDBMS的需求并不大，并不要求ACID，可以考虑将这些表迁移到NoSQL，彻底解决水平扩展问题，例如：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;日志类、监控类、统计类数据&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;非结构化或弱结构化数据&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对事务要求不强，且无太多关联操作的数据&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1378343948924</guid></item><item><title>GitHub 开源的 MySQL 在线更改 Schema 工具</title><link>http://chuansong.me/n/1373206148049</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px; line-height: 25.6px;"&gt;英文：GitHub&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;译者：好雨科技&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;segmentfault.com/a/1190000006158503&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;MySQL在线更改schema的工具很多，如Percona的pt-online-schema-change、 Facebook的 OSC 和 LHM 等，但这些都是基于触发器（Trigger）的，今天咱们介绍的 gh-ost 号称是不需要触发器（Triggerless）支持的在线更改表结构的工具。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.33125" data-type="png" data-w="160" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B1Y7rYvwIhVAJNaBJCSpHAykJYKdmN8DGTqdt0PSSROicjIW4rBfyYknYqia6ZetpeShkoibNj4HicAwQ/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本文先介绍一下当前业界已经存在的这些工具的使用场景和原理，然后再详细介绍 gh-ost 的工作原理和特性。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;今天我们开源了GitHub内部使用的一款 不需要触发器支持的 MySQL 在线更改表结构的工具 gh-ost&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;开发 gh-ost 是为了应付GitHub在生产环境中面临的持续的、不断变化的在线修改表结构的需求。gh-ost 通过提供低影响、可控、可审计和操作友好的解决方案改变了现有的在线迁移表工具的工作模式。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;MySQL表迁移及结构更改操作是业界众所周知的问题，2009年以来已经可以通过在线（不停服务）变更的工具来解决。迅速增长，快速迭代的产品往往需要频繁的需改数据库的结构。增加/更改/删除/ 字段和索引等等，这些操作在MySQL中默认都会锁表，影响线上的服务。 向这种数据库结构层面的变更我们每天都会面临多次，当然这种操作不应该影响用户的正常服务。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在开始介绍 gh-ost 工具之前，咱们先来看一下当前现有的这些工具的解决方案。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;在线修改表结构，已存在的场景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如今，在线修改表结构可以通过下面的三种方式来完成：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;在从库上修改表结构，操作会在其他的从库上生效，将结构变更了的从库设置为主库&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用 MySQL InnoDB 存储引擎提供的在线DDL特性&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用在线修改表结构的工具。现在最流行的是 pt-online-schema-change 和 Facebook 的 OSC；当然还有 LHM 和比较原始的 oak-online-alter-table 工具。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;其他的还包括 Galera 集群的Schema滚动更新，以及一些其他的非InnoDB的存储引擎等待，在 GitHub 我们使用通用的 主-从 架构 和 InnoDB 存储引擎。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为什么我们决定开始一个新的解决方案，而不是使用上面的提到的这些呢？现有的每种解决方案都有其局限性，下文会对这些方式的普遍问题简单的说明一下，但会对基于触发器的在线变更工具的问题进行详细说明。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;基于主从复制的迁移方式需要很多的前置工作，如：大量的主机，较长的传输时间，复杂的管理等等。变更操作需要在一个指定的从库上或者基于sub-tree的主从结构中执行。需要的情况也比较多，如：主机宕机、主机从早先的备份中恢复数据、新主机加入到集群等等，所有这些情况都有可能对我们的操作造成影响。最要命的是可能这些操作一天要进行很多次，如果使用这种方法我们操作人员每天的效率是非常高的（译者注：现如今很少有人用这种方式了吧）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;MySQL针对Innodb存储引擎的在线DDL操作在开始之前都需要一个短时间排它锁(exclusive)来准备环境，所以alter命令发出后，会首先等待该表上的其它操作完成，在alter命令之后的请求会出现等待waiting meta data lock。同样在ddl结束之前，也要等待alter期间所有的事务完成，也会堵塞一小段时间，这对于繁忙的数据库服务来说危险系数是非常高的。另外DDL操作不能中断，如果中途kill掉，会造成长时间的事务回滚，还有可能造成元数据的损坏。它操作起来并不那么的Nice，不能限流和暂停，在大负载的环境中甚至会影响正常的业务。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;我们用了很多年的 pt-online-schema-change 工具。然而随着我们不断增长的业务和流量，我们遇到了很多的问题，我们必须考虑在操作中的哪些 危险操作 （译者注：pt工具集的文档中经常会有一些危险提示）。某些操作必须避开高峰时段来进行，否则MySQL可能就挂了。所有现存的在线表结构修改的工具都是利用了MySQL的触发器来执行的，这种方式有一些潜藏的问题。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;基于触发器的在线修改有哪些问题呢？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所有在线表结构修改工具的操作方式都类似：创建与原表结构一致的临时表，该临时表已经是按要求修改后的表结构了，缓慢增量的从原表中复制数据，同时记录原表的更改(所有的 INSERT, DELETE, UPDATE 操作) 并应用到临时表。当工具确认表数据已经同步完成，它会进行替换工作，将临时表更名为原表。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;pt-online-schema-change, LHM 和 oak-online-alter-table 这些工具都使用同步的方式，当原表有变更操作时利用一些事务的间隙时间将这些变化同步到临时表。Facebook 的工具使用异步的方式将变更写入到changelog表中，然后重复的将changelog表的变更应用到临时表。所有的这些工具都使用触发器来识别原表的变更操作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当表中的每一行数据有 INSERT, DELETE, UPDATE 操作时都会调用存储的触发器。一个触发器可能在一个事务空间中包含一系列查询操作。这样就会造成一个原子操作不单会在原表执行，还会调用相应的触发器执行多个操作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在基于触发器迁移实践中，遇到了如下的问题：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;触发器是以解释型代码的方式保存的。MySQL 不会预编译这些代码。 会在每次的事务空间中被调用，它们被添加到被操作的表的每个查询行为之前的分析和解释器中。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;锁表：触发器在原始表查询中共享相同的事务空间，而这些查询在这张表中会有竞争锁，触发器在另外一张表会独占竞争锁。在这种极端情况下，同步方式的锁争夺直接关系到主库的并发写性能。以我们的经验来说，在生产环境中当竞争锁接近或者结束时，数据库可能会由于竞争锁而被阻塞住。触发锁的另一个方面是创建或销毁时所需要的元数据锁。我们曾经遇到过在繁忙的表中当表结构修改完成后，删除触发器可能需要数秒到分钟的时间。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不可信：当主库的负载上升时，我们希望降速或者暂停操作，但基于触发器的操作并不能这么做。虽然它可以暂停行复制操作，但却不能暂停出触发器，如果删除触发器可能会造成数据丢失，因此触发器需要在整个操作过程中都要存在。在我们比较繁忙的服务器中就遇到过由于触发器占用CPU资源而将主库拖死的例子。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;并发迁移：我们或者其他的人可能比较关注多个同时修改表结构（不同的表）的场景。鉴于上述触发器的开销，我们没有兴趣同时对多个表进行在线修改操作，我们也不确定是否有人在生产环境中这样做过。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;测试：我们修改表结构可能只是为了测试，或者评估其负载开销。基于触发器的表结构修改操作只能通过基于语句复制的方式来进行模拟实验，离真实的主库操作还有一定的距离，不能真实的反映实际情况。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;gh-ost&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost GitHub 的在线 Schema 修改工具，下面工作原理图：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.4463768115942029" data-type="png" data-w="690" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B1Y7rYvwIhVAJNaBJCSpHAy9stPt24KaiaxmqGnhL3MBDaUNqELS2jpcccqMxHosMo4tydCOscjNmg/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 具有如下特性:&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;无触发器&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;轻量级&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可暂停&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可动态控制&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可审计&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可测试&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;值得信赖&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;无触发器&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 没有使用触发器。它通过分析binlog日志的形式来监听表中的数据变更。因此它的工作模式是异步的，只有当原始表的更改被提交后才会将变更同步到临时表（ghost table）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 要求binlog是RBR格式 ( 基于行的复制)；然而也不是说你就不能在基于SBR（基于语句的复制）日志格式的主库上执行在线变更操作。实际上是可以的。gh-ost 可以将从库的 SBR日志转换为RBR日志，只需要重新配置就可以了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;轻量级&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由于没有使用触发器，因此在操作的过程中对主库的影响是最小的。当然在操作的过程中也不用担心并发和锁的问题。 变更操作都是以流的形式顺序的写到binlog文件中，gh-ost只是读取他们并应用到gh-ost表中。实际上，gh-ost 通过读取binlog的写事件来进行顺序的行复制操作。因此，主库只会有一个单独连接顺序的将数据写入到临时表（ghost table）。这和ETL操作有很大的不同。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;可暂停&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;所有的写操作都是由gh-ost控制的，并且以异步的方式读取binlog，当限速的时候，gh-ost可以暂停向主库写入数据，限速意味着不会在主库进行复制，也不会有行更新。当限速时gh-ost会创建一个内部的跟踪（tracking）表，以最小的系统开销向这个表中写入心跳事件&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 支持多种方式的限速：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;负载: 为熟悉 pt-online-schema-change 工具的用户提供了类似的功能，可以设置MySQL中的状态阈值，如 Threads_running=30&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;复制延迟: gh-ost 内置了心跳机制，可以指定不同的从库，从而对主从的复制延迟时间进行监控，如果达到了设定的延迟阈值程序会自动进入限速模式。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;查询: 用户可以可以设置一个限流SQL，比如 SELECT HOUR(NOW()) BETWEEN 8 and 17 这样就可以动态的设置限流时间。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;标示文件: 可以通过创建一个标示文件来让程序限速，当删除文件后可以恢复正常操作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;用户命令: 可以动态的连接到 gh-ost (下文会提到) 通过网络连接的方式实现限速。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;可动态控制&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;现在的工具，当执行操作的过程中发现负载上升了，DBA不得不终止操作，重新配置参数，如 chunk-size，然后重新执行操作命令，我们发现这种方式效率非常低。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 可以通过 unix socket 文件或者TCP端口（可配置）的方式来监听请求，操作者可以在命令运行后更改相应的参数，参考下面的例子：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;echo throttle | socat - /tmp/gh-ost.sock 打开限速，同样的，可以使用 no-throttle 来关闭限流。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;改变执行参数: chunk-size=1500, max-lag-millis=2000, max-load=Thread_running=30 这些参数都可以在运行时变更。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;可审计&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;同样的，使用上文提到的程序接口可以获取 gh-ost 的状态。gh-ost 可以报告当前的进度，主要参数的配置以及当前服务器的标示等等。这些信息都可以通过网络接口取到，相对于传统的tail日志的方式要灵活很多。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;可测试&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;因为日志文件和主库负载关系不大，因此在从库上执行修改表结构的操作可以更真实的体现出这些操作锁产生的实际影响。(虽然不是十分理想，后续我们会做优化工作)。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 內建支持测试功能，通过使用 --test-on-replica 的参数来指定: 它可以在从库上进行变更操作，在操作结束时gh-ost 将会停止复制，交换表，反向交换表，保留2个表并保持同步，停止复制。可以在空闲时候测试和比较两个表的数据情况。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这是我们在GitHub的生产环境中的测试：我们生产环境中有多个从库；部分从库并不是为用户提供服务的，而是用来对所有表运行的连续覆盖迁移测试。我们生产环境中的表，小的可能没有数据，大的会达到数百GB，我们只是做个标记，并不会正在的修改表结构（engine=innodb）。当每一个迁移结束后会停止复制，我们会对原表和临时表的数据进行完整的checksum确保他们的数据一致性。然后我们会恢复复制，再去操作下一张表。我们的生产环境的从库中已经通过 gh-ost 成功的操作了很多表。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;值得信赖&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上文提到说了这么多，都是为了提高大家对 gh-ost 的信任程度。毕竟在业界它还是一个新手，类似的工具已经存在了很多年了。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;在第一次试手之前我们建议用户先在从库上测试，校验数据的一致性。我们已经在从库上成功的进行了数以千计的迁移操作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果在主库上使用 gh-ost 用户可以实时观察主库的负载情况，如果发现负载变化很大，可以通过上文提到的多种形式进行限速，直到负载恢复正常，然后再通过命令微调参数，这样可以动态的控制操作风险。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果迁移操作开始后预完成计时间（ETA）显示要到夜里2点才能完成，结束时候需要切换表，你是不是要留下来盯着？你可以通过标记文件让gh-ost推迟切换操作。gh-ost 会完成行复制，但并不会切换表，它会持续的将原表的数据更新操作同步到临时表中。你第二天来到办公室，删除标记文件或者通过接口 echo unpostpone 告诉gh-ost开始切换表。我们不想让我们的软件把使用者绑住，它应该是为我们拜托束缚。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;说到 ETA, --exact-rowcount 参数你可能会喜欢。相对于一条漫长的 SELECT COUNT(*) 语句，gh-ost 会预估出迁移操作所需要花费的时间，还会根据当前迁移的工作状况更新预估时间。虽然ETA的时间随时更改，但进度百分比的显示是准确的。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;gh-ost 操作模式&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 可以同时连接多个服务器，为了获取二进制的数据流，它会作为一个从库，将数据从一个库复制到另外一个。它有各种不同的操作模式，这取决于你的设置，配置，和要运行迁移环境。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class="" data-ratio="0.41739130434782606" data-type="png" data-w="690" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B1Y7rYvwIhVAJNaBJCSpHAydsdXNlUuER6JwSPIaBXQkhE8cWcapgh3wzb03OxYxqJlUkhXw8zgOQ/0?wx_fmt=png" style="border-width: 0px; border-style: initial; border-color: initial; margin: auto; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both;"/&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;a. 连接到从库，在主库做迁移&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这是 gh-ost 默认的工作方式。gh-ost 将会检查从库状态，找到集群结构中的主库并连接，接下来进行迁移操作：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;行数据在主库上读写&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;读取从库的二进制日志，将变更应用到主库&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在从库收集表格式，字段&amp;amp;索引，行数等信息&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在从库上读取内部的变更事件（如心跳事件）&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在主库切换表&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果你的主库的日志格式是 SBR，工具也可以正常工作。但从库必须启用二级制日志(log_bin, log_slave_updates) 并且设置 binlog_format=ROW ( gh-ost 是读取从库的二级制文件)。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果直接在主库上操作，当然也需要二进制日志格式是RBR。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;b. 连接到主库&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;如果你没有从库，或者不想使用从库，你可以直接在主库上操作。gh-ost 将会直接在主库上进行所有操作。你需要持续关注复制延迟问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;你的主库的二进制日志必须是 RBR 格式。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在这个模式中你必须指定 --allow-on-master 参数&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;c. 在从库迁移/测试&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该模式会在从库执行迁移操作。gh-ost 会简单的连接到主库，此后所有的操作都在从库执行，不会对主库进行任何的改动。整个操作过程中，gh-ost 将控制速度保证从库可以及时的进行数据同步&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;--migrate-on-replica 表示 gh-ost 会直接在从库上进行迁移操作。即使在复制运行阶段也可以进行表的切换操作。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;--test-on-replica 表示 迁移操作只是为了测试在切换之前复制会停止，然后会进行切换操作，然后在切换回来，你的原始表最终还是原始表。两个表都会保存下来，复制操作是停止的。你可以对这两个表进行一致性检查等测试操作。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;gh-ost at GitHub&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们已经在所有线上所有的数据库在线操作中使用了gh-ost ，我们每天都需要使用它，根据数据库修改需求，可能每天要运行多次。凭借其审计和控制功能我们已经将它集成到了ChatOps流程中。我们的工程师可以清醒的了解到迁移操作的进度，而且可以灵活的控制其行为。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;开源&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 在MIT的许可下发布到了开源社区。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;虽然gh-ost在使用中很稳定，我们还在不断的完善和改进。我们将其开源也欢迎社会各界的朋友能够参与和贡献。随后我们会发布 贡献和建议的页面。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们会积极的维护 gh-ost 项目，同时希望广大的用户可以尝试和测试这个工具，我们做了很大努力使之更值得信赖。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;译者注&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;gh-ost 是MySQL业界在线修改表结构工具中的一名新秀，通常我们都是通过Percona的pt-online-schema-change工具来做这项工作，gh-ost的出现给我们带来了一种全新的方式。本文是翻译了一篇gh-ost的介绍文章，还没有尝试过这个工具。欢迎喜欢尝鲜网友谈谈使用感受。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1373206148049</guid></item><item><title>如何构建高扩展性网站？</title><link>http://chuansong.me/n/1371153648333</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px; line-height: 25.6px;"&gt;来源：xingoo&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;www.cnblogs.com/xing901022/p/4425124.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本篇通过阅读《高扩展性网站的50条原则》，总结出以下内容。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一方面博主没有实际的架构经验，另一方面知识面也不够宽阔，所以只能系统的总结书中的要点，并根据自己的理解做些归纳。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;主要内容&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本书从多个方面围绕高扩展性提出了50条建议，一个高扩展性的网站会随着业务的发展、用户的增加，自由的扩展架构，从而轻松的应付网站的快速发展。下面看看本书的具体内容：&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="2.128125" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0JvuP18s9MVWMOvWqSgiciaLv11gtjdXU0eYlO2iahVU1dhTa1uT366aia1TFDFc3nMI3ibibohyXc8iadA/640?wx_fmt=jpeg" style="box-sizing: border-box !important; word-wrap: break-word !important; width: 670px !important; visibility: visible !important;" width="670px"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/h2&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;化简方程&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1 不要过度的设计&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;过度的设计相当于给系统增加了复杂度与维护的成本。而这些过度的设计，在正常的使用中，却没有太大的作用。往往是设计者自己认为很重要或者锦上添花的功能，实际用处不大。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2 设计时考虑到扩展性&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在设计时要遵循一下的设计原则：设计时考虑20倍的容量，实现时考虑3倍的容量，部署时考虑1.5的容量。一面项目扩大时，临时扩展造成的困难。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;3 把方案一简再简&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;应该遵循帕累托法则，20%的设计做了80%的工作，所以80%的时间，都应该放在这20%的设计上。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一个产品主要的功能其实都集中在几个点上，把这几个点设计好了，其他的都是些附加的功能而已。所以这核心的业务一定要保证足够的简洁易用。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;4 减少DNS查询&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;每个不同的域下的文件，加载时都需要查询DNS。比如cnblogs.com与i.cnblogs.com就属于不同的域。那么在查询DNS的时候，就会查询两次。当业务量很大时，就会造成一定的影响。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;5 尽可能减少对象&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;由于对象在浏览器访问时，需要加载。所以可以考虑减少请求文件的数量（数量与浏览器并发加载数有关），把一些对象尽量的合并。比如图标类的文件，可以合并成一个大的图片。合理的文件数量，会加速浏览器的访问加载。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;6 使用同一品牌的网络设备&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;由于一个http请求，可能通过很多物理设备。比如负载均衡器，交换机，路由器。所以尽量使用同一品牌的设备，会避免一些意外的情况。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;分布工作&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.7453125" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0JvuP18s9MVWMOvWqSgiciaLibdCEMyGFGOuggdlWT1dIY2PEicA5QGdGVUc5wLSItUy00AjeT70OnlQ/640?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both; box-sizing: border-box !important; word-wrap: break-word !important; width: 670px !important; visibility: visible !important;" width="670px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;7 X轴，横向复制&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这种事最简单的服务扩充，通过克隆或者复制实现，比如你的应用放在多个服务器上进行服务。常见的比如集群，负载均衡等等，数据库的读写分离。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;8 Y轴，拆分不同的东西&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;大型系统中，拆分不同的功能，比如注册、购买、查询、云盘。等等&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;9 Z轴，拆分不同的相似的东西&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如按照用户的级别，或者用户的地理位置等等拆分。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;横向扩展设计&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;10 设计横向的扩展方案&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;扩展包括横向、纵向。横向就是通过复制克隆应用，利用小型机集群扩展。纵向就是提高服务器的硬件以及网络设施。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;通过很多的案例都可以发现，单纯的升级硬件实现的纵向扩展，仅仅能解决一点点现实压力。而通过横向的集群扩展，却能够自由的实现伸缩。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;11 采用经济型系统&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;与上面的原则类似，采用高价格的服务器，并不能保证日后的良好性能。应该&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;使用普通的小型机集群扩展。&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;12 横向扩展数据中心&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;数据中心有很多的设计方案，比如&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;热冷站配置：使用热站提供服务，当热站崩溃时，使用冷站继续服务。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.6348684210526315" data-type="jpeg" data-w="608" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0JvuP18s9MVWMOvWqSgiciaLW918wOoOflgbFsiaSnNQh1riaZlWia6icuBr8ibVnMsjFU7iaotXdzib4Uia4Q/0?" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both; height: 425.378px !important; box-sizing: border-box !important; word-wrap: break-word !important; width: 670px !important;" width="670px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;推荐使用多个实时站点，成本更低，动态调用。缺点是增加了运维的难度。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;13 利用云技术进行设计&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;云计算的有点就是虚拟化，可以在业务峰值时，弹性的扩充设备。并且在日常处理用，归还该扩展。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;缺点是提高了应用于虚拟环境的耦合。后面提到利用物理设备，隔离业务，在虚拟化的云计算中，可能会对业务隔离错误排查造成一定的干扰。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;使用正确的工具&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;14 合理使用数据库&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;目前有许多的数据库版本，比如传统的关系型数据库Oracle、MySQl，还有比较新的非关系型数据库NoSql，比如MongoDB，以及内存数据库FastDB，还有专门针对SSD固态硬盘的Aerospike等等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;但是到了选型的时候，还是要一句个人的业务需求来定。看你的数据库要求的是速度，还是安全性等等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;15 防火墙，到处都是防火墙&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;防火墙可以对一些无效的访问进行拦截过滤。通常把一些CSS，静态文件，图片，JS等不采用防火墙，而关键的业务涉及到个人信息时采用。合理的设计防火墙，也会对网站的性能产生一定的影响。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;16 积极的利用日志文件&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;利用各种日志以及工具，实时的监控业务。不仅仅是监控服务器的内存CPU，还应该监控业务上的数据。比如splunk（提供日志的搜集，存储，搜索，图形化展示）。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不要做重复的工作&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;17 不要立即检查刚做过的工作&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如刚刚写如了数据，不要立即读取。虽然有些客户需要保证数据的完整，不能丢失。但是可以通过日志等记录，写完查这种做法，还是不推荐。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;18 停止重定向&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;重定向会消耗一定的延迟，计算资源。应该尽量避免&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;19 放松时序约束&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;大多数的关系型数据库讲究ACID属性，扩展时就造成一定的困扰。因此某些业务适当的放松时序约束，可以提高网站的性能。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如某站在预定酒店时，用户预定后，会等待酒店的审核。比如某宝，在提款时，进行范围时间的确认。这种就是扩大了时序约束，进而提高网站性能以及事务安全。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;积极利用缓存&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;20 利用CDN&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;可以利用CDN保存客户的数据和内容。大概的过程是，用户在进行网站访问时，转到CDN的服务器，CDN执行DNS查询，把用户请求分摊到不同的服务器。有很多的CDN服务商提供这种服务。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;21 使用过期头&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;针对不同的对象类型，使用过期头，减少对象请求。常见的HTTP对应属性为:public no-cahe max-age等等&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;22 缓存Ajax调用&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;正确修改Http头Last-Modified Cache-Control Expires等属性。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;23 利用页面缓存&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;缓存响应之前的冬天请求，降低web服务器的负载。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;24 利用应用缓存&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如针对某些特殊的用户，缓存其请求数据。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;25 利用对象缓存&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;适用于反复查询使用的数据对象。比如一个购物网站，缓存器热销产品数据。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;26 把对象缓存放在自己的层上&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;使用单独的缓层，易于扩展和维护。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;从错误中吸取教训&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;27 积极的学习&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一个公司有学习的氛围，才会衍生出更好的产品。学习的内容一方面包括客户的业务知识，一方面来自技术和运维领域。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;28 不要依靠QA发现失误&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;雇佣测试或者质量保证人员，最大的目的是为了检测产品的正确性。它能减少成本，提高开发人员的开发速度，因为开发人员不需要时刻关注代码的正确性，可以交给QA来测试。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;但是QA只负责发现问题，如何避免为题还是得依靠开发人员。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;29 没有回退的设计是失败的设计&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这里的回退，指的是产品发布的回退。如果碰上某些版本的BUG，可能需要交付之前可运行的版本，此时没有回退，就无法交付产品了。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这里推荐学习持续集成的相关内容。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;30 讨论失败并从中吸取教训&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不应该在同一个问题上失败两次，每次失败多进行总结是不可缺少的。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;数据库原则&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;关系型数据库的ACID属性：&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;原子性：一个事务要么全执行，要么都不执行，&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一致性：事务开始和结束时，所有数据状态要一致，&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;隔离性：事务的表现，是事务对数据库唯一的操作，&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;持久性：事务完成，操作不能更改。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;31 注意代价高的关系&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;应该在设计阶段完善的设计表的结构，等开发开始时，在增加某些列，可能会花费很高的代价。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;32 使用正确的数据库锁&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;数据库有很多锁的概念，比如隐式锁、显式锁、行锁、页锁、范围锁、表锁、数据库锁等等。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;不合理的使用锁，会影响网站的吞吐量。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;33 不要使用多阶段提交&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如两阶段提交：先表决，在提交。这回降低扩展性，因为在其提交事务完成前，是不能作其他操作的。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;34 不要使用select for update&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;因为FOR UPDATE从句会导致锁定行，降低事务处理的速度。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;35 不要选择所有的数据&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如select * from xxx;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这种做法第一是不开与数据的扩展，比如本来有四列数据，业务处理代码直接写死。当增加了一列数据时，就会导致出错；另外就是会查询出不必要的数据。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;或者inset into xxx values(xxxx);&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;这是当列信息不匹配时，也会出错。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;容错设计与故障控制&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;36 采用隔离故障的”泳道“&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;服务与数据的划分有很多种，比如容器，集群，池，分片，泳道。泳道意味着每个业务有自己的领域，不能跨泳道调用。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;37 不要信任单点故障&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;有很多系统设计成单点模式，当整个系统只是用该模块时，当出现单点故障，整个系统也就崩溃了。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;38 避免系统串联&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;比如一个系统有很多的组件组成，每个组件99.9%的安全性，当串联3个组件时，整个系统的可用性就变成了99.7%。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;39 确保能够启用/禁用功能&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;对于某些共享库，第三方服务，应该提供开启或者关闭的功能。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;避免或分发状态&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;40 努力实现无状态&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;实现状态会限制扩展性，增大成本&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;41 尽可能在浏览器端维护会话&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一方面降低服务器压力，另一方面任何的请求可以发送给任何的服务器。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;42 利用分布式缓存存放状态&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;使用独立的缓存层，利于扩展。有很多分布式的缓存方案，比如memcached。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;异步通信和消息总线&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;43 尽可能使用异步通信&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;异步通信，可以确保每个服务和层之间的独立性，这样易于早呢更加系统的扩展性和减小耦合度。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;44 确保消息总线能够扩展&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;尽量采用Y轴或者Z轴扩展，即按业务需求和功能扩展。因为单纯的复制或者克隆，反而会增加各个消息订阅者的监听数目。按照业务隔离，可以分离业务压力。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;45 避免让消息总线过度拥挤&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;衡量价值与消息的成本。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.7854671280276817" data-type="jpeg" data-w="578" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0JvuP18s9MVWMOvWqSgiciaL0aKlbq9VUzYCV60q7XDibWxej2EIGYtGSWmYvTHfMGMtnePm0UTIyZQ/640?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both; box-sizing: border-box !important; word-wrap: break-word !important; width: 670px !important; visibility: visible !important;" width="670px"/&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/h2&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(171, 25, 66); font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;其他原则&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;46 慎用第三方解决方案扩展&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;企业如果出现问题，那么寻找第三方能够解决燃眉之急。但是却不是长久之计，因为解决方案的提供商有很多客户，你的危机并不是他们的危机，所以不可能在关键时刻，尽职尽责。因此企业还是应该有一定的掌控力（这个词真是高大上！）。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;47 清除、归档和成本合理的存储&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;有一些不必要的数据，就应该定期的删除。一些略有价值的数据进行定期的归档直接删除。一些很有价值的数据，应该进行备份以及快速访问。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;48 删除事务处理中的商业智能&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;应该把产品系统与业务系统分离，提高产品的扩展性。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;避免业务扩展时，受到系统架构的限制。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;49 设计能够监控的应用&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;应该设计全局的监控策略，保证回答&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;”发生了 问题了吗？“&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;”哪里发生了问题？“&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;”发生了什么问题？“&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;”会发生问题吗？“&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;”能自动修复吗？“&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;img data-ratio="0.7171875" data-type="jpeg" data-w="640" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz/DmibiaFiaAI4B0JvuP18s9MVWMOvWqSgiciaLRHCdAf5fkPhbRuMIFAw6iakVOqCboDHtMzNRmjB6bvVZtmU8cKnlT6w/640?wx_fmt=jpeg" style="margin: auto; border-width: 0px; border-style: initial; border-color: initial; font-size: 0px; color: transparent; vertical-align: middle; display: block; clear: both; box-sizing: border-box !important; word-wrap: break-word !important; width: 670px !important; visibility: visible !important;" width="670px"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;50 要能胜任&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;应该在每个设计中涉及到最优秀的架构，不能完全依赖第三方的解决方案。&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一个简单优秀的架构，都是小而精的，如果单纯的依靠开源解决架构，虽然解决了问题，却会导致应用的臃肿。&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1371153648333</guid></item><item><title>PouchDB：一个开源的 JS 数据库</title><link>http://chuansong.me/n/1368024548538</link><description>&lt;div class="rich_media_content " id="js_content"&gt;
&lt;p style="white-space: normal; line-height: 25.6px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); text-align: center; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（点击&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; line-height: 22.4px; color: rgb(0, 128, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上方公众号&lt;/span&gt;&lt;span style="font-size: 14px; max-width: 100%; color: rgb(255, 41, 65); line-height: 22.4px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;，可快速关注）&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="white-space: normal; line-height: 25.6px;"&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px; line-height: 25.6px;"&gt;英语：PouchDB&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px; line-height: 25.6px;"&gt;译者：ITEYE - 赖信涛&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px;"&gt;&lt;span style="font-size: 14px;"&gt;链接：&lt;span style="color: rgb(62, 62, 62); background-color: rgb(255, 255, 255);"&gt;www.iteye.com/news/31968&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="white-space: normal; line-height: 25.6px;"&gt;&lt;span style="color: rgb(0, 176, 240);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;PouchDB 是一个受 Apache CouchDB 启发的开源JavaScript数据库，可以完美运行在浏览器中。设计初衷是，帮助Web开发者构建能在本地离线运行的App，一如在线时运行的一样。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;它能让应用程序离线时存储数据，并在回到线上时与服务器兼容，同步数据，保持用户数据的同步。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;什么是PouchDB？&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;PouchDB是CouchDB的JavaScript实现，目标是实现可以和CouchDB相媲美的API，可以在浏览器和Node.js运行。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;什么是CouchDB？&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;CouchDB是由Damien Katz于2015年写的NoSQL数据库，现在由Apache软件基金会负责维护。如果你是一个JavaScript开发者，你可能每天都在用CouchDB，因为它的核心技术驱动着npm。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;Couchbase、CouchDB等都是什么？&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;现在，有两个数据库的血缘可以追溯到CouchDB：Couchbase，和Cloudant。他们都是从CouchDB分离出来的产品。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;然而，这三种数据库都是使用了相同的CouchDBsync协议。这意味着PouchDB可与这三个数据库配合使用。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;换句话说，这些数据库像是电话运营商，而CouchDB同步协议是底层的基础技术。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;CouchDB的优势：HTTP和sync&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;现在已经有这么多SQL、NoSQL数据库了：MongoDB、PostgreSQL、MySQL等。那么为什么我们选择实现CouchDB，而不是别的呢？&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;CouchDB的优势有两点：HTTP和sync。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;HTTP：小而简单的协议&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当我们使用数据库时，经常需要在数据库和客户端的应用之间写类似转换层的东西，将数据库的查询语句转化成RESTful的HTTP调用。这些工作在编写的每一个App中被一次次开发重复着。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;CouchDB将我们拯救了出来！通过我们的客户端App，可以直接和数据库通讯。它使用HTTP作为主要的通讯方式，没有特殊的协议，没有特殊的驱动：只有REST和HTTP。你可以通过你的浏览器，curl或像Postman这样的REST客户端直接和CouchDB连接。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;换句话说，CouchDB是真正“为Web而生的数据库”。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;Sync：CouchDB的杀手级特性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;CouchDB另一个特性是，它从底向上都被设计成完全同步友好的数据库。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;举个例子，如果你担心客户端应用的潜在危险，你可以直接在欧洲设一个CouchDB，再在北美搞一个，亚洲搞一个。在这些数据库之间开启双向复制之后，客户端就可以使用其中任何一个。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;PouchDb使这一切都可以运行在你的浏览器里。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66); font-size: 18px;"&gt;&lt;strong&gt;讨论&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;PaulMest：我已经使用PouchDB作为React Native应用的数据库6个月了，用SQLite数据库作为后端的存储，这样我们就可以使用设备更多的存储空间，而不只是50M。它工作得非常好，在一个离线缓存中维护数据，然后再同步到Digtal Ocean上的CouchDB 2.0。 让它在React native里工作非常有挑战性。让我们的系统跟上PouchDB的更新也非常有挑战性。实际上我们使用PouchDB 5.4.5，因为6.x版本中有breaking change，我还没有时间去搞明白哪里不兼容。PouchDB社区（尤其是Nolan lawson)非常活跃，给出示例、听取反馈回答问题等都非常积极。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;ojanik：我们已经在产品环境中使用PouchDB大约15个月了。当初选择它是因为这是一个绿色软件，它给了我们两个优势：简单的离线支持、实时同步功能，配合后端的程序很方便。因为这个东西实际上就是一个带有本地缓存的Web App，部署新版本非常简单。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在架构方面，我们有大约有250个用户，每个都有独立的Couch数据库。我们还没有评估Couch 2.0，使用的还是Couch 1.6.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;然而，我们在使用的过程中，还是遇到了一些问题：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" border-width: 0px; border-style: initial; border-color: initial; margin-bottom: 20px; font-size: 15px; list-style-position: outside; list-style-image: initial; color: rgb(46, 46, 46) ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;载入时间问题。当你从0开始载入一个数据库时，非常耗时。初始化一个20-30M的数据库大约会花15-30分钟的时间，我们必须周期性地存储dump的文件，这样节省了一些时间。不过我觉得Couch2.0的同步协议已经解决了这个问题；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;浏览器限制。当我们超过了浏览器的容量显示（通常是iOS的Safari，50M），我们就不得不采取一些具有创造性的做法。现在我们的方案是，为每一个客户运行两个数据库，一个是完整版本的数据库，另一个只存在7-8天。Pouch向后者同步数据。我们在完整数据库和临时数据库之间周期性地进行过滤复制。在客户端，如果一个客户需要7天之前的数据，就将Pouch切换到在线模式，作为一个库从在线数据库中取得数据；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;处理冲突。因为CouchDB/PouchDB是分布式的，所以当用户基于相同的数据版本做了更新时，得当心冲突；&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;自定义后端逻辑。因为Pouch直接与Couch连接，所以不能在需要时完自定义后端逻辑。我们必须引入一个REST后台通道，以确保我们的后端在需要时运行额外的逻辑。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 14px;"&gt;觉得本文有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 18px;"&gt;&lt;strong&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;关注「数据库开发」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px; text-align: center;"&gt;&lt;span style="font-size: 20px;"&gt;&lt;span style="color: rgb(255, 169, 0); font-size: 16px;"&gt;看更多精选技术干货&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 25.6px; text-align: center;"&gt;&lt;span style="color: rgb(255, 169, 0);"&gt;&lt;img data-ratio="0.9166666666666666" data-s="300,640" data-type="png" data-w="600" src="http://read.html5.qq.com/image?src=forum&amp;amp;q=5&amp;amp;r=0&amp;amp;imgflag=7&amp;amp;imageUrl=http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B2sOp0oeiajw1p0x744u9Hib4rSfhhuv5HI8N8WqUoJdxQNWUfDIWtgOicy5T1XmVl9XEblJf30ovzcQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;</description><guid isPermaLink="false">http://chuansong.me/n/1368024548538</guid></item></channel></rss>